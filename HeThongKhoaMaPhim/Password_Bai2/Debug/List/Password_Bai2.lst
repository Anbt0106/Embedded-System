
AVRASM ver. 2.1.30  E:\Embedded\Embedded-System\HeThongKhoaMaPhim\Password_Bai2\Debug\List\Password_Bai2.asm Sun Dec 22 04:31:34 2024

E:\Embedded\Embedded-System\HeThongKhoaMaPhim\Password_Bai2\Debug\List\Password_Bai2.asm(1090): warning: Register r4 already defined by the .DEF directive
E:\Embedded\Embedded-System\HeThongKhoaMaPhim\Password_Bai2\Debug\List\Password_Bai2.asm(1091): warning: Register r5 already defined by the .DEF directive
E:\Embedded\Embedded-System\HeThongKhoaMaPhim\Password_Bai2\Debug\List\Password_Bai2.asm(1092): warning: Register r6 already defined by the .DEF directive
E:\Embedded\Embedded-System\HeThongKhoaMaPhim\Password_Bai2\Debug\List\Password_Bai2.asm(1093): warning: Register r7 already defined by the .DEF directive
E:\Embedded\Embedded-System\HeThongKhoaMaPhim\Password_Bai2\Debug\List\Password_Bai2.asm(1094): warning: Register r8 already defined by the .DEF directive
E:\Embedded\Embedded-System\HeThongKhoaMaPhim\Password_Bai2\Debug\List\Password_Bai2.asm(1095): warning: Register r9 already defined by the .DEF directive
E:\Embedded\Embedded-System\HeThongKhoaMaPhim\Password_Bai2\Debug\List\Password_Bai2.asm(1096): warning: Register r10 already defined by the .DEF directive
E:\Embedded\Embedded-System\HeThongKhoaMaPhim\Password_Bai2\Debug\List\Password_Bai2.asm(1097): warning: Register r11 already defined by the .DEF directive
E:\Embedded\Embedded-System\HeThongKhoaMaPhim\Password_Bai2\Debug\List\Password_Bai2.asm(1098): warning: Register r13 already defined by the .DEF directive
E:\Embedded\Embedded-System\HeThongKhoaMaPhim\Password_Bai2\Debug\List\Password_Bai2.asm(1099): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _miss=R4
                 	.DEF _miss_msb=R5
                 	.DEF _counter=R6
                 	.DEF _counter_msb=R7
                 	.DEF _dem_sai=R8
                 	.DEF _dem_sai_msb=R9
                 	.DEF _sai_toi_da=R10
                 	.DEF _sai_toi_da_msb=R11
                 	.DEF __lcd_x=R13
                 	.DEF __lcd_y=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 01a9 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0226 	JMP  _timer0_ovf_isr
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _font5x7:
000046 0705
000047 6020
000048 0000
000049 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
00004a 0000
00004b 5f00
00004c 0000
00004d 0700      	.DB  0x0,0x0,0x0,0x5F,0x0,0x0,0x0,0x7
00004e 0700
00004f 1400
000050 147f
000051 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
000052 2a24
000053 2a7f
000054 2312
000055 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
000056 6264
000057 4936
000058 2255
000059 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
00005a 0305
00005b 0000
00005c 1c00
00005d 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
00005e 0000
00005f 2241
000060 001c
000061 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
000062 2a1c
000063 0808
000064 3e08
000065 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
000066 5000
000067 0030
000068 0800
000069 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
00006a 0808
00006b 3000
00006c 0030
00006d 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
00006e 0810
00006f 0204
000070 513e
000071 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
000072 003e
000073 7f42
000074 0040
000075 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
000076 4951
000077 2146
000078 4541
000079 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
00007a 1418
00007b 7f12
00007c 2710
00007d 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
00007e 3945
00007f 4a3c
000080 4949
000081 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
000082 0971
000083 0305
000084 4936
000085 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
000086 0636
000087 4949
000088 1e29
000089 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
00008a 0036
00008b 0000
00008c 3656
00008d 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
00008e 0800
00008f 2214
000090 1441
000091 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
000092 1414
000093 2241
000094 0814
000095 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
000096 5101
000097 0609
000098 4932
000099 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
00009a 7e3e
00009b 1111
00009c 7e11
00009d 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
00009e 4949
00009f 3e36
0000a0 4141
0000a1 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
0000a2 417f
0000a3 2241
0000a4 7f1c
0000a5 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
0000a6 4149
0000a7 097f
0000a8 0109
0000a9 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
0000aa 4141
0000ab 3251
0000ac 087f
0000ad 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
0000ae 007f
0000af 7f41
0000b0 0041
0000b1 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
0000b2 3f41
0000b3 7f01
0000b4 1408
0000b5 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
0000b6 407f
0000b7 4040
0000b8 7f40
0000b9 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
0000ba 7f02
0000bb 047f
0000bc 1008
0000bd 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
0000be 4141
0000bf 3e41
0000c0 097f
0000c1 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
0000c2 3e06
0000c3 5141
0000c4 5e21
0000c5 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
0000c6 2919
0000c7 4646
0000c8 4949
0000c9 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
0000ca 0101
0000cb 017f
0000cc 3f01
0000cd 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
0000ce 3f40
0000cf 201f
0000d0 2040
0000d1 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
0000d2 1820
0000d3 7f20
0000d4 1463
0000d5 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000d6 0363
0000d7 7804
0000d8 0304
0000d9 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000da 4549
0000db 0043
0000dc 7f00
0000dd 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000de 0402
0000df 1008
0000e0 4120
0000e1 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000e2 0000
0000e3 0204
0000e4 0201
0000e5 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000e6 4040
0000e7 4040
0000e8 0100
0000e9 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000ea 2000
0000eb 5454
0000ec 7854
0000ed 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000ee 4444
0000ef 3838
0000f0 4444
0000f1 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000f2 4438
0000f3 4844
0000f4 387f
0000f5 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000f6 1854
0000f7 7e08
0000f8 0109
0000f9 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000fa 5414
0000fb 3c54
0000fc 087f
0000fd 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000fe 0078
0000ff 7d44
000100 0040
000101 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
000102 3d44
000103 0000
000104 107f
000105 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
000106 4100
000107 407f
000108 7c00
000109 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
00010a 7804
00010b 087c
00010c 0404
00010d 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
00010e 4444
00010f 3844
000110 147c
000111 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
000112 0808
000113 1414
000114 7c18
000115 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
000116 0404
000117 4808
000118 5454
000119 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
00011a 3f04
00011b 4044
00011c 3c20
00011d 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
00011e 7c20
00011f 201c
000120 2040
000121 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
000122 3040
000123 3c40
000124 2844
000125 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
000126 0c44
000127 5050
000128 3c50
000129 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
00012a 4c54
00012b 0044
00012c 3608
00012d 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
00012e 0000
00012f 007f
000130 0000
000131 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
000132 0008
000133 0102
000134 0402
000135 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
000136 4141
000137 7f41      	.DB  0x41,0x41,0x41,0x7F
                 __glcd_mask:
000138 0100
000139 0703
00013a 1f0f
00013b 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
E:\Embedded\Embedded-System\HeThongKhoaMaPhim\Password_Bai2\Debug\List\Password_Bai2.asm(1208): warning: .cseg .db misalignment - padding zero byte
00013c 00ff      	.DB  0xFF
                 _tbl10_G103:
00013d 2710
00013e 03e8
00013f 0064
000140 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000141 0001      	.DB  0x1,0x0
                 _tbl16_G103:
000142 1000
000143 0100
000144 0010
000145 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000146 0000
000147 0000      	.DB  0x0,0x0,0x0,0x0
000148 0000
000149 0004      	.DB  0x0,0x0,0x4,0x0
                 
                 _0x3:
00014a 0000
00014b 0001
00014c 0002
00014d 0003      	.DB  0x0,0x0,0x1,0x0,0x2,0x0,0x3,0x0
00014e 0004
00014f 0005
000150 0006
000151 0007      	.DB  0x4,0x0,0x5,0x0,0x6,0x0,0x7,0x0
E:\Embedded\Embedded-System\HeThongKhoaMaPhim\Password_Bai2\Debug\List\Password_Bai2.asm(1223): warning: .cseg .db misalignment - padding zero byte
000152 0008      	.DB  0x8
                 _0x0:
000153 4150
000154 5353
000155 4f57
000156 4452      	.DB  0x50,0x41,0x53,0x53,0x57,0x4F,0x52,0x44
000157 003f
000158 4150
000159 5353
00015a 4f57      	.DB  0x3F,0x0,0x50,0x41,0x53,0x53,0x57,0x4F
00015b 4452
00015c 203f
00015d 4e00
00015e 3f4f      	.DB  0x52,0x44,0x3F,0x20,0x0,0x4E,0x4F,0x3F
00015f 6b00
000160 6f68
000161 2061
000162 6874      	.DB  0x0,0x6B,0x68,0x6F,0x61,0x20,0x74,0x68
000163 6569
000164 2074
000165 6962
000166 4b00      	.DB  0x69,0x65,0x74,0x20,0x62,0x69,0x0,0x4B
000167 6f68
000168 2061
000169 6874
00016a 6569      	.DB  0x68,0x6F,0x61,0x20,0x74,0x68,0x69,0x65
00016b 2074
00016c 6962
00016d 5000
00016e 5341      	.DB  0x74,0x20,0x62,0x69,0x0,0x50,0x41,0x53
00016f 4553
000170 0044      	.DB  0x53,0x45,0x44,0x0
                 _0x2080060:
E:\Embedded\Embedded-System\HeThongKhoaMaPhim\Password_Bai2\Debug\List\Password_Bai2.asm(1234): warning: .cseg .db misalignment - padding zero byte
000171 0001      	.DB  0x1
                 _0x2080000:
000172 4e2d
000173 4e41
000174 4900
000175 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
E:\Embedded\Embedded-System\HeThongKhoaMaPhim\Password_Bai2\Debug\List\Password_Bai2.asm(1237): warning: .cseg .db misalignment - padding zero byte
000176 0000      	.DB  0x0
                 _0x20C0003:
000177 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000178 0008      	.DW  0x08
000179 0004      	.DW  0x04
00017a 028c      	.DW  __REG_VARS*2
                 
00017b 0011      	.DW  0x11
00017c 0592      	.DW  _keypad
00017d 0294      	.DW  _0x3*2
                 
00017e 000a      	.DW  0x0A
00017f 0500      	.DW  _0x37
000180 02a6      	.DW  _0x0*2
                 
000181 000b      	.DW  0x0B
000182 050a      	.DW  _0x37+10
000183 02b0      	.DW  _0x0*2+10
                 
000184 000a      	.DW  0x0A
000185 0515      	.DW  _0x37+21
000186 02a6      	.DW  _0x0*2
                 
000187 000a      	.DW  0x0A
000188 051f      	.DW  _0x37+31
000189 02a6      	.DW  _0x0*2
                 
00018a 000a      	.DW  0x0A
00018b 0529      	.DW  _0x37+41
00018c 02a6      	.DW  _0x0*2
                 
00018d 000a      	.DW  0x0A
00018e 0533      	.DW  _0x37+51
00018f 02a6      	.DW  _0x0*2
                 
000190 000a      	.DW  0x0A
000191 053d      	.DW  _0x37+61
000192 02a6      	.DW  _0x0*2
                 
000193 0004      	.DW  0x04
000194 0547      	.DW  _0x37+71
000195 02bb      	.DW  _0x0*2+21
                 
000196 000e      	.DW  0x0E
000197 054b      	.DW  _0x37+75
000198 02bf      	.DW  _0x0*2+25
                 
000199 000e      	.DW  0x0E
00019a 0559      	.DW  _0x37+89
00019b 02cd      	.DW  _0x0*2+39
                 
00019c 0007      	.DW  0x07
00019d 0567      	.DW  _0x37+103
00019e 02db      	.DW  _0x0*2+53
                 
00019f 0007      	.DW  0x07
0001a0 056e      	.DW  _0x37+110
0001a1 02db      	.DW  _0x0*2+53
                 
0001a2 0001      	.DW  0x01
0001a3 07b2      	.DW  __seed_G104
0001a4 02e2      	.DW  _0x2080060*2
                 
0001a5 0002      	.DW  0x02
0001a6 07b6      	.DW  __base_y_G106
0001a7 02ee      	.DW  _0x20C0003*2
                 
                 _0xFFFFFFFF:
0001a8 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
0001a9 94f8      	CLI
0001aa 27ee      	CLR  R30
0001ab bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0001ac e0f1      	LDI  R31,1
0001ad bff5      	OUT  MCUCR,R31
0001ae bfe5      	OUT  MCUCR,R30
0001af 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
0001b1 e08d      	LDI  R24,(14-2)+1
0001b2 e0a2      	LDI  R26,2
0001b3 27bb      	CLR  R27
                 __CLEAR_REG:
0001b4 93ed      	ST   X+,R30
0001b5 958a      	DEC  R24
0001b6 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0001b7 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0001b8 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0001b9 e0a0      	LDI  R26,LOW(__SRAM_START)
0001ba e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0001bb 93ed      	ST   X+,R30
0001bc 9701      	SBIW R24,1
0001bd f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0001be efe0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0001bf e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0001c0 9185      	LPM  R24,Z+
0001c1 9195      	LPM  R25,Z+
0001c2 9700      	SBIW R24,0
0001c3 f061      	BREQ __GLOBAL_INI_END
0001c4 91a5      	LPM  R26,Z+
0001c5 91b5      	LPM  R27,Z+
0001c6 9005      	LPM  R0,Z+
0001c7 9015      	LPM  R1,Z+
0001c8 01bf      	MOVW R22,R30
0001c9 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0001ca 9005      	LPM  R0,Z+
0001cb 920d      	ST   X+,R0
0001cc 9701      	SBIW R24,1
0001cd f7e1      	BRNE __GLOBAL_INI_LOOP
0001ce 01fb      	MOVW R30,R22
0001cf cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0001d0 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0001d1 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0001d2 bfed      	OUT  SPL,R30
0001d3 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0001d4 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0001d5 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0001d6 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0001d7 940c 039e 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;/*
                 ; * bai1.c
                 ; *
                 ; * Created: 12/8/2022 9:06:36 PM
                 ; * Author: Who
                 ; */
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <glcd.h>
                 ;#include <font5x7.h>
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <eeprom.h>
                 ;#include <hardware.c>
                 ;#include <delay.h>
                 ;#include <glcd.h>
                 ;#include <font5x7.h>
                 ;#include <alcd.h>
                 ;
                 ;int keypad[3][3] = {0,1,2,3,4,5,6,7,8};
                 
                 	.DSEG
                 ;
                 ;void init_register() {
                 ; 0000 000F void init_register() {
                 
                 	.CSEG
                 _init_register:
                 ; .FSTART _init_register
                 ;    // ban phim ma tran
                 ;    DDRF = 0b11101010;
0001d9 eeea      	LDI  R30,LOW(234)
0001da 93e0 0061 	STS  97,R30
                 ;    // DC
                 ;    DDRB.4 = 1;
0001dc 9abc      	SBI  0x17,4
                 ;    // servo
                 ;    DDRC.7 = 1;
0001dd 9aa7      	SBI  0x14,7
                 ;    //for servo inverse (nhung ko xuat xung PWM, can than cai USB drive)
                 ;    DDRB.5 = 1;
0001de 9abd      	SBI  0x17,5
                 ;    ADCSRA=0x83;
0001df e8e3      	LDI  R30,LOW(131)
0001e0 b9e6      	OUT  0x6,R30
                 ;}
0001e1 9508      	RET
                 ; .FEND
                 ;
                 ;// NOTE: DUNG CO CHE TAY VAO CAI LDR OR YOU WILL NEVER SEE IT COMING
                 ;int read() {
                 _read:
                 ; .FSTART _read
                 ;    char a, i, j;
                 ;    for(j = 0; j < 3; j++ ){
0001e2 940e 0b09 	CALL __SAVELOCR4
                 ;	a -> R17
                 ;	i -> R16
                 ;	j -> R19
0001e4 e030      	LDI  R19,LOW(0)
                 _0xB:
0001e5 3033      	CPI  R19,3
0001e6 f5a0      	BRSH _0xC
                 ;        if (j == 0) PORTF = 0b11111101;
0001e7 3030      	CPI  R19,0
0001e8 f419      	BRNE _0xD
0001e9 efed      	LDI  R30,LOW(253)
0001ea 93e0 0062 	STS  98,R30
                 ;        if (j == 1) PORTF = 0b11110111;
                 _0xD:
0001ec 3031      	CPI  R19,1
0001ed f419      	BRNE _0xE
0001ee efe7      	LDI  R30,LOW(247)
0001ef 93e0 0062 	STS  98,R30
                 ;        if (j == 2) PORTF = 0b11011111;
                 _0xE:
0001f1 3032      	CPI  R19,2
0001f2 f419      	BRNE _0xF
0001f3 edef      	LDI  R30,LOW(223)
0001f4 93e0 0062 	STS  98,R30
                 ;        for(i = 0; i < 3; i++){
                 _0xF:
0001f6 e000      	LDI  R16,LOW(0)
                 _0x11:
0001f7 3003      	CPI  R16,3
0001f8 f500      	BRSH _0x12
                 ;            if (i == 0){
0001f9 3000      	CPI  R16,0
0001fa f441      	BRNE _0x13
                 ;                a = PINF&0x04;
0001fb b1e0      	IN   R30,0x0
0001fc 70e4      	ANDI R30,LOW(0x4)
0001fd 2f1e      	MOV  R17,R30
                 ;                if(a != 0x04) {
0001fe 3014      	CPI  R17,4
0001ff f019      	BREQ _0x14
                 ;                    return keypad[i][j];
000200 940e 09b5 	CALL SUBOPT_0x0
000202 c0b1      	RJMP _0x216000C
                 ;                }
                 ;            }
                 _0x14:
                 ;            if (i == 1){
                 _0x13:
000203 3001      	CPI  R16,1
000204 f441      	BRNE _0x15
                 ;                a = PINF&0x10;
000205 b1e0      	IN   R30,0x0
000206 71e0      	ANDI R30,LOW(0x10)
000207 2f1e      	MOV  R17,R30
                 ;                if (a != 0x10) {
000208 3110      	CPI  R17,16
000209 f019      	BREQ _0x16
                 ;                    return keypad[i][j];
00020a 940e 09b5 	CALL SUBOPT_0x0
00020c c0a7      	RJMP _0x216000C
                 ;                }
                 ;            }
                 _0x16:
                 ;            if (i == 2){
                 _0x15:
00020d 3002      	CPI  R16,2
00020e f441      	BRNE _0x17
                 ;                a = PINF&0x01;
00020f b1e0      	IN   R30,0x0
000210 70e1      	ANDI R30,LOW(0x1)
000211 2f1e      	MOV  R17,R30
                 ;                if (a != 0x01) {
000212 3011      	CPI  R17,1
000213 f019      	BREQ _0x18
                 ;                    return keypad[i][j];
000214 940e 09b5 	CALL SUBOPT_0x0
000216 c09d      	RJMP _0x216000C
                 ;                }
                 ;            }
                 _0x18:
                 ;        }
                 _0x17:
000217 5f0f      	SUBI R16,-1
000218 cfde      	RJMP _0x11
                 _0x12:
                 ;    }
000219 5f3f      	SUBI R19,-1
00021a cfca      	RJMP _0xB
                 _0xC:
                 ;    return -1;
00021b efef      	LDI  R30,LOW(65535)
00021c efff      	LDI  R31,HIGH(65535)
00021d 940e 0b10 	CALL __LOADLOCR4
00021f c094      	RJMP _0x216000C
                 ;}
                 ; .FEND
                 ;
                 ;
                 ;void init_glcd(int bias, int vlcd) {
                 ;    GLCDINIT_t glcd_init_data;
                 ;    glcd_init_data.font=font5x7;
                 ;	bias -> Y+10
                 ;	vlcd -> Y+8
                 ;	glcd_init_data -> Y+0
                 ;    glcd_init_data.temp_coef=140;
                 ;    glcd_init_data.bias=bias;
                 ;    glcd_init_data.vlcd=vlcd;
                 ;    glcd_init(&glcd_init_data);
                 ;}
                 ;
                 ;
                 ;void init_lcd() {
                 _init_lcd:
                 ; .FSTART _init_lcd
                 ;    lcd_init(16);
000220 e1a0      	LDI  R26,LOW(16)
000221 940e 0904 	CALL _lcd_init
                 ;    lcd_clear();
000223 940e 08c4 	CALL _lcd_clear
                 ;}
000225 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;void adjustSpeed(int speed) {
                 ;    OCR0 = 255 - speed;
                 ;	speed -> Y+0
                 ;}
                 ;
                 ;void quay_nguoc_DC() {
                 ;    PORTB.5 = 1;
                 ;}
                 ;
                 ;void quay_DC() {
                 ;    adjustSpeed(120);
                 ;}
                 ;
                 ;void dung_DC() {
                 ;    adjustSpeed(0);
                 ;    PORTB.5 = 0;
                 ;}
                 ;
                 ;void init_timer() {
                 ;    // khoi tao timer 0 cho dong co
                 ;    ASSR=0<<AS0;
                 ;    TCCR0=(1<<WGM00) | (1<<COM01) | (1<<COM00) | (0<<WGM01) | (1<<CS02) | (0<<CS01) | (0<<CS00);
                 ;    TCNT0=0x00;
                 ;    adjustSpeed(0);
                 ;
                 ;    // Timer 1 (0.1 ms) cho den va servo
                 ;    TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<COM1C1) | (0<<COM1C0) | (0<<WGM11) | (0<<WGM10);
                 ;    TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (1<<CS10);
                 ;    TCNT1H=0xFC;
                 ;    TCNT1L=0xE0;
                 ;    TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (1<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
                 ;    ETIMSK=(0<<TICIE3) | (0<<OCIE3A) | (0<<OCIE3B) | (0<<TOIE3) | (0<<OCIE3C) | (0<<OCIE1C);
                 ;    #asm("sei")
                 ;}
                 ;
                 ;// macro for easier usage
                 ;#define read_eeprom_word(address) eeprom_read_word ((const unsigned int*)address)
                 ;#define write_eeprom_word(address,value) eeprom_write_word ((unsigned int*)address,(unsigned int)value)
                 ;#define update_eeprom_word(address,value) eeprom_update_word ((unsigned int*)address,(unsigned int)value)
                 ;unsigned int EEMEM my_eeprom;
                 ;
                 ;char tmp[10];
                 ;char tmp2[10];
                 ;int miss = 0;
                 ;int counter = 0;
                 ;int dem_sai = 0;
                 ;int sai_toi_da = 4;
                 ;
                 ;// Timer 0 overflow interrupt service routine with 1 ms
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0000 0020 {
                 _timer0_ovf_isr:
                 ; .FSTART _timer0_ovf_isr
000226 920a      	ST   -Y,R0
000227 93ea      	ST   -Y,R30
000228 93fa      	ST   -Y,R31
000229 b7ef      	IN   R30,SREG
00022a 93ea      	ST   -Y,R30
                 ; 0000 0021     TCNT0=0x06;
00022b e0e6      	LDI  R30,LOW(6)
00022c bfe2      	OUT  0x32,R30
                 ; 0000 0022     // Place your code here
                 ; 0000 0023     if (dem_sai >= sai_toi_da) {
                +
00022d 148a     +CP R8 , R10
00022e 049b     +CPC R9 , R11
                 	__CPWRR 8,9,10,11
00022f f0bc      	BRLT _0x1D
                 ; 0000 0024         if (counter == 2000)
000230 ede0      	LDI  R30,LOW(2000)
000231 e0f7      	LDI  R31,HIGH(2000)
000232 15e6      	CP   R30,R6
000233 05f7      	CPC  R31,R7
000234 f411      	BRNE _0x1E
                 ; 0000 0025             counter  = 0;
000235 2466      	CLR  R6
000236 2477      	CLR  R7
                 ; 0000 0026 
                 ; 0000 0027         if (counter == 0) {
                 _0x1E:
000237 2c06      	MOV  R0,R6
000238 2807      	OR   R0,R7
000239 f411      	BRNE _0x1F
                 ; 0000 0028             PORTD.4 = 0;
00023a 9894      	CBI  0x12,4
                 ; 0000 0029             PORTD.5 = 1;
00023b 9a95      	SBI  0x12,5
                 ; 0000 002A         }
                 ; 0000 002B 
                 ; 0000 002C         if (counter == 1000) {
                 _0x1F:
00023c eee8      	LDI  R30,LOW(1000)
00023d e0f3      	LDI  R31,HIGH(1000)
00023e 15e6      	CP   R30,R6
00023f 05f7      	CPC  R31,R7
000240 f411      	BRNE _0x24
                 ; 0000 002D             PORTD.5 = 0;
000241 9895      	CBI  0x12,5
                 ; 0000 002E             PORTD.4 = 1;
000242 9a94      	SBI  0x12,4
                 ; 0000 002F         }
                 ; 0000 0030         counter++;
                 _0x24:
000243 01f3      	MOVW R30,R6
000244 9631      	ADIW R30,1
000245 013f      	MOVW R6,R30
                 ; 0000 0031     }
                 ; 0000 0032     else {
000246 c002      	RJMP _0x29
                 _0x1D:
                 ; 0000 0033         PORTD.4 = 0;
000247 9894      	CBI  0x12,4
                 ; 0000 0034         PORTD.5 = 0;
000248 9895      	CBI  0x12,5
                 ; 0000 0035     }
                 _0x29:
                 ; 0000 0036 }
000249 91e9      	LD   R30,Y+
00024a bfef      	OUT  SREG,R30
00024b 91f9      	LD   R31,Y+
00024c 91e9      	LD   R30,Y+
00024d 9009      	LD   R0,Y+
00024e 9518      	RETI
                 ; .FEND
                 ;
                 ;
                 ;// "inherited" from tai lieu thuc hanh
                 ;
                 ;void mainScreen(unsigned char * c, int pass, int remaining) {
                 ; 0000 003B void mainScreen(unsigned char * c, int pass, int remaining) {
                 _mainScreen:
                 ; .FSTART _mainScreen
                 ; 0000 003C     glcd_clear();
00024f 940e 09c6 	CALL SUBOPT_0x1
                 ;	*c -> Y+4
                 ;	pass -> Y+2
                 ;	remaining -> Y+0
                 ; 0000 003D     itoa(remaining, tmp2);
                 ; 0000 003E     glcd_outtextxy(5, 10, tmp2);
                 ; 0000 003F     glcd_outtextxy(15, 20, c);
000251 81ae      	LDD  R26,Y+6
000252 81bf      	LDD  R27,Y+6+1
000253 940e 083c 	CALL _glcd_outtextxy
                 ; 0000 0040     if (pass != -1) {
000255 81aa      	LDD  R26,Y+2
000256 81bb      	LDD  R27,Y+2+1
000257 3faf      	CPI  R26,LOW(0xFFFF)
000258 efef      	LDI  R30,HIGH(0xFFFF)
000259 07be      	CPC  R27,R30
00025a f041      	BREQ _0x2E
                 ; 0000 0041         itoa(pass, tmp);
00025b 81ea      	LDD  R30,Y+2
00025c 81fb      	LDD  R31,Y+2+1
00025d 940e 09df 	CALL SUBOPT_0x2
                 ; 0000 0042         glcd_outtextxy(30, 30, tmp);
00025f eaa4      	LDI  R26,LOW(_tmp)
000260 e0b5      	LDI  R27,HIGH(_tmp)
000261 940e 083c 	CALL _glcd_outtextxy
                 ; 0000 0043     }
                 ; 0000 0044 }
                 _0x2E:
000263 940c 054c 	JMP  _0x2160009
                 ; .FEND
                 ;
                 ;void mainScreen2(unsigned char * c, char pass[], int pos, int remaining) {
                 ; 0000 0046 void mainScreen2(unsigned char * c, char pass[], int pos, int remaining) {
                 _mainScreen2:
                 ; .FSTART _mainScreen2
                 ; 0000 0047     glcd_clear();
000265 940e 09c6 	CALL SUBOPT_0x1
                 ;	*c -> Y+6
                 ;	pass -> Y+4
                 ;	pos -> Y+2
                 ;	remaining -> Y+0
                 ; 0000 0048     itoa(remaining, tmp2);
                 ; 0000 0049     glcd_outtextxy(5, 10, tmp2);
                 ; 0000 004A     glcd_outtextxy(15, 20, c);
000267 85a8      	LDD  R26,Y+8
000268 85b9      	LDD  R27,Y+8+1
000269 940e 083c 	CALL _glcd_outtextxy
                 ; 0000 004B     if (pass != -1) {
00026b 81ac      	LDD  R26,Y+4
00026c 81bd      	LDD  R27,Y+4+1
00026d 3faf      	CPI  R26,LOW(0xFFFF)
00026e efef      	LDI  R30,HIGH(0xFFFF)
00026f 07be      	CPC  R27,R30
000270 f041      	BREQ _0x2F
                 ; 0000 004C         glcd_outtextxy(pos, 30, pass);
000271 81ea      	LDD  R30,Y+2
000272 93ea      	ST   -Y,R30
000273 e1ee      	LDI  R30,LOW(30)
000274 93ea      	ST   -Y,R30
000275 81ae      	LDD  R26,Y+6
000276 81bf      	LDD  R27,Y+6+1
000277 940e 083c 	CALL _glcd_outtextxy
                 ; 0000 004D     }
                 ; 0000 004E }
                 _0x2F:
000279 9628      	ADIW R28,8
00027a 9508      	RET
                 ; .FEND
                 ;
                 ;void mainScreen3(unsigned char * c, int pass, int pos, char pass_ano[], int remaining) {
                 ; 0000 0050 void mainScreen3(unsigned char * c, int pass, int pos, char pass_ano[], int remaining) {
                 _mainScreen3:
                 ; .FSTART _mainScreen3
                 ; 0000 0051     glcd_clear();
00027b 940e 09c6 	CALL SUBOPT_0x1
                 ;	*c -> Y+8
                 ;	pass -> Y+6
                 ;	pos -> Y+4
                 ;	pass_ano -> Y+2
                 ;	remaining -> Y+0
                 ; 0000 0052     itoa(remaining, tmp2);
                 ; 0000 0053     glcd_outtextxy(5, 10, tmp2);
                 ; 0000 0054     glcd_outtextxy(15, 20, c);
00027d 85aa      	LDD  R26,Y+10
00027e 85bb      	LDD  R27,Y+10+1
00027f 940e 083c 	CALL _glcd_outtextxy
                 ; 0000 0055     if (pass != -1) {
000281 81ae      	LDD  R26,Y+6
000282 81bf      	LDD  R27,Y+6+1
000283 3faf      	CPI  R26,LOW(0xFFFF)
000284 efef      	LDI  R30,HIGH(0xFFFF)
000285 07be      	CPC  R27,R30
000286 f081      	BREQ _0x30
                 ; 0000 0056         itoa(pass, tmp);
000287 81ee      	LDD  R30,Y+6
000288 81ff      	LDD  R31,Y+6+1
000289 940e 09df 	CALL SUBOPT_0x2
                 ; 0000 0057         glcd_outtextxy(30, 30, pass_ano);
00028b 81ac      	LDD  R26,Y+4
00028c 81bd      	LDD  R27,Y+4+1
00028d 940e 083c 	CALL _glcd_outtextxy
                 ; 0000 0058         glcd_outtextxy(pos, 30, tmp);
00028f 81ec      	LDD  R30,Y+4
000290 93ea      	ST   -Y,R30
000291 e1ee      	LDI  R30,LOW(30)
000292 93ea      	ST   -Y,R30
000293 eaa4      	LDI  R26,LOW(_tmp)
000294 e0b5      	LDI  R27,HIGH(_tmp)
000295 940e 083c 	CALL _glcd_outtextxy
                 ; 0000 0059     }
                 ; 0000 005A }
                 _0x30:
000297 c104      	RJMP _0x216000B
                 ; .FEND
                 ;
                 ;void mainScreenLcd(unsigned char * c, char pass_ano1[]){
                 ; 0000 005C void mainScreenLcd(unsigned char * c, char pass_ano1[]){
                 _mainScreenLcd:
                 ; .FSTART _mainScreenLcd
                 ; 0000 005D     lcd_clear();
000298 93ba      	ST   -Y,R27
000299 93aa      	ST   -Y,R26
                 ;	*c -> Y+2
                 ;	pass_ano1 -> Y+0
00029a 940e 09e9 	CALL SUBOPT_0x3
                 ; 0000 005E     lcd_gotoxy(0, 0);
                 ; 0000 005F     lcd_puts(c);
00029c 81aa      	LDD  R26,Y+2
00029d 81bb      	LDD  R27,Y+2+1
00029e 940e 08e7 	CALL _lcd_puts
                 ; 0000 0060     lcd_gotoxy(0, 1);
0002a0 e0e0      	LDI  R30,LOW(0)
0002a1 93ea      	ST   -Y,R30
0002a2 e0a1      	LDI  R26,LOW(1)
0002a3 940e 08b8 	CALL _lcd_gotoxy
                 ; 0000 0061     lcd_putchar(pass_ano1[0]);
0002a5 81a8      	LD   R26,Y
0002a6 81b9      	LDD  R27,Y+1
0002a7 91ac      	LD   R26,X
0002a8 940e 08d0 	CALL _lcd_putchar
                 ; 0000 0062     lcd_putchar(pass_ano1[1]);
0002aa 81e8      	LD   R30,Y
0002ab 81f9      	LDD  R31,Y+1
0002ac 81a1      	LDD  R26,Z+1
0002ad 940e 08d0 	CALL _lcd_putchar
                 ; 0000 0063     lcd_putchar(pass_ano1[2]);
0002af 81e8      	LD   R30,Y
0002b0 81f9      	LDD  R31,Y+1
0002b1 81a2      	LDD  R26,Z+2
0002b2 940e 08d0 	CALL _lcd_putchar
                 ; 0000 0064 }
                 _0x216000C:
0002b4 9624      	ADIW R28,4
0002b5 9508      	RET
                 ; .FEND
                 ;
                 ;void exe() {
                 ; 0000 0066 void exe() {
                 _exe:
                 ; .FSTART _exe
                 ; 0000 0067     //char pass_ano[3];
                 ; 0000 0068     unsigned int input_times = 0, input = -1, pass = 0, require = 118, reader;
                 ; 0000 0069     reader = read_eeprom_word(&my_eeprom);
0002b6 9724      	SBIW R28,4
0002b7 e7e6      	LDI  R30,LOW(118)
0002b8 83ea      	STD  Y+2,R30
0002b9 e0e0      	LDI  R30,LOW(0)
0002ba 83eb      	STD  Y+3,R30
0002bb 940e 0b07 	CALL __SAVELOCR6
                 ;	input_times -> R16,R17
                 ;	input -> R18,R19
                 ;	pass -> R20,R21
                 ;	require -> Y+8
                 ;	reader -> Y+6
0002bd 940e 09f0 	CALL SUBOPT_0x4
0002bf e0a0      	LDI  R26,LOW(_my_eeprom)
0002c0 e0b0      	LDI  R27,HIGH(_my_eeprom)
0002c1 940e 0ada 	CALL __EEPROMRDW
0002c3 83ee      	STD  Y+6,R30
0002c4 83ff      	STD  Y+6+1,R31
                 ; 0000 006A     if (reader >= 100 && reader <= 999)
0002c5 81ae      	LDD  R26,Y+6
0002c6 81bf      	LDD  R27,Y+6+1
0002c7 36a4      	CPI  R26,LOW(0x64)
0002c8 e0e0      	LDI  R30,HIGH(0x64)
0002c9 07be      	CPC  R27,R30
0002ca f020      	BRLO _0x32
0002cb 3ea8      	CPI  R26,LOW(0x3E8)
0002cc e0e3      	LDI  R30,HIGH(0x3E8)
0002cd 07be      	CPC  R27,R30
0002ce f008      	BRLO _0x33
                 _0x32:
0002cf c004      	RJMP _0x31
                 _0x33:
                 ; 0000 006B         require = reader;
0002d0 81ee      	LDD  R30,Y+6
0002d1 81ff      	LDD  R31,Y+6+1
0002d2 87e8      	STD  Y+8,R30
0002d3 87f9      	STD  Y+8+1,R31
                 ; 0000 006C     dem_sai = 0;
                 _0x31:
0002d4 2488      	CLR  R8
0002d5 2499      	CLR  R9
                 ; 0000 006D     while (pass != require) {
                 _0x34:
0002d6 85e8      	LDD  R30,Y+8
0002d7 85f9      	LDD  R31,Y+8+1
0002d8 17e4      	CP   R30,R20
0002d9 07f5      	CPC  R31,R21
0002da f409      	BRNE PC+2
0002db c0a8      	RJMP _0x36
                 ; 0000 006E         char pass_ano[3], pass_ano1[3];
                 ; 0000 006F         pass_ano[0]=' '; pass_ano1[0]=' ';
0002dc 9726      	SBIW R28,6
                 ;	require -> Y+14
                 ;	reader -> Y+12
                 ;	pass_ano -> Y+3
                 ;	pass_ano1 -> Y+0
0002dd e2e0      	LDI  R30,LOW(32)
0002de 83eb      	STD  Y+3,R30
0002df 83e8      	ST   Y,R30
                 ; 0000 0070         pass_ano[1]=' '; pass_ano1[1]=' ';
0002e0 83ec      	STD  Y+4,R30
0002e1 83e9      	STD  Y+1,R30
                 ; 0000 0071         pass_ano[2]=' '; pass_ano1[2]=' ';
0002e2 83ed      	STD  Y+5,R30
0002e3 83ea      	STD  Y+2,R30
                 ; 0000 0072         mainScreen("PASSWORD?", -1, sai_toi_da-dem_sai);
                +
0002e4 e0e0     +LDI R30 , LOW ( _0x37 + ( 0 ) )
0002e5 e0f5     +LDI R31 , HIGH ( _0x37 + ( 0 ) )
                 	__POINTW1MN _0x37,0
0002e6 93fa      	ST   -Y,R31
0002e7 93ea      	ST   -Y,R30
0002e8 efef      	LDI  R30,LOW(65535)
0002e9 efff      	LDI  R31,HIGH(65535)
0002ea 940e 09f7 	CALL SUBOPT_0x5
0002ec df62      	RCALL _mainScreen
                 ; 0000 0073 
                 ; 0000 0074         lcd_clear();
0002ed 940e 09e9 	CALL SUBOPT_0x3
                 ; 0000 0075         lcd_gotoxy(0,0);
                 ; 0000 0076         lcd_puts("PASSWORD? ");
                +
0002ef e0aa     +LDI R26 , LOW ( _0x37 + ( 10 ) )
0002f0 e0b5     +LDI R27 , HIGH ( _0x37 + ( 10 ) )
                 	__POINTW2MN _0x37,10
0002f1 940e 08e7 	CALL _lcd_puts
                 ; 0000 0077         lcd_putchar(sai_toi_da-dem_sai+'0');
0002f3 940e 09fd 	CALL SUBOPT_0x6
                 ; 0000 0078         while (input_times != 3) {
                 _0x38:
0002f5 e0e3      	LDI  R30,LOW(3)
0002f6 e0f0      	LDI  R31,HIGH(3)
0002f7 17e0      	CP   R30,R16
0002f8 07f1      	CPC  R31,R17
0002f9 f409      	BRNE PC+2
0002fa c054      	RJMP _0x3A
                 ; 0000 0079             input = read();
0002fb dee6      	RCALL _read
0002fc 019f      	MOVW R18,R30
                 ; 0000 007A             delay_ms(200);
0002fd eca8      	LDI  R26,LOW(200)
0002fe e0b0      	LDI  R27,0
0002ff 940e 0aaf 	CALL _delay_ms
                 ; 0000 007B             if (input != -1) {
000301 efef      	LDI  R30,LOW(65535)
000302 efff      	LDI  R31,HIGH(65535)
000303 17e2      	CP   R30,R18
000304 07f3      	CPC  R31,R19
000305 f409      	BRNE PC+2
000306 c047      	RJMP _0x3B
                 ; 0000 007C                 input_times++;
                +
000307 5f0f     +SUBI R16 , LOW ( - 1 )
000308 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 007D                 pass = pass * 10 + input;
                +
000309 e0aa     +LDI R26 , 10
00030a 9fa4     +MUL R26 , R20
00030b 01f0     +MOVW R30 , R0
00030c 9fa5     +MUL R26 , R21
00030d 0df0     +ADD R31 , R0
                 	__MULBNWRU 20,21,10
00030e 0fe2      	ADD  R30,R18
00030f 1ff3      	ADC  R31,R19
000310 01af      	MOVW R20,R30
                 ; 0000 007E                 pass_ano1[input_times-1] = input+'0';
000311 940e 0a03 	CALL SUBOPT_0x7
000313 2fe2      	MOV  R30,R18
000314 5de0      	SUBI R30,-LOW(48)
000315 93ec      	ST   X,R30
                 ; 0000 007F                 mainScreen2("PASSWORD?", pass_ano, 30, sai_toi_da-dem_sai);
                +
000316 e1e5     +LDI R30 , LOW ( _0x37 + ( 21 ) )
000317 e0f5     +LDI R31 , HIGH ( _0x37 + ( 21 ) )
                 	__POINTW1MN _0x37,21
000318 940e 0a09 	CALL SUBOPT_0x8
00031a df4a      	RCALL _mainScreen2
                 ; 0000 0080                 mainScreen3("PASSWORD?", input, 30+(input_times-1)*4+input_times, pass_ano, sai_toi_da-dem_sai);
                +
00031b e1ef     +LDI R30 , LOW ( _0x37 + ( 31 ) )
00031c e0f5     +LDI R31 , HIGH ( _0x37 + ( 31 ) )
                 	__POINTW1MN _0x37,31
00031d 93fa      	ST   -Y,R31
00031e 93ea      	ST   -Y,R30
00031f 933a      	ST   -Y,R19
000320 932a      	ST   -Y,R18
000321 01f8      	MOVW R30,R16
000322 9731      	SBIW R30,1
000323 940e 0ac9 	CALL __LSLW2
000325 967e      	ADIW R30,30
000326 0fe0      	ADD  R30,R16
000327 1ff1      	ADC  R31,R17
000328 93fa      	ST   -Y,R31
000329 93ea      	ST   -Y,R30
00032a 01fe      	MOVW R30,R28
00032b 9639      	ADIW R30,9
00032c 940e 09f7 	CALL SUBOPT_0x5
00032e df4c      	RCALL _mainScreen3
                 ; 0000 0081 
                 ; 0000 0082                 mainScreenLcd("PASSWORD?", pass_ano1);
                +
00032f e2e9     +LDI R30 , LOW ( _0x37 + ( 41 ) )
000330 e0f5     +LDI R31 , HIGH ( _0x37 + ( 41 ) )
                 	__POINTW1MN _0x37,41
000331 940e 0a12 	CALL SUBOPT_0x9
                 ; 0000 0083                 lcd_gotoxy(10,0);
                 ; 0000 0084                 lcd_putchar(sai_toi_da-dem_sai+'0');
                 ; 0000 0085 
                 ; 0000 0086 
                 ; 0000 0087                 pass_ano[input_times-1] = '*';
000333 01f8      	MOVW R30,R16
000334 9731      	SBIW R30,1
000335 01de      	MOVW R26,R28
000336 9613      	ADIW R26,3
000337 0fae      	ADD  R26,R30
000338 1fbf      	ADC  R27,R31
000339 e2ea      	LDI  R30,LOW(42)
00033a 93ec      	ST   X,R30
                 ; 0000 0088                 pass_ano1[input_times-1] = '*';
00033b 940e 0a03 	CALL SUBOPT_0x7
00033d e2ea      	LDI  R30,LOW(42)
00033e 93ec      	ST   X,R30
                 ; 0000 0089                 delay_ms(500);
00033f efa4      	LDI  R26,LOW(500)
000340 e0b1      	LDI  R27,HIGH(500)
000341 940e 0aaf 	CALL _delay_ms
                 ; 0000 008A                 mainScreenLcd("PASSWORD?", pass_ano1);
                +
000343 e3e3     +LDI R30 , LOW ( _0x37 + ( 51 ) )
000344 e0f5     +LDI R31 , HIGH ( _0x37 + ( 51 ) )
                 	__POINTW1MN _0x37,51
000345 940e 0a12 	CALL SUBOPT_0x9
                 ; 0000 008B                 lcd_gotoxy(10,0);
                 ; 0000 008C                 lcd_putchar(sai_toi_da-dem_sai+'0');
                 ; 0000 008D 
                 ; 0000 008E                 mainScreen2("PASSWORD?", pass_ano, 30, sai_toi_da-dem_sai);
                +
000347 e3ed     +LDI R30 , LOW ( _0x37 + ( 61 ) )
000348 e0f5     +LDI R31 , HIGH ( _0x37 + ( 61 ) )
                 	__POINTW1MN _0x37,61
000349 940e 0a09 	CALL SUBOPT_0x8
00034b df19      	RCALL _mainScreen2
                 ; 0000 008F                 input = -1;
                +
00034c ef2f     +LDI R18 , LOW ( - 1 )
00034d ef3f     +LDI R19 , HIGH ( - 1 )
                 	__GETWRN 18,19,-1
                 ; 0000 0090             }
                 ; 0000 0091         }
                 _0x3B:
00034e cfa6      	RJMP _0x38
                 _0x3A:
                 ; 0000 0092 
                 ; 0000 0093         if (pass != require) {
00034f 85ee      	LDD  R30,Y+14
000350 85ff      	LDD  R31,Y+14+1
000351 17e4      	CP   R30,R20
000352 07f5      	CPC  R31,R21
000353 f0c1      	BREQ _0x3C
                 ; 0000 0094             glcd_clear();
000354 d1a2      	RCALL _glcd_clear
                 ; 0000 0095             glcd_outtextxy(15, 20, "NO?");
000355 e0ef      	LDI  R30,LOW(15)
000356 93ea      	ST   -Y,R30
000357 e1e4      	LDI  R30,LOW(20)
000358 93ea      	ST   -Y,R30
                +
000359 e4a7     +LDI R26 , LOW ( _0x37 + ( 71 ) )
00035a e0b5     +LDI R27 , HIGH ( _0x37 + ( 71 ) )
                 	__POINTW2MN _0x37,71
00035b 940e 083c 	CALL _glcd_outtextxy
                 ; 0000 0096 
                 ; 0000 0097             lcd_clear();
00035d 940e 08c4 	CALL _lcd_clear
                 ; 0000 0098             lcd_putsf("NO?");
                +
00035f ebab     +LDI R26 , LOW ( 2 * _0x0 + ( 21 ) )
000360 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 21 ) )
                 	__POINTW2FN _0x0,21
000361 940e 08f2 	CALL _lcd_putsf
                 ; 0000 0099             input_times = 0;
000363 940e 09f0 	CALL SUBOPT_0x4
                 ; 0000 009A             input = -1;
                 ; 0000 009B             pass = 0;
                 ; 0000 009C             delay_ms(800);
000365 e2a0      	LDI  R26,LOW(800)
000366 e0b3      	LDI  R27,HIGH(800)
000367 940e 0aaf 	CALL _delay_ms
                 ; 0000 009D             dem_sai++;
000369 01f4      	MOVW R30,R8
00036a 9631      	ADIW R30,1
00036b 014f      	MOVW R8,R30
                 ; 0000 009E         }
                 ; 0000 009F         // bat role 1
                 ; 0000 00A0         if (dem_sai == sai_toi_da){
                 _0x3C:
                +
00036c 14a8     +CP R10 , R8
00036d 04b9     +CPC R11 , R9
                 	__CPWRR 10,11,8,9
00036e f499      	BRNE _0x3D
                 ; 0000 00A1             DDRC.3 = 1;
00036f 9aa3      	SBI  0x14,3
                 ; 0000 00A2             PORTC.3 = 1;
000370 9aab      	SBI  0x15,3
                 ; 0000 00A3             glcd_clear();
000371 d185      	RCALL _glcd_clear
                 ; 0000 00A4             glcd_outtextxy(15, 5, "khoa thiet bi");
000372 e0ef      	LDI  R30,LOW(15)
000373 93ea      	ST   -Y,R30
000374 e0e5      	LDI  R30,LOW(5)
000375 93ea      	ST   -Y,R30
                +
000376 e4ab     +LDI R26 , LOW ( _0x37 + ( 75 ) )
000377 e0b5     +LDI R27 , HIGH ( _0x37 + ( 75 ) )
                 	__POINTW2MN _0x37,75
000378 940e 083c 	CALL _glcd_outtextxy
                 ; 0000 00A5 
                 ; 0000 00A6             lcd_clear();
00037a 940e 09e9 	CALL SUBOPT_0x3
                 ; 0000 00A7             lcd_gotoxy(0, 0);
                 ; 0000 00A8             lcd_puts("Khoa thiet bi");
                +
00037c e5a9     +LDI R26 , LOW ( _0x37 + ( 89 ) )
00037d e0b5     +LDI R27 , HIGH ( _0x37 + ( 89 ) )
                 	__POINTW2MN _0x37,89
00037e 940e 08e7 	CALL _lcd_puts
                 ; 0000 00A9             return;
000380 9626      	ADIW R28,6
000381 c018      	RJMP _0x216000A
                 ; 0000 00AA         }
                 ; 0000 00AB         //miss++;
                 ; 0000 00AC         // turn on role 1
                 ; 0000 00AD         // if (miss == 3) {
                 ; 0000 00AE         //     DDRC.3 = 1;
                 ; 0000 00AF         //     PORTC.3 = 1;
                 ; 0000 00B0         // }
                 ; 0000 00B1     }
                 _0x3D:
000382 9626      	ADIW R28,6
000383 cf52      	RJMP _0x34
                 _0x36:
                 ; 0000 00B2 
                 ; 0000 00B3     miss = 0;
000384 2444      	CLR  R4
000385 2455      	CLR  R5
                 ; 0000 00B4     delay_ms(500);
000386 efa4      	LDI  R26,LOW(500)
000387 e0b1      	LDI  R27,HIGH(500)
000388 940e 0aaf 	CALL _delay_ms
                 ; 0000 00B5     glcd_clear();
00038a d16c      	RCALL _glcd_clear
                 ; 0000 00B6     PORTC.3 = 0;
00038b 98ab      	CBI  0x15,3
                 ; 0000 00B7     glcd_outtextxy(15, 20, "PASSED");
00038c e0ef      	LDI  R30,LOW(15)
00038d 93ea      	ST   -Y,R30
00038e e1e4      	LDI  R30,LOW(20)
00038f 93ea      	ST   -Y,R30
                +
000390 e6a7     +LDI R26 , LOW ( _0x37 + ( 103 ) )
000391 e0b5     +LDI R27 , HIGH ( _0x37 + ( 103 ) )
                 	__POINTW2MN _0x37,103
000392 940e 083c 	CALL _glcd_outtextxy
                 ; 0000 00B8 
                 ; 0000 00B9     lcd_clear();
000394 940e 09e9 	CALL SUBOPT_0x3
                 ; 0000 00BA     lcd_gotoxy(0, 0);
                 ; 0000 00BB     lcd_puts("PASSED");
                +
000396 e6ae     +LDI R26 , LOW ( _0x37 + ( 110 ) )
000397 e0b5     +LDI R27 , HIGH ( _0x37 + ( 110 ) )
                 	__POINTW2MN _0x37,110
000398 940e 08e7 	CALL _lcd_puts
                 ; 0000 00BC }
                 _0x216000A:
00039a 940e 0b0e 	CALL __LOADLOCR6
                 _0x216000B:
00039c 962a      	ADIW R28,10
00039d 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x37:
000500           	.BYTE 0x75
                 ;
                 ;void main(void)
                 ; 0000 00BF {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 00C0     unsigned int pass = 0, input, input_times = 0;
                 ; 0000 00C1     //init GLCD
                 ; 0000 00C2     GLCDINIT_t glcd_init_data;
                 ; 0000 00C3     glcd_init_data.font=font5x7;
00039e 9728      	SBIW R28,8
                 ;	pass -> R16,R17
                 ;	input -> R18,R19
                 ;	input_times -> R20,R21
                 ;	glcd_init_data -> Y+0
                +
00039f e000     +LDI R16 , LOW ( 0 )
0003a0 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
0003a1 e040     +LDI R20 , LOW ( 0 )
0003a2 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
0003a3 e8ec      	LDI  R30,LOW(_font5x7*2)
0003a4 e0f0      	LDI  R31,HIGH(_font5x7*2)
0003a5 83e8      	ST   Y,R30
0003a6 83f9      	STD  Y+1,R31
                 ; 0000 00C4     glcd_init_data.temp_coef=140;
0003a7 81ee      	LDD  R30,Y+6
0003a8 7fec      	ANDI R30,LOW(0xFC)
0003a9 83ee      	STD  Y+6,R30
                 ; 0000 00C5     glcd_init_data.bias=4;
0003aa 7ee3      	ANDI R30,LOW(0xE3)
0003ab 61e0      	ORI  R30,0x10
0003ac 83ee      	STD  Y+6,R30
                 ; 0000 00C6     glcd_init_data.vlcd=66;
0003ad 81ef      	LDD  R30,Y+7
0003ae 78e0      	ANDI R30,LOW(0x80)
0003af 64e2      	ORI  R30,LOW(0x42)
0003b0 83ef      	STD  Y+7,R30
                 ; 0000 00C7     glcd_init(&glcd_init_data);
0003b1 01de      	MOVW R26,R28
0003b2 d09d      	RCALL _glcd_init
                 ; 0000 00C8 
                 ; 0000 00C9     init_lcd();
0003b3 de6c      	RCALL _init_lcd
                 ; 0000 00CA     init_register();
0003b4 de24      	RCALL _init_register
                 ; 0000 00CB     DDRD.5 = 1;
0003b5 9a8d      	SBI  0x11,5
                 ; 0000 00CC     DDRD.4 = 1;
0003b6 9a8c      	SBI  0x11,4
                 ; 0000 00CD 
                 ; 0000 00CE     //init Timer/Counter 0 with time period = 1 ms
                 ; 0000 00CF     ASSR=0<<AS0;
0003b7 e0e0      	LDI  R30,LOW(0)
0003b8 bfe0      	OUT  0x30,R30
                 ; 0000 00D0     TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (1<<CS01) | (1<<CS00);
0003b9 e0e3      	LDI  R30,LOW(3)
0003ba bfe3      	OUT  0x33,R30
                 ; 0000 00D1     TCNT0=0x06;
0003bb e0e6      	LDI  R30,LOW(6)
0003bc bfe2      	OUT  0x32,R30
                 ; 0000 00D2     OCR0=0x00;
0003bd e0e0      	LDI  R30,LOW(0)
0003be bfe1      	OUT  0x31,R30
                 ; 0000 00D3     TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
0003bf e0e1      	LDI  R30,LOW(1)
0003c0 bfe7      	OUT  0x37,R30
                 ; 0000 00D4     ETIMSK=(0<<TICIE3) | (0<<OCIE3A) | (0<<OCIE3B) | (0<<TOIE3) | (0<<OCIE3C) | (0<<OCIE1C);
0003c1 e0e0      	LDI  R30,LOW(0)
0003c2 93e0 007d 	STS  125,R30
                 ; 0000 00D5     #asm("sei")
0003c4 9478      	sei
                 ; 0000 00D6     update_eeprom_word(&my_eeprom, 108);
0003c5 e0a0      	LDI  R26,LOW(_my_eeprom)
0003c6 e0b0      	LDI  R27,HIGH(_my_eeprom)
0003c7 e6ec      	LDI  R30,LOW(108)
0003c8 e0f0      	LDI  R31,HIGH(108)
0003c9 940e 0aea 	CALL __EEPROMWRW
                 ; 0000 00D7     exe();
0003cb deea      	RCALL _exe
                 ; 0000 00D8     delay_ms(1500);
0003cc edac      	LDI  R26,LOW(1500)
0003cd e0b5      	LDI  R27,HIGH(1500)
0003ce 940e 0aaf 	CALL _delay_ms
                 ; 0000 00D9 
                 ; 0000 00DA     // mainScreen("NEW PASS?", -1);
                 ; 0000 00DB     // while (input_times != 3) {
                 ; 0000 00DC     //         input = read();
                 ; 0000 00DD     //         delay_ms(200);
                 ; 0000 00DE     //         if (input != -1) {
                 ; 0000 00DF     //             input_times++;
                 ; 0000 00E0     //             pass = pass * 10 + input;
                 ; 0000 00E1     //             mainScreen("NEW PASS?", pass);
                 ; 0000 00E2     //             input = -1;
                 ; 0000 00E3     //         }
                 ; 0000 00E4     // }
                 ; 0000 00E5     // update_eeprom_word(&my_eeprom, pass);
                 ; 0000 00E6     // delay_ms(800);
                 ; 0000 00E7     // mainScreen("SAVED", -1);
                 ; 0000 00E8 
                 ; 0000 00E9     while (1)
                 _0x48:
                 ; 0000 00EA     {
                 ; 0000 00EB 
                 ; 0000 00EC 
                 ; 0000 00ED     }
0003d0 cfff      	RJMP _0x48
                 ; 0000 00EE }
                 _0x4B:
0003d1 cfff      	RJMP _0x4B
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _pcd8544_delay_G100:
                 ; .FSTART _pcd8544_delay_G100
0003d2 9508      	RET
                 ; .FEND
                 _pcd8544_wrbus_G100:
                 ; .FSTART _pcd8544_wrbus_G100
0003d3 93aa      	ST   -Y,R26
0003d4 931a      	ST   -Y,R17
0003d5 91e0 0065 	LDS  R30,101
0003d7 7eef      	ANDI R30,0xEF
0003d8 93e0 0065 	STS  101,R30
0003da e018      	LDI  R17,LOW(8)
                 _0x2000004:
0003db dff6      	RCALL _pcd8544_delay_G100
0003dc 81e9      	LDD  R30,Y+1
0003dd 78e0      	ANDI R30,LOW(0x80)
0003de f021      	BREQ _0x2000006
0003df 91e0 0065 	LDS  R30,101
0003e1 60e2      	ORI  R30,2
0003e2 c003      	RJMP _0x20000A0
                 _0x2000006:
0003e3 91e0 0065 	LDS  R30,101
0003e5 7fed      	ANDI R30,0xFD
                 _0x20000A0:
0003e6 93e0 0065 	STS  101,R30
0003e8 81e9      	LDD  R30,Y+1
0003e9 0fee      	LSL  R30
0003ea 83e9      	STD  Y+1,R30
0003eb dfe6      	RCALL _pcd8544_delay_G100
0003ec 91e0 0065 	LDS  R30,101
0003ee 60e4      	ORI  R30,4
0003ef 93e0 0065 	STS  101,R30
0003f1 dfe0      	RCALL _pcd8544_delay_G100
0003f2 91e0 0065 	LDS  R30,101
0003f4 7feb      	ANDI R30,0xFB
0003f5 93e0 0065 	STS  101,R30
0003f7 5011      	SUBI R17,LOW(1)
0003f8 f711      	BRNE _0x2000004
0003f9 91e0 0065 	LDS  R30,101
0003fb 61e0      	ORI  R30,0x10
0003fc 93e0 0065 	STS  101,R30
0003fe 8118      	LDD  R17,Y+0
0003ff 940c 094d 	JMP  _0x2160003
                 ; .FEND
                 _pcd8544_wrcmd:
                 ; .FSTART _pcd8544_wrcmd
000401 93aa      	ST   -Y,R26
000402 91e0 0065 	LDS  R30,101
000404 7fee      	ANDI R30,0xFE
000405 93e0 0065 	STS  101,R30
000407 81a8      	LD   R26,Y
000408 dfca      	RCALL _pcd8544_wrbus_G100
000409 940c 0932 	JMP  _0x2160005
                 ; .FEND
                 _pcd8544_wrdata_G100:
                 ; .FSTART _pcd8544_wrdata_G100
00040b 93aa      	ST   -Y,R26
00040c 91e0 0065 	LDS  R30,101
00040e 60e1      	ORI  R30,1
00040f 93e0 0065 	STS  101,R30
000411 81a8      	LD   R26,Y
000412 dfc0      	RCALL _pcd8544_wrbus_G100
000413 940c 0932 	JMP  _0x2160005
                 ; .FEND
                 _pcd8544_setaddr_G100:
                 ; .FSTART _pcd8544_setaddr_G100
000415 93aa      	ST   -Y,R26
000416 931a      	ST   -Y,R17
000417 81e9      	LDD  R30,Y+1
000418 95e6      	LSR  R30
000419 95e6      	LSR  R30
00041a 95e6      	LSR  R30
00041b 2f1e      	MOV  R17,R30
00041c e5e4      	LDI  R30,LOW(84)
00041d 9fe1      	MUL  R30,R17
00041e 01f0      	MOVW R30,R0
00041f 01df      	MOVW R26,R30
000420 81ea      	LDD  R30,Y+2
000421 e0f0      	LDI  R31,0
000422 0fea      	ADD  R30,R26
000423 1ffb      	ADC  R31,R27
000424 93e0 05b8 	STS  _gfx_addr_G100,R30
000426 93f0 05b9 	STS  _gfx_addr_G100+1,R31
000428 2fe1      	MOV  R30,R17
000429 8118      	LDD  R17,Y+0
00042a 940c 0994 	JMP  _0x2160002
                 ; .FEND
                 _pcd8544_gotoxy:
                 ; .FSTART _pcd8544_gotoxy
00042c 93aa      	ST   -Y,R26
00042d 81e9      	LDD  R30,Y+1
00042e 68e0      	ORI  R30,0x80
00042f 2fae      	MOV  R26,R30
000430 dfd0      	RCALL _pcd8544_wrcmd
000431 81e9      	LDD  R30,Y+1
000432 93ea      	ST   -Y,R30
000433 81a9      	LDD  R26,Y+1
000434 dfe0      	RCALL _pcd8544_setaddr_G100
000435 64e0      	ORI  R30,0x40
000436 2fae      	MOV  R26,R30
000437 dfc9      	RCALL _pcd8544_wrcmd
000438 940c 094d 	JMP  _0x2160003
                 ; .FEND
                 _pcd8544_rdbyte:
                 ; .FSTART _pcd8544_rdbyte
00043a 93aa      	ST   -Y,R26
00043b 81e9      	LDD  R30,Y+1
00043c 93ea      	ST   -Y,R30
00043d 81a9      	LDD  R26,Y+1
00043e dfed      	RCALL _pcd8544_gotoxy
00043f 91e0 05b8 	LDS  R30,_gfx_addr_G100
000441 91f0 05b9 	LDS  R31,_gfx_addr_G100+1
000443 54e6      	SUBI R30,LOW(-_gfx_buffer_G100)
000444 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G100)
000445 81e0      	LD   R30,Z
000446 940c 094d 	JMP  _0x2160003
                 ; .FEND
                 _pcd8544_wrbyte:
                 ; .FSTART _pcd8544_wrbyte
000448 93aa      	ST   -Y,R26
000449 940e 0a1e 	CALL SUBOPT_0xA
00044b 81a8      	LD   R26,Y
00044c 83a0      	STD  Z+0,R26
00044d dfbd      	RCALL _pcd8544_wrdata_G100
00044e 940c 0932 	JMP  _0x2160005
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
000450 93ba      	ST   -Y,R27
000451 93aa      	ST   -Y,R26
000452 940e 0b09 	CALL __SAVELOCR4
000454 91e0 0064 	LDS  R30,100
000456 61e0      	ORI  R30,0x10
000457 940e 0a29 	CALL SUBOPT_0xB
000459 61e0      	ORI  R30,0x10
00045a 93e0 0065 	STS  101,R30
00045c 91e0 0064 	LDS  R30,100
00045e 60e4      	ORI  R30,4
00045f 940e 0a29 	CALL SUBOPT_0xB
000461 7feb      	ANDI R30,0xFB
000462 93e0 0065 	STS  101,R30
000464 91e0 0064 	LDS  R30,100
000466 60e2      	ORI  R30,2
000467 93e0 0064 	STS  100,R30
000469 91e0 0064 	LDS  R30,100
00046b 60e1      	ORI  R30,1
00046c 93e0 0064 	STS  100,R30
00046e 91e0 0064 	LDS  R30,100
000470 60e8      	ORI  R30,8
000471 940e 0a29 	CALL SUBOPT_0xB
000473 7fe7      	ANDI R30,0XF7
000474 93e0 0065 	STS  101,R30
000476 e0aa      	LDI  R26,LOW(10)
000477 e0b0      	LDI  R27,0
000478 940e 0aaf 	CALL _delay_ms
00047a 91e0 0065 	LDS  R30,101
00047c 60e8      	ORI  R30,8
00047d 93e0 0065 	STS  101,R30
00047f 81ec      	LDD  R30,Y+4
000480 81fd      	LDD  R31,Y+4+1
000481 9730      	SBIW R30,0
000482 f121      	BREQ _0x2000008
000483 81e6      	LDD  R30,Z+6
000484 70e3      	ANDI R30,LOW(0x3)
000485 2f1e      	MOV  R17,R30
000486 81ec      	LDD  R30,Y+4
000487 81fd      	LDD  R31,Y+4+1
000488 81e6      	LDD  R30,Z+6
000489 95e6      	LSR  R30
00048a 95e6      	LSR  R30
00048b 70e7      	ANDI R30,LOW(0x7)
00048c 2f0e      	MOV  R16,R30
00048d 81ec      	LDD  R30,Y+4
00048e 81fd      	LDD  R31,Y+4+1
00048f 81e7      	LDD  R30,Z+7
000490 77ef      	ANDI R30,0x7F
000491 2f3e      	MOV  R19,R30
000492 81ac      	LDD  R26,Y+4
000493 81bd      	LDD  R27,Y+4+1
000494 940e 0ad6 	CALL __GETW1P
                +
000496 93e0 0579+STS _glcd_state + ( 4 ) , R30
000498 93f0 057a+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
00049a 9612      	ADIW R26,2
00049b 940e 0ad6 	CALL __GETW1P
                +
00049d 93e0 058e+STS _glcd_state + ( 25 ) , R30
00049f 93f0 058f+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
0004a1 81ac      	LDD  R26,Y+4
0004a2 81bd      	LDD  R27,Y+4+1
0004a3 9614      	ADIW R26,4
0004a4 940e 0ad6 	CALL __GETW1P
0004a6 c00d      	RJMP _0x20000A1
                 _0x2000008:
0004a7 e010      	LDI  R17,LOW(0)
0004a8 e003      	LDI  R16,LOW(3)
0004a9 e332      	LDI  R19,LOW(50)
0004aa e0e0      	LDI  R30,LOW(0)
0004ab e0f0      	LDI  R31,HIGH(0)
                +
0004ac 93e0 0579+STS _glcd_state + ( 4 ) , R30
0004ae 93f0 057a+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
                +
0004b0 93e0 058e+STS _glcd_state + ( 25 ) , R30
0004b2 93f0 058f+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
                 _0x20000A1:
                +
0004b4 93e0 0590+STS _glcd_state + ( 27 ) , R30
0004b6 93f0 0591+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
0004b8 e2a1      	LDI  R26,LOW(33)
0004b9 df47      	RCALL _pcd8544_wrcmd
0004ba 2fe1      	MOV  R30,R17
0004bb 60e4      	ORI  R30,4
0004bc 2fae      	MOV  R26,R30
0004bd df43      	RCALL _pcd8544_wrcmd
0004be 2fe0      	MOV  R30,R16
0004bf 61e0      	ORI  R30,0x10
0004c0 2fae      	MOV  R26,R30
0004c1 df3f      	RCALL _pcd8544_wrcmd
0004c2 2fe3      	MOV  R30,R19
0004c3 68e0      	ORI  R30,0x80
0004c4 2fae      	MOV  R26,R30
0004c5 df3b      	RCALL _pcd8544_wrcmd
0004c6 e2a0      	LDI  R26,LOW(32)
0004c7 df39      	RCALL _pcd8544_wrcmd
0004c8 e0a1      	LDI  R26,LOW(1)
0004c9 d022      	RCALL _glcd_display
0004ca e0e1      	LDI  R30,LOW(1)
0004cb 93e0 0575 	STS  _glcd_state,R30
0004cd e0e0      	LDI  R30,LOW(0)
                +
0004ce 93e0 0576+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
0004d0 e0e1      	LDI  R30,LOW(1)
                +
0004d1 93e0 057b+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
0004d3 93e0 057c+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
0004d5 93e0 057d+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
0004d7 efef      	LDI  R30,LOW(255)
                +
0004d8 93e0 057e+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
0004da e0e1      	LDI  R30,LOW(1)
                +
0004db 93e0 0585+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
0004dd e8e6     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
0004de e0f5     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
0004df 93fa      	ST   -Y,R31
0004e0 93ea      	ST   -Y,R30
0004e1 efef      	LDI  R30,LOW(255)
0004e2 93ea      	ST   -Y,R30
0004e3 e0a8      	LDI  R26,LOW(8)
0004e4 e0b0      	LDI  R27,0
0004e5 940e 0934 	CALL _memset
0004e7 d00f      	RCALL _glcd_clear
0004e8 e0e1      	LDI  R30,LOW(1)
0004e9 940e 0b10 	CALL __LOADLOCR4
0004eb c060      	RJMP _0x2160009
                 ; .FEND
                 _glcd_display:
                 ; .FSTART _glcd_display
0004ec 93aa      	ST   -Y,R26
0004ed 81e8      	LD   R30,Y
0004ee 30e0      	CPI  R30,0
0004ef f011      	BREQ _0x200000A
0004f0 e0ec      	LDI  R30,LOW(12)
0004f1 c001      	RJMP _0x200000B
                 _0x200000A:
0004f2 e0e8      	LDI  R30,LOW(8)
                 _0x200000B:
0004f3 2fae      	MOV  R26,R30
0004f4 df0c      	RCALL _pcd8544_wrcmd
0004f5 940c 0932 	JMP  _0x2160005
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
0004f7 940e 0b09 	CALL __SAVELOCR4
0004f9 e030      	LDI  R19,0
                +
0004fa 91e0 0576+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
0004fc 30e0      	CPI  R30,0
0004fd f009      	BREQ _0x200000D
0004fe ef3f      	LDI  R19,LOW(255)
                 _0x200000D:
0004ff e0e0      	LDI  R30,LOW(0)
000500 93ea      	ST   -Y,R30
000501 e0a0      	LDI  R26,LOW(0)
000502 df29      	RCALL _pcd8544_gotoxy
                +
000503 ef08     +LDI R16 , LOW ( 504 )
000504 e011     +LDI R17 , HIGH ( 504 )
                 	__GETWRN 16,17,504
                 _0x200000E:
000505 01f8      	MOVW R30,R16
                +
000506 5001     +SUBI R16 , LOW ( 1 )
000507 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
000508 9730      	SBIW R30,0
000509 f019      	BREQ _0x2000010
00050a 2fa3      	MOV  R26,R19
00050b df3c      	RCALL _pcd8544_wrbyte
00050c cff8      	RJMP _0x200000E
                 _0x2000010:
00050d e0e0      	LDI  R30,LOW(0)
00050e 93ea      	ST   -Y,R30
00050f e0a0      	LDI  R26,LOW(0)
000510 d33b      	RCALL _glcd_moveto
000511 940e 0b10 	CALL __LOADLOCR4
000513 940c 09b3 	JMP  _0x2160001
                 ; .FEND
                 _pcd8544_wrmasked_G100:
                 ; .FSTART _pcd8544_wrmasked_G100
000515 93aa      	ST   -Y,R26
000516 931a      	ST   -Y,R17
000517 81ed      	LDD  R30,Y+5
000518 93ea      	ST   -Y,R30
000519 81ad      	LDD  R26,Y+5
00051a df1f      	RCALL _pcd8544_rdbyte
00051b 2f1e      	MOV  R17,R30
00051c 81e9      	LDD  R30,Y+1
00051d 30e7      	CPI  R30,LOW(0x7)
00051e f011      	BREQ _0x2000020
00051f 30e8      	CPI  R30,LOW(0x8)
000520 f439      	BRNE _0x2000021
                 _0x2000020:
000521 81eb      	LDD  R30,Y+3
000522 93ea      	ST   -Y,R30
000523 81aa      	LDD  R26,Y+2
000524 940e 094f 	CALL _glcd_mappixcolor1bit
000526 83eb      	STD  Y+3,R30
000527 c008      	RJMP _0x2000022
                 _0x2000021:
000528 30e3      	CPI  R30,LOW(0x3)
000529 f421      	BRNE _0x2000024
00052a 81eb      	LDD  R30,Y+3
00052b 95e0      	COM  R30
00052c 83eb      	STD  Y+3,R30
00052d c002      	RJMP _0x2000025
                 _0x2000024:
00052e 30e0      	CPI  R30,0
00052f f421      	BRNE _0x2000026
                 _0x2000025:
                 _0x2000022:
000530 81ea      	LDD  R30,Y+2
000531 95e0      	COM  R30
000532 231e      	AND  R17,R30
000533 c002      	RJMP _0x2000027
                 _0x2000026:
000534 30e2      	CPI  R30,LOW(0x2)
000535 f429      	BRNE _0x2000028
                 _0x2000027:
000536 81ea      	LDD  R30,Y+2
000537 81ab      	LDD  R26,Y+3
000538 23ea      	AND  R30,R26
000539 2b1e      	OR   R17,R30
00053a c00e      	RJMP _0x200001E
                 _0x2000028:
00053b 30e1      	CPI  R30,LOW(0x1)
00053c f429      	BRNE _0x2000029
00053d 81ea      	LDD  R30,Y+2
00053e 81ab      	LDD  R26,Y+3
00053f 23ea      	AND  R30,R26
000540 271e      	EOR  R17,R30
000541 c007      	RJMP _0x200001E
                 _0x2000029:
000542 30e4      	CPI  R30,LOW(0x4)
000543 f429      	BRNE _0x200001E
000544 81ea      	LDD  R30,Y+2
000545 95e0      	COM  R30
000546 81ab      	LDD  R26,Y+3
000547 2bea      	OR   R30,R26
000548 231e      	AND  R17,R30
                 _0x200001E:
000549 2fa1      	MOV  R26,R17
00054a defd      	RCALL _pcd8544_wrbyte
00054b 8118      	LDD  R17,Y+0
                 _0x2160009:
00054c 9626      	ADIW R28,6
00054d 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
00054e 93aa      	ST   -Y,R26
00054f 9723      	SBIW R28,3
000550 940e 0b07 	CALL __SAVELOCR6
000552 89a8      	LDD  R26,Y+16
000553 35a4      	CPI  R26,LOW(0x54)
000554 f448      	BRSH _0x200002C
000555 85af      	LDD  R26,Y+15
000556 33a0      	CPI  R26,LOW(0x30)
000557 f430      	BRSH _0x200002C
000558 85ae      	LDD  R26,Y+14
000559 30a0      	CPI  R26,LOW(0x0)
00055a f019      	BREQ _0x200002C
00055b 85ad      	LDD  R26,Y+13
00055c 30a0      	CPI  R26,LOW(0x0)
00055d f409      	BRNE _0x200002B
                 _0x200002C:
00055e c1cc      	RJMP _0x2160008
                 _0x200002B:
00055f 85ee      	LDD  R30,Y+14
000560 87e8      	STD  Y+8,R30
000561 89a8      	LDD  R26,Y+16
000562 27bb      	CLR  R27
000563 85ee      	LDD  R30,Y+14
000564 e0f0      	LDI  R31,0
000565 0fae      	ADD  R26,R30
000566 1fbf      	ADC  R27,R31
000567 35a5      	CPI  R26,LOW(0x55)
000568 e0e0      	LDI  R30,HIGH(0x55)
000569 07be      	CPC  R27,R30
00056a f020      	BRLO _0x200002E
00056b 89a8      	LDD  R26,Y+16
00056c e5e4      	LDI  R30,LOW(84)
00056d 1bea      	SUB  R30,R26
00056e 87ee      	STD  Y+14,R30
                 _0x200002E:
00056f 852d      	LDD  R18,Y+13
000570 85af      	LDD  R26,Y+15
000571 27bb      	CLR  R27
000572 85ed      	LDD  R30,Y+13
000573 e0f0      	LDI  R31,0
000574 0fae      	ADD  R26,R30
000575 1fbf      	ADC  R27,R31
000576 97d1      	SBIW R26,49
000577 f020      	BRLO _0x200002F
000578 85af      	LDD  R26,Y+15
000579 e3e0      	LDI  R30,LOW(48)
00057a 1bea      	SUB  R30,R26
00057b 87ed      	STD  Y+13,R30
                 _0x200002F:
00057c 85a9      	LDD  R26,Y+9
00057d 30a6      	CPI  R26,LOW(0x6)
00057e f009      	BREQ PC+2
00057f c05b      	RJMP _0x2000030
000580 85ec      	LDD  R30,Y+12
000581 30e1      	CPI  R30,LOW(0x1)
000582 f409      	BRNE _0x2000034
000583 c1a7      	RJMP _0x2160008
                 _0x2000034:
000584 30e3      	CPI  R30,LOW(0x3)
000585 f439      	BRNE _0x2000037
                +
000586 91e0 0590+LDS R30 , _glcd_state + ( 27 )
000588 91f0 0591+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
00058a 9730      	SBIW R30,0
00058b f409      	BRNE _0x2000036
00058c c19e      	RJMP _0x2160008
                 _0x2000036:
                 _0x2000037:
00058d 8508      	LDD  R16,Y+8
00058e 85ed      	LDD  R30,Y+13
00058f 95e6      	LSR  R30
000590 95e6      	LSR  R30
000591 95e6      	LSR  R30
000592 2f3e      	MOV  R19,R30
000593 2fe2      	MOV  R30,R18
000594 70e7      	ANDI R30,LOW(0x7)
000595 f419      	BRNE _0x2000039
000596 85ad      	LDD  R26,Y+13
000597 172a      	CP   R18,R26
000598 f0e9      	BREQ _0x2000038
                 _0x2000039:
000599 2fa0      	MOV  R26,R16
00059a 27bb      	CLR  R27
00059b 2fe3      	MOV  R30,R19
00059c e0f0      	LDI  R31,0
00059d 940e 0ace 	CALL __MULW12U
00059f 85aa      	LDD  R26,Y+10
0005a0 85bb      	LDD  R27,Y+10+1
0005a1 940e 0a2e 	CALL SUBOPT_0xC
0005a3 9526      	LSR  R18
0005a4 9526      	LSR  R18
0005a5 9526      	LSR  R18
0005a6 2f53      	MOV  R21,R19
                 _0x200003B:
0005a7 935f      	PUSH R21
0005a8 5f5f      	SUBI R21,-1
0005a9 2fe2      	MOV  R30,R18
0005aa 91af      	POP  R26
0005ab 17ea      	CP   R30,R26
0005ac f048      	BRLO _0x200003D
0005ad 2f10      	MOV  R17,R16
                 _0x200003E:
0005ae 2fe1      	MOV  R30,R17
0005af 5011      	SUBI R17,1
0005b0 30e0      	CPI  R30,0
0005b1 f019      	BREQ _0x2000040
0005b2 940e 0a33 	CALL SUBOPT_0xD
0005b4 cff9      	RJMP _0x200003E
                 _0x2000040:
0005b5 cff1      	RJMP _0x200003B
                 _0x200003D:
                 _0x2000038:
0005b6 85ae      	LDD  R26,Y+14
0005b7 170a      	CP   R16,R26
0005b8 f111      	BREQ _0x2000041
0005b9 85ee      	LDD  R30,Y+14
0005ba 85aa      	LDD  R26,Y+10
0005bb 85bb      	LDD  R27,Y+10+1
0005bc e0f0      	LDI  R31,0
0005bd 940e 0a2e 	CALL SUBOPT_0xC
0005bf 85ed      	LDD  R30,Y+13
0005c0 70e7      	ANDI R30,LOW(0x7)
0005c1 f009      	BREQ _0x2000042
0005c2 5f3f      	SUBI R19,-LOW(1)
                 _0x2000042:
0005c3 e020      	LDI  R18,LOW(0)
                 _0x2000043:
0005c4 932f      	PUSH R18
0005c5 5f2f      	SUBI R18,-1
0005c6 2fe3      	MOV  R30,R19
0005c7 91af      	POP  R26
0005c8 17ae      	CP   R26,R30
0005c9 f488      	BRSH _0x2000045
0005ca 851e      	LDD  R17,Y+14
                 _0x2000046:
0005cb 931f      	PUSH R17
0005cc 5f1f      	SUBI R17,-1
0005cd 2fe0      	MOV  R30,R16
0005ce 91af      	POP  R26
0005cf 17ae      	CP   R26,R30
0005d0 f418      	BRSH _0x2000048
0005d1 940e 0a33 	CALL SUBOPT_0xD
0005d3 cff7      	RJMP _0x2000046
                 _0x2000048:
0005d4 85ee      	LDD  R30,Y+14
0005d5 81ae      	LDD  R26,Y+6
0005d6 81bf      	LDD  R27,Y+6+1
0005d7 e0f0      	LDI  R31,0
0005d8 940e 0a2e 	CALL SUBOPT_0xC
0005da cfe9      	RJMP _0x2000043
                 _0x2000045:
                 _0x2000041:
                 _0x2000030:
0005db 85ef      	LDD  R30,Y+15
0005dc 70e7      	ANDI R30,LOW(0x7)
0005dd 2f3e      	MOV  R19,R30
                 _0x2000049:
0005de 85ed      	LDD  R30,Y+13
0005df 30e0      	CPI  R30,0
0005e0 f409      	BRNE PC+2
0005e1 c149      	RJMP _0x200004B
0005e2 85ea      	LDD  R30,Y+10
0005e3 85fb      	LDD  R31,Y+10+1
0005e4 83ee      	STD  Y+6,R30
0005e5 83ff      	STD  Y+6+1,R31
0005e6 e010      	LDI  R17,LOW(0)
0005e7 8908      	LDD  R16,Y+16
0005e8 3030      	CPI  R19,0
0005e9 f009      	BREQ PC+2
0005ea c063      	RJMP _0x200004C
0005eb 85ad      	LDD  R26,Y+13
0005ec 30a8      	CPI  R26,LOW(0x8)
0005ed f408      	BRSH PC+2
0005ee c05a      	RJMP _0x200004D
0005ef 85e9      	LDD  R30,Y+9
0005f0 30e0      	CPI  R30,0
0005f1 f011      	BREQ _0x2000052
0005f2 30e3      	CPI  R30,LOW(0x3)
0005f3 f409      	BRNE _0x2000053
                 _0x2000052:
0005f4 c002      	RJMP _0x2000054
                 _0x2000053:
0005f5 30e7      	CPI  R30,LOW(0x7)
0005f6 f409      	BRNE _0x2000055
                 _0x2000054:
0005f7 c002      	RJMP _0x2000056
                 _0x2000055:
0005f8 30e8      	CPI  R30,LOW(0x8)
0005f9 f409      	BRNE _0x2000057
                 _0x2000056:
0005fa c002      	RJMP _0x2000058
                 _0x2000057:
0005fb 30e9      	CPI  R30,LOW(0x9)
0005fc f409      	BRNE _0x2000059
                 _0x2000058:
0005fd c002      	RJMP _0x200005A
                 _0x2000059:
0005fe 30ea      	CPI  R30,LOW(0xA)
0005ff f421      	BRNE _0x200005B
                 _0x200005A:
000600 930a      	ST   -Y,R16
000601 89a8      	LDD  R26,Y+16
000602 de29      	RCALL _pcd8544_gotoxy
000603 c004      	RJMP _0x2000050
                 _0x200005B:
000604 30e6      	CPI  R30,LOW(0x6)
000605 f411      	BRNE _0x2000050
000606 940e 0a40 	CALL SUBOPT_0xE
                 _0x2000050:
                 _0x200005D:
000608 931f      	PUSH R17
000609 5f1f      	SUBI R17,-1
00060a 85ee      	LDD  R30,Y+14
00060b 91af      	POP  R26
00060c 17ae      	CP   R26,R30
00060d f5a0      	BRSH _0x200005F
00060e 85a9      	LDD  R26,Y+9
00060f 30a6      	CPI  R26,LOW(0x6)
000610 f451      	BRNE _0x2000060
000611 940e 0a44 	CALL SUBOPT_0xF
000613 93fa      	ST   -Y,R31
000614 93ea      	ST   -Y,R30
000615 940e 0a1e 	CALL SUBOPT_0xA
000617 81a0      	LD   R26,Z
000618 940e 0996 	CALL _glcd_writemem
00061a c026      	RJMP _0x2000061
                 _0x2000060:
00061b 85e9      	LDD  R30,Y+9
00061c 30e9      	CPI  R30,LOW(0x9)
00061d f411      	BRNE _0x2000065
00061e e050      	LDI  R21,LOW(0)
00061f c00e      	RJMP _0x2000066
                 _0x2000065:
000620 30ea      	CPI  R30,LOW(0xA)
000621 f411      	BRNE _0x2000064
000622 ef5f      	LDI  R21,LOW(255)
000623 c00a      	RJMP _0x2000066
                 _0x2000064:
000624 940e 0a44 	CALL SUBOPT_0xF
000626 940e 0a4d 	CALL SUBOPT_0x10
000628 2f5e      	MOV  R21,R30
000629 85e9      	LDD  R30,Y+9
00062a 30e7      	CPI  R30,LOW(0x7)
00062b f011      	BREQ _0x200006D
00062c 30e8      	CPI  R30,LOW(0x8)
00062d f421      	BRNE _0x200006E
                 _0x200006D:
                 _0x2000066:
00062e 940e 0a53 	CALL SUBOPT_0x11
000630 2f5e      	MOV  R21,R30
000631 c006      	RJMP _0x200006F
                 _0x200006E:
000632 30e3      	CPI  R30,LOW(0x3)
000633 f411      	BRNE _0x2000071
000634 9550      	COM  R21
000635 c002      	RJMP _0x2000072
                 _0x2000071:
000636 30e0      	CPI  R30,0
000637 f419      	BRNE _0x2000074
                 _0x2000072:
                 _0x200006F:
000638 2fa5      	MOV  R26,R21
000639 ddd1      	RCALL _pcd8544_wrdata_G100
00063a c006      	RJMP _0x200006B
                 _0x2000074:
00063b 940e 0a57 	CALL SUBOPT_0x12
00063d efef      	LDI  R30,LOW(255)
00063e 93ea      	ST   -Y,R30
00063f 85ad      	LDD  R26,Y+13
000640 ded4      	RCALL _pcd8544_wrmasked_G100
                 _0x200006B:
                 _0x2000061:
000641 cfc6      	RJMP _0x200005D
                 _0x200005F:
000642 85ef      	LDD  R30,Y+15
000643 5fe8      	SUBI R30,-LOW(8)
000644 87ef      	STD  Y+15,R30
000645 85ed      	LDD  R30,Y+13
000646 50e8      	SUBI R30,LOW(8)
000647 87ed      	STD  Y+13,R30
000648 c0d9      	RJMP _0x2000075
                 _0x200004D:
000649 855d      	LDD  R21,Y+13
00064a e020      	LDI  R18,LOW(0)
00064b e0e0      	LDI  R30,LOW(0)
00064c 87ed      	STD  Y+13,R30
00064d c07e      	RJMP _0x2000076
                 _0x200004C:
00064e 2fe3      	MOV  R30,R19
00064f 85ad      	LDD  R26,Y+13
000650 0fae      	ADD  R26,R30
000651 30a9      	CPI  R26,LOW(0x9)
000652 f420      	BRSH _0x2000077
000653 852d      	LDD  R18,Y+13
000654 e0e0      	LDI  R30,LOW(0)
000655 87ed      	STD  Y+13,R30
000656 c003      	RJMP _0x2000078
                 _0x2000077:
000657 e0e8      	LDI  R30,LOW(8)
000658 1be3      	SUB  R30,R19
000659 2f2e      	MOV  R18,R30
                 _0x2000078:
00065a 933a      	ST   -Y,R19
00065b 2fa2      	MOV  R26,R18
00065c 940e 0944 	CALL _glcd_getmask
00065e 2f4e      	MOV  R20,R30
00065f 85e9      	LDD  R30,Y+9
000660 30e6      	CPI  R30,LOW(0x6)
000661 f511      	BRNE _0x200007C
000662 940e 0a40 	CALL SUBOPT_0xE
                 _0x200007D:
000664 931f      	PUSH R17
000665 5f1f      	SUBI R17,-1
000666 85ee      	LDD  R30,Y+14
000667 91af      	POP  R26
000668 17ae      	CP   R26,R30
000669 f4c8      	BRSH _0x200007F
00066a 940e 0a1e 	CALL SUBOPT_0xA
00066c 81e0      	LD   R30,Z
00066d 23e4      	AND  R30,R20
00066e 2fae      	MOV  R26,R30
00066f 2fe3      	MOV  R30,R19
000670 940e 0ac1 	CALL __LSRB12
000672 940e 0a5d 	CALL SUBOPT_0x13
000674 2fe3      	MOV  R30,R19
000675 2fa4      	MOV  R26,R20
000676 940e 0ac1 	CALL __LSRB12
000678 95e0      	COM  R30
000679 21e1      	AND  R30,R1
00067a 2b5e      	OR   R21,R30
00067b 940e 0a44 	CALL SUBOPT_0xF
00067d 93fa      	ST   -Y,R31
00067e 93ea      	ST   -Y,R30
00067f 2fa5      	MOV  R26,R21
000680 940e 0996 	CALL _glcd_writemem
000682 cfe1      	RJMP _0x200007D
                 _0x200007F:
000683 c02c      	RJMP _0x200007B
                 _0x200007C:
000684 30e9      	CPI  R30,LOW(0x9)
000685 f411      	BRNE _0x2000080
000686 e050      	LDI  R21,LOW(0)
000687 c003      	RJMP _0x2000081
                 _0x2000080:
000688 30ea      	CPI  R30,LOW(0xA)
000689 f4a9      	BRNE _0x2000087
00068a ef5f      	LDI  R21,LOW(255)
                 _0x2000081:
00068b 940e 0a53 	CALL SUBOPT_0x11
00068d 2fae      	MOV  R26,R30
00068e 2fe3      	MOV  R30,R19
00068f 940e 0ab9 	CALL __LSLB12
000691 2f5e      	MOV  R21,R30
                 _0x2000084:
000692 931f      	PUSH R17
000693 5f1f      	SUBI R17,-1
000694 85ee      	LDD  R30,Y+14
000695 91af      	POP  R26
000696 17ae      	CP   R26,R30
000697 f430      	BRSH _0x2000086
000698 940e 0a57 	CALL SUBOPT_0x12
00069a 934a      	ST   -Y,R20
00069b e0a0      	LDI  R26,LOW(0)
00069c de78      	RCALL _pcd8544_wrmasked_G100
00069d cff4      	RJMP _0x2000084
                 _0x2000086:
00069e c011      	RJMP _0x200007B
                 _0x2000087:
                 _0x2000088:
00069f 931f      	PUSH R17
0006a0 5f1f      	SUBI R17,-1
0006a1 85ee      	LDD  R30,Y+14
0006a2 91af      	POP  R26
0006a3 17ae      	CP   R26,R30
0006a4 f458      	BRSH _0x200008A
0006a5 940e 0a68 	CALL SUBOPT_0x14
0006a7 2fae      	MOV  R26,R30
0006a8 2fe3      	MOV  R30,R19
0006a9 940e 0ab9 	CALL __LSLB12
0006ab 93ea      	ST   -Y,R30
0006ac 934a      	ST   -Y,R20
0006ad 85ad      	LDD  R26,Y+13
0006ae de66      	RCALL _pcd8544_wrmasked_G100
0006af cfef      	RJMP _0x2000088
                 _0x200008A:
                 _0x200007B:
0006b0 85ed      	LDD  R30,Y+13
0006b1 30e0      	CPI  R30,0
0006b2 f409      	BRNE _0x200008B
0006b3 c077      	RJMP _0x200004B
                 _0x200008B:
0006b4 85ad      	LDD  R26,Y+13
0006b5 30a8      	CPI  R26,LOW(0x8)
0006b6 f428      	BRSH _0x200008C
0006b7 85ed      	LDD  R30,Y+13
0006b8 1be2      	SUB  R30,R18
0006b9 2f5e      	MOV  R21,R30
0006ba e0e0      	LDI  R30,LOW(0)
0006bb c003      	RJMP _0x20000A2
                 _0x200008C:
0006bc 2f53      	MOV  R21,R19
0006bd 85ed      	LDD  R30,Y+13
0006be 50e8      	SUBI R30,LOW(8)
                 _0x20000A2:
0006bf 87ed      	STD  Y+13,R30
0006c0 e010      	LDI  R17,LOW(0)
0006c1 85ef      	LDD  R30,Y+15
0006c2 5fe8      	SUBI R30,-LOW(8)
0006c3 87ef      	STD  Y+15,R30
0006c4 e0e8      	LDI  R30,LOW(8)
0006c5 1be3      	SUB  R30,R19
0006c6 2f2e      	MOV  R18,R30
0006c7 8908      	LDD  R16,Y+16
0006c8 85ea      	LDD  R30,Y+10
0006c9 85fb      	LDD  R31,Y+10+1
0006ca 83ee      	STD  Y+6,R30
0006cb 83ff      	STD  Y+6+1,R31
                 _0x2000076:
0006cc 2fe5      	MOV  R30,R21
0006cd e0f0      	LDI  R31,0
0006ce 59e0      	SUBI R30,LOW(-__glcd_mask*2)
0006cf 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
0006d0 9144      	LPM  R20,Z
0006d1 85e9      	LDD  R30,Y+9
0006d2 30e6      	CPI  R30,LOW(0x6)
0006d3 f511      	BRNE _0x2000091
0006d4 940e 0a40 	CALL SUBOPT_0xE
                 _0x2000092:
0006d6 931f      	PUSH R17
0006d7 5f1f      	SUBI R17,-1
0006d8 85ee      	LDD  R30,Y+14
0006d9 91af      	POP  R26
0006da 17ae      	CP   R26,R30
0006db f4c8      	BRSH _0x2000094
0006dc 940e 0a1e 	CALL SUBOPT_0xA
0006de 81e0      	LD   R30,Z
0006df 23e4      	AND  R30,R20
0006e0 2fae      	MOV  R26,R30
0006e1 2fe2      	MOV  R30,R18
0006e2 940e 0ab9 	CALL __LSLB12
0006e4 940e 0a5d 	CALL SUBOPT_0x13
0006e6 2fe2      	MOV  R30,R18
0006e7 2fa4      	MOV  R26,R20
0006e8 940e 0ab9 	CALL __LSLB12
0006ea 95e0      	COM  R30
0006eb 21e1      	AND  R30,R1
0006ec 2b5e      	OR   R21,R30
0006ed 940e 0a44 	CALL SUBOPT_0xF
0006ef 93fa      	ST   -Y,R31
0006f0 93ea      	ST   -Y,R30
0006f1 2fa5      	MOV  R26,R21
0006f2 940e 0996 	CALL _glcd_writemem
0006f4 cfe1      	RJMP _0x2000092
                 _0x2000094:
0006f5 c02c      	RJMP _0x2000090
                 _0x2000091:
0006f6 30e9      	CPI  R30,LOW(0x9)
0006f7 f411      	BRNE _0x2000095
0006f8 e050      	LDI  R21,LOW(0)
0006f9 c003      	RJMP _0x2000096
                 _0x2000095:
0006fa 30ea      	CPI  R30,LOW(0xA)
0006fb f4a9      	BRNE _0x200009C
0006fc ef5f      	LDI  R21,LOW(255)
                 _0x2000096:
0006fd 940e 0a53 	CALL SUBOPT_0x11
0006ff 2fae      	MOV  R26,R30
000700 2fe2      	MOV  R30,R18
000701 940e 0ac1 	CALL __LSRB12
000703 2f5e      	MOV  R21,R30
                 _0x2000099:
000704 931f      	PUSH R17
000705 5f1f      	SUBI R17,-1
000706 85ee      	LDD  R30,Y+14
000707 91af      	POP  R26
000708 17ae      	CP   R26,R30
000709 f430      	BRSH _0x200009B
00070a 940e 0a57 	CALL SUBOPT_0x12
00070c 934a      	ST   -Y,R20
00070d e0a0      	LDI  R26,LOW(0)
00070e de06      	RCALL _pcd8544_wrmasked_G100
00070f cff4      	RJMP _0x2000099
                 _0x200009B:
000710 c011      	RJMP _0x2000090
                 _0x200009C:
                 _0x200009D:
000711 931f      	PUSH R17
000712 5f1f      	SUBI R17,-1
000713 85ee      	LDD  R30,Y+14
000714 91af      	POP  R26
000715 17ae      	CP   R26,R30
000716 f458      	BRSH _0x200009F
000717 940e 0a68 	CALL SUBOPT_0x14
000719 2fae      	MOV  R26,R30
00071a 2fe2      	MOV  R30,R18
00071b 940e 0ac1 	CALL __LSRB12
00071d 93ea      	ST   -Y,R30
00071e 934a      	ST   -Y,R20
00071f 85ad      	LDD  R26,Y+13
000720 ddf4      	RCALL _pcd8544_wrmasked_G100
000721 cfef      	RJMP _0x200009D
                 _0x200009F:
                 _0x2000090:
                 _0x2000075:
000722 85e8      	LDD  R30,Y+8
000723 85aa      	LDD  R26,Y+10
000724 85bb      	LDD  R27,Y+10+1
000725 e0f0      	LDI  R31,0
000726 0fea      	ADD  R30,R26
000727 1ffb      	ADC  R31,R27
000728 87ea      	STD  Y+10,R30
000729 87fb      	STD  Y+10+1,R31
00072a ceb3      	RJMP _0x2000049
                 _0x200004B:
                 _0x2160008:
00072b 940e 0b0e 	CALL __LOADLOCR6
00072d 9661      	ADIW R28,17
00072e 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
00072f 940e 0a75 	CALL SUBOPT_0x15
000731 f024      	BRLT _0x2020003
000732 e0e0      	LDI  R30,LOW(0)
000733 e0f0      	LDI  R31,HIGH(0)
000734 940c 094d 	JMP  _0x2160003
                 _0x2020003:
000736 81a8      	LD   R26,Y
000737 81b9      	LDD  R27,Y+1
000738 35a4      	CPI  R26,LOW(0x54)
000739 e0e0      	LDI  R30,HIGH(0x54)
00073a 07be      	CPC  R27,R30
00073b f024      	BRLT _0x2020004
00073c e5e3      	LDI  R30,LOW(83)
00073d e0f0      	LDI  R31,HIGH(83)
00073e 940c 094d 	JMP  _0x2160003
                 _0x2020004:
000740 81e8      	LD   R30,Y
000741 81f9      	LDD  R31,Y+1
000742 940c 094d 	JMP  _0x2160003
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
000744 940e 0a75 	CALL SUBOPT_0x15
000746 f024      	BRLT _0x2020005
000747 e0e0      	LDI  R30,LOW(0)
000748 e0f0      	LDI  R31,HIGH(0)
000749 940c 094d 	JMP  _0x2160003
                 _0x2020005:
00074b 81a8      	LD   R26,Y
00074c 81b9      	LDD  R27,Y+1
00074d 97d0      	SBIW R26,48
00074e f024      	BRLT _0x2020006
00074f e2ef      	LDI  R30,LOW(47)
000750 e0f0      	LDI  R31,HIGH(47)
000751 940c 094d 	JMP  _0x2160003
                 _0x2020006:
000753 81e8      	LD   R30,Y
000754 81f9      	LDD  R31,Y+1
000755 940c 094d 	JMP  _0x2160003
                 ; .FEND
                 _glcd_getcharw_G101:
                 ; .FSTART _glcd_getcharw_G101
000757 93ba      	ST   -Y,R27
000758 93aa      	ST   -Y,R26
000759 9723      	SBIW R28,3
00075a 940e 0a7c 	CALL SUBOPT_0x16
00075c 018f      	MOVW R16,R30
00075d 2e00      	MOV  R0,R16
00075e 2a01      	OR   R0,R17
00075f f419      	BRNE _0x202000B
000760 e0e0      	LDI  R30,LOW(0)
000761 e0f0      	LDI  R31,HIGH(0)
000762 c05f      	RJMP _0x2160007
                 _0x202000B:
000763 940e 0a83 	CALL SUBOPT_0x17
000765 820f      	STD  Y+7,R0
000766 940e 0a83 	CALL SUBOPT_0x17
000768 820e      	STD  Y+6,R0
000769 940e 0a83 	CALL SUBOPT_0x17
00076b 8608      	STD  Y+8,R0
00076c 85eb      	LDD  R30,Y+11
00076d 85a8      	LDD  R26,Y+8
00076e 17ea      	CP   R30,R26
00076f f418      	BRSH _0x202000C
000770 e0e0      	LDI  R30,LOW(0)
000771 e0f0      	LDI  R31,HIGH(0)
000772 c04f      	RJMP _0x2160007
                 _0x202000C:
000773 01f8      	MOVW R30,R16
                +
000774 5f0f     +SUBI R16 , LOW ( - 1 )
000775 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000776 9154      	LPM  R21,Z
000777 85a8      	LDD  R26,Y+8
000778 27bb      	CLR  R27
000779 27ee      	CLR  R30
00077a 0fa5      	ADD  R26,R21
00077b 1fbe      	ADC  R27,R30
00077c 85eb      	LDD  R30,Y+11
00077d e0f0      	LDI  R31,0
00077e 17ea      	CP   R30,R26
00077f 07fb      	CPC  R31,R27
000780 f018      	BRLO _0x202000D
000781 e0e0      	LDI  R30,LOW(0)
000782 e0f0      	LDI  R31,HIGH(0)
000783 c03e      	RJMP _0x2160007
                 _0x202000D:
000784 81ee      	LDD  R30,Y+6
000785 95e6      	LSR  R30
000786 95e6      	LSR  R30
000787 95e6      	LSR  R30
000788 2f4e      	MOV  R20,R30
000789 81ee      	LDD  R30,Y+6
00078a 70e7      	ANDI R30,LOW(0x7)
00078b f009      	BREQ _0x202000E
00078c 5f4f      	SUBI R20,-LOW(1)
                 _0x202000E:
00078d 81ef      	LDD  R30,Y+7
00078e 30e0      	CPI  R30,0
00078f f0a1      	BREQ _0x202000F
000790 85a9      	LDD  R26,Y+9
000791 85ba      	LDD  R27,Y+9+1
000792 93ec      	ST   X,R30
000793 85a8      	LDD  R26,Y+8
000794 85eb      	LDD  R30,Y+11
000795 1bea      	SUB  R30,R26
000796 e0f0      	LDI  R31,0
000797 01df      	MOVW R26,R30
000798 81ef      	LDD  R30,Y+7
000799 e0f0      	LDI  R31,0
00079a 940e 0ace 	CALL __MULW12U
00079c 01df      	MOVW R26,R30
00079d 2fe4      	MOV  R30,R20
00079e e0f0      	LDI  R31,0
00079f 940e 0ace 	CALL __MULW12U
0007a1 0fe0      	ADD  R30,R16
0007a2 1ff1      	ADC  R31,R17
0007a3 c01e      	RJMP _0x2160007
                 _0x202000F:
0007a4 0198      	MOVW R18,R16
0007a5 2fe5      	MOV  R30,R21
0007a6 e0f0      	LDI  R31,0
                +
0007a7 0f0e     +ADD R16 , R30
0007a8 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2020010:
0007a9 85a8      	LDD  R26,Y+8
0007aa 5faf      	SUBI R26,-LOW(1)
0007ab 87a8      	STD  Y+8,R26
0007ac 50a1      	SUBI R26,LOW(1)
0007ad 85eb      	LDD  R30,Y+11
0007ae 17ae      	CP   R26,R30
0007af f460      	BRSH _0x2020012
0007b0 01f9      	MOVW R30,R18
                +
0007b1 5f2f     +SUBI R18 , LOW ( - 1 )
0007b2 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0007b3 91a4      	LPM  R26,Z
0007b4 e0b0      	LDI  R27,0
0007b5 2fe4      	MOV  R30,R20
0007b6 e0f0      	LDI  R31,0
0007b7 940e 0ace 	CALL __MULW12U
                +
0007b9 0f0e     +ADD R16 , R30
0007ba 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
0007bb cfed      	RJMP _0x2020010
                 _0x2020012:
0007bc 01f9      	MOVW R30,R18
0007bd 91e4      	LPM  R30,Z
0007be 85a9      	LDD  R26,Y+9
0007bf 85ba      	LDD  R27,Y+9+1
0007c0 93ec      	ST   X,R30
0007c1 01f8      	MOVW R30,R16
                 _0x2160007:
0007c2 940e 0b0e 	CALL __LOADLOCR6
0007c4 962c      	ADIW R28,12
0007c5 9508      	RET
                 ; .FEND
                 _glcd_new_line_G101:
                 ; .FSTART _glcd_new_line_G101
0007c6 e0e0      	LDI  R30,LOW(0)
                +
0007c7 93e0 0577+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
0007c9 91a0 0578+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
0007cb 27bb      	CLR  R27
0007cc 940e 0a88 	CALL SUBOPT_0x18
0007ce e0f0      	LDI  R31,0
0007cf 0fae      	ADD  R26,R30
0007d0 1fbf      	ADC  R27,R31
                +
0007d1 91e0 057c+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
0007d3 e0f0      	LDI  R31,0
0007d4 0fae      	ADD  R26,R30
0007d5 1fbf      	ADC  R27,R31
0007d6 df6d      	RCALL _glcd_clipy
                +
0007d7 93e0 0578+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
0007d9 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
0007da 93aa      	ST   -Y,R26
0007db 9721      	SBIW R28,1
0007dc 940e 0a7c 	CALL SUBOPT_0x16
0007de 9730      	SBIW R30,0
0007df f409      	BRNE PC+2
0007e0 c055      	RJMP _0x202001F
0007e1 81af      	LDD  R26,Y+7
0007e2 30aa      	CPI  R26,LOW(0xA)
0007e3 f409      	BRNE _0x2020020
0007e4 c04f      	RJMP _0x2020021
                 _0x2020020:
0007e5 81ef      	LDD  R30,Y+7
0007e6 93ea      	ST   -Y,R30
0007e7 01de      	MOVW R26,R28
0007e8 9617      	ADIW R26,7
0007e9 df6d      	RCALL _glcd_getcharw_G101
0007ea 01af      	MOVW R20,R30
0007eb 9730      	SBIW R30,0
0007ec f409      	BRNE _0x2020022
0007ed c04a      	RJMP _0x2160006
                 _0x2020022:
                +
0007ee 91e0 057b+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
0007f0 81ae      	LDD  R26,Y+6
0007f1 0fea      	ADD  R30,R26
0007f2 2f3e      	MOV  R19,R30
                +
0007f3 91a0 0577+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
0007f5 27bb      	CLR  R27
0007f6 e0f0      	LDI  R31,0
0007f7 0fea      	ADD  R30,R26
0007f8 1ffb      	ADC  R31,R27
0007f9 018f      	MOVW R16,R30
                +
0007fa 3505     +CPI R16 , LOW ( 85 )
0007fb e0e0     +LDI R30 , HIGH ( 85 )
0007fc 071e     +CPC R17 , R30
                 	__CPWRN 16,17,85
0007fd f018      	BRLO _0x2020023
0007fe 2f03      	MOV  R16,R19
0007ff 2711      	CLR  R17
000800 dfc5      	RCALL _glcd_new_line_G101
                 _0x2020023:
                +
000801 91e0 0577+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000803 93ea      	ST   -Y,R30
                +
000804 91e0 0578+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000806 93ea      	ST   -Y,R30
000807 85e8      	LDD  R30,Y+8
000808 93ea      	ST   -Y,R30
000809 940e 0a88 	CALL SUBOPT_0x18
00080b 93ea      	ST   -Y,R30
00080c e0e1      	LDI  R30,LOW(1)
00080d 93ea      	ST   -Y,R30
00080e 935a      	ST   -Y,R21
00080f 934a      	ST   -Y,R20
000810 e0a7      	LDI  R26,LOW(7)
000811 dd3c      	RCALL _glcd_block
                +
000812 91e0 0577+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000814 81ae      	LDD  R26,Y+6
000815 0fea      	ADD  R30,R26
000816 93ea      	ST   -Y,R30
                +
000817 91e0 0578+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000819 93ea      	ST   -Y,R30
                +
00081a 91e0 057b+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
00081c 93ea      	ST   -Y,R30
00081d 940e 0a88 	CALL SUBOPT_0x18
00081f 940e 0a8f 	CALL SUBOPT_0x19
                +
000821 91e0 0577+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000823 93ea      	ST   -Y,R30
                +
000824 91a0 0578+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000826 940e 0a88 	CALL SUBOPT_0x18
000828 0fea      	ADD  R30,R26
000829 93ea      	ST   -Y,R30
00082a 933a      	ST   -Y,R19
                +
00082b 91e0 057c+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
00082d 940e 0a8f 	CALL SUBOPT_0x19
00082f e5e4      	LDI  R30,LOW(84)
000830 e0f0      	LDI  R31,HIGH(84)
000831 17e0      	CP   R30,R16
000832 07f1      	CPC  R31,R17
000833 f411      	BRNE _0x2020024
                 _0x2020021:
000834 df91      	RCALL _glcd_new_line_G101
000835 c002      	RJMP _0x2160006
                 _0x2020024:
                 _0x202001F:
                +
000836 9300 0577+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
                 _0x2160006:
000838 940e 0b0e 	CALL __LOADLOCR6
00083a 9628      	ADIW R28,8
00083b 9508      	RET
                 ; .FEND
                 _glcd_outtextxy:
                 ; .FSTART _glcd_outtextxy
00083c 93ba      	ST   -Y,R27
00083d 93aa      	ST   -Y,R26
00083e 931a      	ST   -Y,R17
00083f 81ec      	LDD  R30,Y+4
000840 93ea      	ST   -Y,R30
000841 81ac      	LDD  R26,Y+4
000842 d009      	RCALL _glcd_moveto
                 _0x2020025:
000843 940e 0a99 	CALL SUBOPT_0x1A
000845 f019      	BREQ _0x2020027
000846 2fa1      	MOV  R26,R17
000847 df92      	RCALL _glcd_putchar
000848 cffa      	RJMP _0x2020025
                 _0x2020027:
000849 8118      	LDD  R17,Y+0
00084a 940c 0942 	JMP  _0x2160004
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
00084c 93aa      	ST   -Y,R26
00084d 81a9      	LDD  R26,Y+1
00084e 27bb      	CLR  R27
00084f dedf      	RCALL _glcd_clipx
                +
000850 93e0 0577+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000852 81a8      	LD   R26,Y
000853 27bb      	CLR  R27
000854 deef      	RCALL _glcd_clipy
                +
000855 93e0 0578+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000857 940c 094d 	JMP  _0x2160003
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 
                 	.CSEG
                 _itoa:
                 ; .FSTART _itoa
000859 93ba      	ST   -Y,R27
00085a 93aa      	ST   -Y,R26
00085b 91a9          ld   r26,y+
00085c 91b9          ld   r27,y+
00085d 91e9          ld   r30,y+
00085e 91f9          ld   r31,y+
00085f 9630          adiw r30,0
000860 f42a          brpl __itoa0
000861 95e0          com  r30
000862 95f0          com  r31
000863 9631          adiw r30,1
000864 e26d          ldi  r22,'-'
000865 936d          st   x+,r22
                 __itoa0:
000866 94e8          clt
000867 e180          ldi  r24,low(10000)
000868 e297          ldi  r25,high(10000)
000869 d00d          rcall __itoa1
00086a ee88          ldi  r24,low(1000)
00086b e093          ldi  r25,high(1000)
00086c d00a          rcall __itoa1
00086d e684          ldi  r24,100
00086e 2799          clr  r25
00086f d007          rcall __itoa1
000870 e08a          ldi  r24,10
000871 d005          rcall __itoa1
000872 2f6e          mov  r22,r30
000873 d010          rcall __itoa5
000874 2766          clr  r22
000875 936c          st   x,r22
000876 9508          ret
                 
                 __itoa1:
000877 2766          clr	 r22
                 __itoa2:
000878 17e8          cp   r30,r24
000879 07f9          cpc  r31,r25
00087a f020          brlo __itoa3
00087b 9563          inc  r22
00087c 1be8          sub  r30,r24
00087d 0bf9          sbc  r31,r25
00087e f7c9          brne __itoa2
                 __itoa3:
00087f 2366          tst  r22
000880 f411          brne __itoa4
000881 f016          brts __itoa5
000882 9508          ret
                 __itoa4:
000883 9468          set
                 __itoa5:
000884 5d60          subi r22,-0x30
000885 936d          st   x+,r22
000886 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G106:
                 ; .FSTART __lcd_write_nibble_G106
000887 93aa      	ST   -Y,R26
000888 81e8      	LD   R30,Y
000889 71e0      	ANDI R30,LOW(0x10)
00088a f011      	BREQ _0x20C0004
00088b 9adb      	SBI  0x1B,3
00088c c001      	RJMP _0x20C0005
                 _0x20C0004:
00088d 98db      	CBI  0x1B,3
                 _0x20C0005:
00088e 81e8      	LD   R30,Y
00088f 72e0      	ANDI R30,LOW(0x20)
000890 f011      	BREQ _0x20C0006
000891 9adc      	SBI  0x1B,4
000892 c001      	RJMP _0x20C0007
                 _0x20C0006:
000893 98dc      	CBI  0x1B,4
                 _0x20C0007:
000894 81e8      	LD   R30,Y
000895 74e0      	ANDI R30,LOW(0x40)
000896 f011      	BREQ _0x20C0008
000897 9add      	SBI  0x1B,5
000898 c001      	RJMP _0x20C0009
                 _0x20C0008:
000899 98dd      	CBI  0x1B,5
                 _0x20C0009:
00089a 81e8      	LD   R30,Y
00089b 78e0      	ANDI R30,LOW(0x80)
00089c f011      	BREQ _0x20C000A
00089d 9ade      	SBI  0x1B,6
00089e c001      	RJMP _0x20C000B
                 _0x20C000A:
00089f 98de      	CBI  0x1B,6
                 _0x20C000B:
                +
0008a0 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0008a1 958a     +DEC R24
0008a2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0008a3 9ada      	SBI  0x1B,2
                +
0008a4 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0008a5 958a     +DEC R24
0008a6 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0008a7 98da      	CBI  0x1B,2
                +
0008a8 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0008a9 958a     +DEC R24
0008aa f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0008ab c086      	RJMP _0x2160005
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0008ac 93aa      	ST   -Y,R26
0008ad 81a8      	LD   R26,Y
0008ae dfd8      	RCALL __lcd_write_nibble_G106
0008af 81e8          ld    r30,y
0008b0 95e2          swap  r30
0008b1 83e8          st    y,r30
0008b2 81a8      	LD   R26,Y
0008b3 dfd3      	RCALL __lcd_write_nibble_G106
                +
0008b4 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0008b5 958a     +DEC R24
0008b6 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0008b7 c07a      	RJMP _0x2160005
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0008b8 93aa      	ST   -Y,R26
0008b9 81e8      	LD   R30,Y
0008ba e0f0      	LDI  R31,0
0008bb 54ea      	SUBI R30,LOW(-__base_y_G106)
0008bc 4ff8      	SBCI R31,HIGH(-__base_y_G106)
0008bd 81e0      	LD   R30,Z
0008be 81a9      	LDD  R26,Y+1
0008bf 0fae      	ADD  R26,R30
0008c0 dfeb      	RCALL __lcd_write_data
0008c1 80d9      	LDD  R13,Y+1
0008c2 80c8      	LDD  R12,Y+0
0008c3 c089      	RJMP _0x2160003
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0008c4 e0a2      	LDI  R26,LOW(2)
0008c5 940e 0aa1 	CALL SUBOPT_0x1B
0008c7 e0ac      	LDI  R26,LOW(12)
0008c8 dfe3      	RCALL __lcd_write_data
0008c9 e0a1      	LDI  R26,LOW(1)
0008ca 940e 0aa1 	CALL SUBOPT_0x1B
0008cc e0e0      	LDI  R30,LOW(0)
0008cd 2ece      	MOV  R12,R30
0008ce 2ede      	MOV  R13,R30
0008cf 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0008d0 93aa      	ST   -Y,R26
0008d1 81a8      	LD   R26,Y
0008d2 30aa      	CPI  R26,LOW(0xA)
0008d3 f021      	BREQ _0x20C0011
0008d4 91e0 07ba 	LDS  R30,__lcd_maxx
0008d6 16de      	CP   R13,R30
0008d7 f048      	BRLO _0x20C0010
                 _0x20C0011:
0008d8 e0e0      	LDI  R30,LOW(0)
0008d9 93ea      	ST   -Y,R30
0008da 94c3      	INC  R12
0008db 2dac      	MOV  R26,R12
0008dc dfdb      	RCALL _lcd_gotoxy
0008dd 81a8      	LD   R26,Y
0008de 30aa      	CPI  R26,LOW(0xA)
0008df f409      	BRNE _0x20C0013
0008e0 c051      	RJMP _0x2160005
                 _0x20C0013:
                 _0x20C0010:
0008e1 94d3      	INC  R13
0008e2 9ad8      	SBI  0x1B,0
0008e3 81a8      	LD   R26,Y
0008e4 dfc7      	RCALL __lcd_write_data
0008e5 98d8      	CBI  0x1B,0
0008e6 c04b      	RJMP _0x2160005
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0008e7 93ba      	ST   -Y,R27
0008e8 93aa      	ST   -Y,R26
0008e9 931a      	ST   -Y,R17
                 _0x20C0014:
0008ea 940e 0a99 	CALL SUBOPT_0x1A
0008ec f019      	BREQ _0x20C0016
0008ed 2fa1      	MOV  R26,R17
0008ee dfe1      	RCALL _lcd_putchar
0008ef cffa      	RJMP _0x20C0014
                 _0x20C0016:
0008f0 8118      	LDD  R17,Y+0
0008f1 c0a2      	RJMP _0x2160002
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
0008f2 93ba      	ST   -Y,R27
0008f3 93aa      	ST   -Y,R26
0008f4 931a      	ST   -Y,R17
                 _0x20C0017:
0008f5 81e9      	LDD  R30,Y+1
0008f6 81fa      	LDD  R31,Y+1+1
0008f7 9631      	ADIW R30,1
0008f8 83e9      	STD  Y+1,R30
0008f9 83fa      	STD  Y+1+1,R31
0008fa 9731      	SBIW R30,1
0008fb 91e4      	LPM  R30,Z
0008fc 2f1e      	MOV  R17,R30
0008fd 30e0      	CPI  R30,0
0008fe f019      	BREQ _0x20C0019
0008ff 2fa1      	MOV  R26,R17
000900 dfcf      	RCALL _lcd_putchar
000901 cff3      	RJMP _0x20C0017
                 _0x20C0019:
000902 8118      	LDD  R17,Y+0
000903 c090      	RJMP _0x2160002
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000904 93aa      	ST   -Y,R26
000905 9ad3      	SBI  0x1A,3
000906 9ad4      	SBI  0x1A,4
000907 9ad5      	SBI  0x1A,5
000908 9ad6      	SBI  0x1A,6
000909 9ad2      	SBI  0x1A,2
00090a 9ad0      	SBI  0x1A,0
00090b 9ad1      	SBI  0x1A,1
00090c 98da      	CBI  0x1B,2
00090d 98d8      	CBI  0x1B,0
00090e 98d9      	CBI  0x1B,1
00090f 81e8      	LD   R30,Y
000910 93e0 07ba 	STS  __lcd_maxx,R30
000912 58e0      	SUBI R30,-LOW(128)
                +
000913 93e0 07b8+STS __base_y_G106 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G106,2
000915 81e8      	LD   R30,Y
000916 54e0      	SUBI R30,-LOW(192)
                +
000917 93e0 07b9+STS __base_y_G106 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G106,3
000919 e1a4      	LDI  R26,LOW(20)
00091a e0b0      	LDI  R27,0
00091b 940e 0aaf 	CALL _delay_ms
00091d 940e 0aa7 	CALL SUBOPT_0x1C
00091f 940e 0aa7 	CALL SUBOPT_0x1C
000921 940e 0aa7 	CALL SUBOPT_0x1C
000923 e2a0      	LDI  R26,LOW(32)
000924 df62      	RCALL __lcd_write_nibble_G106
                +
000925 ec88     +LDI R24 , LOW ( 200 )
000926 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000927 9701     +SBIW R24 , 1
000928 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000929 e2a8      	LDI  R26,LOW(40)
00092a df81      	RCALL __lcd_write_data
00092b e0a4      	LDI  R26,LOW(4)
00092c df7f      	RCALL __lcd_write_data
00092d e8a5      	LDI  R26,LOW(133)
00092e df7d      	RCALL __lcd_write_data
00092f e0a6      	LDI  R26,LOW(6)
000930 df7b      	RCALL __lcd_write_data
000931 df92      	RCALL _lcd_clear
                 _0x2160005:
000932 9621      	ADIW R28,1
000933 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
000934 93ba      	ST   -Y,R27
000935 93aa      	ST   -Y,R26
000936 81b9          ldd  r27,y+1
000937 81a8          ld   r26,y
000938 9610          adiw r26,0
000939 f031          breq memset1
00093a 81fc          ldd  r31,y+4
00093b 81eb          ldd  r30,y+3
00093c 816a          ldd  r22,y+2
                 memset0:
00093d 9361          st   z+,r22
00093e 9711          sbiw r26,1
00093f f7e9          brne memset0
                 memset1:
000940 81eb          ldd  r30,y+3
000941 81fc          ldd  r31,y+4
                 _0x2160004:
000942 9625      	ADIW R28,5
000943 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
000944 93aa      	ST   -Y,R26
000945 81e8      	LD   R30,Y
000946 e0f0      	LDI  R31,0
000947 59e0      	SUBI R30,LOW(-__glcd_mask*2)
000948 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000949 91a4      	LPM  R26,Z
00094a 81e9      	LDD  R30,Y+1
00094b 940e 0ab9 	CALL __LSLB12
                 _0x2160003:
00094d 9622      	ADIW R28,2
00094e 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
00094f 93aa      	ST   -Y,R26
000950 931a      	ST   -Y,R17
000951 81e9      	LDD  R30,Y+1
000952 30e7      	CPI  R30,LOW(0x7)
000953 f011      	BREQ _0x2100007
000954 30ea      	CPI  R30,LOW(0xA)
000955 f419      	BRNE _0x2100008
                 _0x2100007:
000956 9110 0575 	LDS  R17,_glcd_state
000958 c009      	RJMP _0x2100009
                 _0x2100008:
000959 30e9      	CPI  R30,LOW(0x9)
00095a f419      	BRNE _0x210000B
                +
00095b 9110 0576+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
00095d c004      	RJMP _0x2100009
                 _0x210000B:
00095e 30e8      	CPI  R30,LOW(0x8)
00095f f4a1      	BRNE _0x2100005
                +
000960 9110 0585+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x2100009:
                +
000962 91e0 0576+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000964 30e0      	CPI  R30,0
000965 f049      	BREQ _0x210000E
000966 3010      	CPI  R17,0
000967 f019      	BREQ _0x210000F
000968 efef      	LDI  R30,LOW(255)
000969 8118      	LDD  R17,Y+0
00096a c029      	RJMP _0x2160002
                 _0x210000F:
00096b 81ea      	LDD  R30,Y+2
00096c 95e0      	COM  R30
00096d 8118      	LDD  R17,Y+0
00096e c025      	RJMP _0x2160002
                 _0x210000E:
00096f 3010      	CPI  R17,0
000970 f419      	BRNE _0x2100011
000971 e0e0      	LDI  R30,LOW(0)
000972 8118      	LDD  R17,Y+0
000973 c020      	RJMP _0x2160002
                 _0x2100011:
                 _0x2100005:
000974 81ea      	LDD  R30,Y+2
000975 8118      	LDD  R17,Y+0
000976 c01d      	RJMP _0x2160002
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
000977 93ba      	ST   -Y,R27
000978 93aa      	ST   -Y,R26
000979 81ea      	LDD  R30,Y+2
00097a 30e1      	CPI  R30,LOW(0x1)
00097b f421      	BRNE _0x2100015
00097c 81e8      	LD   R30,Y
00097d 81f9      	LDD  R31,Y+1
00097e 91e4      	LPM  R30,Z
00097f c014      	RJMP _0x2160002
                 _0x2100015:
000980 30e2      	CPI  R30,LOW(0x2)
000981 f429      	BRNE _0x2100016
000982 81a8      	LD   R26,Y
000983 81b9      	LDD  R27,Y+1
000984 940e 0ade 	CALL __EEPROMRDB
000986 c00d      	RJMP _0x2160002
                 _0x2100016:
000987 30e3      	CPI  R30,LOW(0x3)
000988 f441      	BRNE _0x2100018
000989 81a8      	LD   R26,Y
00098a 81b9      	LDD  R27,Y+1
                +
00098b 91e0 058e+LDS R30 , _glcd_state + ( 25 )
00098d 91f0 058f+LDS R31 , _glcd_state + ( 25 ) + 1
00098f 9509     +ICALL
                 	__CALL1MN _glcd_state,25
000990 c003      	RJMP _0x2160002
                 _0x2100018:
000991 81a8      	LD   R26,Y
000992 81b9      	LDD  R27,Y+1
000993 91ec      	LD   R30,X
                 _0x2160002:
000994 9623      	ADIW R28,3
000995 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
000996 93aa      	ST   -Y,R26
000997 81eb      	LDD  R30,Y+3
000998 30e0      	CPI  R30,0
000999 f429      	BRNE _0x210001C
00099a 81e8      	LD   R30,Y
00099b 81a9      	LDD  R26,Y+1
00099c 81ba      	LDD  R27,Y+1+1
00099d 93ec      	ST   X,R30
00099e c014      	RJMP _0x210001B
                 _0x210001C:
00099f 30e2      	CPI  R30,LOW(0x2)
0009a0 f431      	BRNE _0x210001D
0009a1 81e8      	LD   R30,Y
0009a2 81a9      	LDD  R26,Y+1
0009a3 81ba      	LDD  R27,Y+1+1
0009a4 940e 0af2 	CALL __EEPROMWRB
0009a6 c00c      	RJMP _0x210001B
                 _0x210001D:
0009a7 30e3      	CPI  R30,LOW(0x3)
0009a8 f451      	BRNE _0x210001B
0009a9 81e9      	LDD  R30,Y+1
0009aa 81fa      	LDD  R31,Y+1+1
0009ab 93fa      	ST   -Y,R31
0009ac 93ea      	ST   -Y,R30
0009ad 81aa      	LDD  R26,Y+2
                +
0009ae 91e0 0590+LDS R30 , _glcd_state + ( 27 )
0009b0 91f0 0591+LDS R31 , _glcd_state + ( 27 ) + 1
0009b2 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x210001B:
                 _0x2160001:
0009b3 9624      	ADIW R28,4
0009b4 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _glcd_state:
000575           	.BYTE 0x1D
                 _keypad:
000592           	.BYTE 0x12
                 
                 	.ESEG
                 _my_eeprom:
000000           	.BYTE 0x2
                 
                 	.DSEG
                 _tmp:
0005a4           	.BYTE 0xA
                 _tmp2:
0005ae           	.BYTE 0xA
                 _gfx_addr_G100:
0005b8           	.BYTE 0x2
                 _gfx_buffer_G100:
0005ba           	.BYTE 0x1F8
                 __seed_G104:
0007b2           	.BYTE 0x4
                 __base_y_G106:
0007b6           	.BYTE 0x4
                 __lcd_maxx:
0007ba           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x0:
0009b5 e0a6      	LDI  R26,LOW(6)
0009b6 9f0a      	MUL  R16,R26
0009b7 01f0      	MOVW R30,R0
0009b8 56ee      	SUBI R30,LOW(-_keypad)
0009b9 4ffa      	SBCI R31,HIGH(-_keypad)
0009ba 01df      	MOVW R26,R30
0009bb 2fe3      	MOV  R30,R19
0009bc e0f0      	LDI  R31,0
0009bd 0fee      	LSL  R30
0009be 1fff      	ROL  R31
0009bf 0fae      	ADD  R26,R30
0009c0 1fbf      	ADC  R27,R31
0009c1 940e 0ad6 	CALL __GETW1P
0009c3 940e 0b10 	CALL __LOADLOCR4
0009c5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0x1:
0009c6 93ba      	ST   -Y,R27
0009c7 93aa      	ST   -Y,R26
0009c8 940e 04f7 	CALL _glcd_clear
0009ca 81e8      	LD   R30,Y
0009cb 81f9      	LDD  R31,Y+1
0009cc 93fa      	ST   -Y,R31
0009cd 93ea      	ST   -Y,R30
0009ce eaae      	LDI  R26,LOW(_tmp2)
0009cf e0b5      	LDI  R27,HIGH(_tmp2)
0009d0 940e 0859 	CALL _itoa
0009d2 e0e5      	LDI  R30,LOW(5)
0009d3 93ea      	ST   -Y,R30
0009d4 e0ea      	LDI  R30,LOW(10)
0009d5 93ea      	ST   -Y,R30
0009d6 eaae      	LDI  R26,LOW(_tmp2)
0009d7 e0b5      	LDI  R27,HIGH(_tmp2)
0009d8 940e 083c 	CALL _glcd_outtextxy
0009da e0ef      	LDI  R30,LOW(15)
0009db 93ea      	ST   -Y,R30
0009dc e1e4      	LDI  R30,LOW(20)
0009dd 93ea      	ST   -Y,R30
0009de 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2:
0009df 93fa      	ST   -Y,R31
0009e0 93ea      	ST   -Y,R30
0009e1 eaa4      	LDI  R26,LOW(_tmp)
0009e2 e0b5      	LDI  R27,HIGH(_tmp)
0009e3 940e 0859 	CALL _itoa
0009e5 e1ee      	LDI  R30,LOW(30)
0009e6 93ea      	ST   -Y,R30
0009e7 93ea      	ST   -Y,R30
0009e8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x3:
0009e9 940e 08c4 	CALL _lcd_clear
0009eb e0e0      	LDI  R30,LOW(0)
0009ec 93ea      	ST   -Y,R30
0009ed e0a0      	LDI  R26,LOW(0)
0009ee 940c 08b8 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
                +
0009f0 e000     +LDI R16 , LOW ( 0 )
0009f1 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
0009f2 ef2f     +LDI R18 , LOW ( - 1 )
0009f3 ef3f     +LDI R19 , HIGH ( - 1 )
                 	__GETWRN 18,19,-1
                +
0009f4 e040     +LDI R20 , LOW ( 0 )
0009f5 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
0009f6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x5:
0009f7 93fa      	ST   -Y,R31
0009f8 93ea      	ST   -Y,R30
0009f9 01d5      	MOVW R26,R10
0009fa 19a8      	SUB  R26,R8
0009fb 09b9      	SBC  R27,R9
0009fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6:
0009fd 2dea      	MOV  R30,R10
0009fe 19e8      	SUB  R30,R8
0009ff 5de0      	SUBI R30,-LOW(48)
000a00 2fae      	MOV  R26,R30
000a01 940c 08d0 	JMP  _lcd_putchar
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000a03 01f8      	MOVW R30,R16
000a04 9731      	SBIW R30,1
000a05 01de      	MOVW R26,R28
000a06 0fae      	ADD  R26,R30
000a07 1fbf      	ADC  R27,R31
000a08 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x8:
000a09 93fa      	ST   -Y,R31
000a0a 93ea      	ST   -Y,R30
000a0b 01fe      	MOVW R30,R28
000a0c 9635      	ADIW R30,5
000a0d 93fa      	ST   -Y,R31
000a0e 93ea      	ST   -Y,R30
000a0f e1ee      	LDI  R30,LOW(30)
000a10 e0f0      	LDI  R31,HIGH(30)
000a11 cfe5      	RJMP SUBOPT_0x5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x9:
000a12 93fa      	ST   -Y,R31
000a13 93ea      	ST   -Y,R30
000a14 01de      	MOVW R26,R28
000a15 9612      	ADIW R26,2
000a16 940e 0298 	CALL _mainScreenLcd
000a18 e0ea      	LDI  R30,LOW(10)
000a19 93ea      	ST   -Y,R30
000a1a e0a0      	LDI  R26,LOW(0)
000a1b 940e 08b8 	CALL _lcd_gotoxy
000a1d cfdf      	RJMP SUBOPT_0x6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xA:
000a1e eba8      	LDI  R26,LOW(_gfx_addr_G100)
000a1f e0b5      	LDI  R27,HIGH(_gfx_addr_G100)
000a20 91ed      	LD   R30,X+
000a21 91fd      	LD   R31,X+
000a22 9631      	ADIW R30,1
000a23 93fe      	ST   -X,R31
000a24 93ee      	ST   -X,R30
000a25 9731      	SBIW R30,1
000a26 54e6      	SUBI R30,LOW(-_gfx_buffer_G100)
000a27 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G100)
000a28 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
000a29 93e0 0064 	STS  100,R30
000a2b 91e0 0065 	LDS  R30,101
000a2d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
000a2e 0fea      	ADD  R30,R26
000a2f 1ffb      	ADC  R31,R27
000a30 83ee      	STD  Y+6,R30
000a31 83ff      	STD  Y+6+1,R31
000a32 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0xD:
000a33 85ec      	LDD  R30,Y+12
000a34 93ea      	ST   -Y,R30
000a35 81ef      	LDD  R30,Y+7
000a36 85f8      	LDD  R31,Y+7+1
000a37 9631      	ADIW R30,1
000a38 83ef      	STD  Y+7,R30
000a39 87f8      	STD  Y+7+1,R31
000a3a 9731      	SBIW R30,1
000a3b 93fa      	ST   -Y,R31
000a3c 93ea      	ST   -Y,R30
000a3d e0a0      	LDI  R26,LOW(0)
000a3e 940c 0996 	JMP  _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
000a40 930a      	ST   -Y,R16
000a41 89a8      	LDD  R26,Y+16
000a42 940c 0415 	JMP  _pcd8544_setaddr_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0xF:
000a44 85ec      	LDD  R30,Y+12
000a45 93ea      	ST   -Y,R30
000a46 81ef      	LDD  R30,Y+7
000a47 85f8      	LDD  R31,Y+7+1
000a48 9631      	ADIW R30,1
000a49 83ef      	STD  Y+7,R30
000a4a 87f8      	STD  Y+7+1,R31
000a4b 9731      	SBIW R30,1
000a4c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x10:
000a4d 2766      	CLR  R22
000a4e 2777      	CLR  R23
000a4f 01df      	MOVW R26,R30
000a50 01cb      	MOVW R24,R22
000a51 940c 0977 	JMP  _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
000a53 935a      	ST   -Y,R21
000a54 85aa      	LDD  R26,Y+10
000a55 940c 094f 	JMP  _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12:
000a57 930a      	ST   -Y,R16
000a58 9503      	INC  R16
000a59 89e8      	LDD  R30,Y+16
000a5a 93ea      	ST   -Y,R30
000a5b 935a      	ST   -Y,R21
000a5c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x13:
000a5d 2f5e      	MOV  R21,R30
000a5e 85ec      	LDD  R30,Y+12
000a5f 93ea      	ST   -Y,R30
000a60 81af      	LDD  R26,Y+7
000a61 85b8      	LDD  R27,Y+7+1
000a62 2788      	CLR  R24
000a63 2799      	CLR  R25
000a64 940e 0977 	CALL _glcd_readmem
000a66 2e1e      	MOV  R1,R30
000a67 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x14:
000a68 930a      	ST   -Y,R16
000a69 9503      	INC  R16
000a6a 89e8      	LDD  R30,Y+16
000a6b 93ea      	ST   -Y,R30
000a6c 85ee      	LDD  R30,Y+14
000a6d 93ea      	ST   -Y,R30
000a6e 85e9      	LDD  R30,Y+9
000a6f 85fa      	LDD  R31,Y+9+1
000a70 9631      	ADIW R30,1
000a71 87e9      	STD  Y+9,R30
000a72 87fa      	STD  Y+9+1,R31
000a73 9731      	SBIW R30,1
000a74 cfd8      	RJMP SUBOPT_0x10
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15:
000a75 93ba      	ST   -Y,R27
000a76 93aa      	ST   -Y,R26
000a77 81a8      	LD   R26,Y
000a78 81b9      	LDD  R27,Y+1
000a79 940e 0b03 	CALL __CPW02
000a7b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16:
000a7c 940e 0b07 	CALL __SAVELOCR6
                +
000a7e 91e0 0579+LDS R30 , _glcd_state + ( 4 )
000a80 91f0 057a+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000a82 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17:
000a83 01f8      	MOVW R30,R16
                +
000a84 5f0f     +SUBI R16 , LOW ( - 1 )
000a85 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000a86 9004      	LPM  R0,Z
000a87 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x18:
                +
000a88 91e0 0579+LDS R30 , _glcd_state + ( 4 )
000a8a 91f0 057a+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000a8c 9631      	ADIW R30,1
000a8d 91e4      	LPM  R30,Z
000a8e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x19:
000a8f 93ea      	ST   -Y,R30
000a90 e0e0      	LDI  R30,LOW(0)
000a91 93ea      	ST   -Y,R30
000a92 e0e0      	LDI  R30,LOW(0)
000a93 e0f0      	LDI  R31,HIGH(0)
000a94 93fa      	ST   -Y,R31
000a95 93ea      	ST   -Y,R30
000a96 e0a9      	LDI  R26,LOW(9)
000a97 940c 054e 	JMP  _glcd_block
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1A:
000a99 81a9      	LDD  R26,Y+1
000a9a 81ba      	LDD  R27,Y+1+1
000a9b 91ed      	LD   R30,X+
000a9c 83a9      	STD  Y+1,R26
000a9d 83ba      	STD  Y+1+1,R27
000a9e 2f1e      	MOV  R17,R30
000a9f 30e0      	CPI  R30,0
000aa0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1B:
000aa1 940e 08ac 	CALL __lcd_write_data
000aa3 e0a3      	LDI  R26,LOW(3)
000aa4 e0b0      	LDI  R27,0
000aa5 940c 0aaf 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1C:
000aa7 e3a0      	LDI  R26,LOW(48)
000aa8 940e 0887 	CALL __lcd_write_nibble_G106
                +
000aaa ec88     +LDI R24 , LOW ( 200 )
000aab e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000aac 9701     +SBIW R24 , 1
000aad f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000aae 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000aaf 9610      	adiw r26,0
000ab0 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000ab1 ed80     +LDI R24 , LOW ( 0x7D0 )
000ab2 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000ab3 9701     +SBIW R24 , 1
000ab4 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000ab5 95a8      	wdr
000ab6 9711      	sbiw r26,1
000ab7 f7c9      	brne __delay_ms0
                 __delay_ms1:
000ab8 9508      	ret
                 
                 __LSLB12:
000ab9 23ee      	TST  R30
000aba 2e0e      	MOV  R0,R30
000abb 2fea      	MOV  R30,R26
000abc f019      	BREQ __LSLB12R
                 __LSLB12L:
000abd 0fee      	LSL  R30
000abe 940a      	DEC  R0
000abf f7e9      	BRNE __LSLB12L
                 __LSLB12R:
000ac0 9508      	RET
                 
                 __LSRB12:
000ac1 23ee      	TST  R30
000ac2 2e0e      	MOV  R0,R30
000ac3 2fea      	MOV  R30,R26
000ac4 f019      	BREQ __LSRB12R
                 __LSRB12L:
000ac5 95e6      	LSR  R30
000ac6 940a      	DEC  R0
000ac7 f7e9      	BRNE __LSRB12L
                 __LSRB12R:
000ac8 9508      	RET
                 
                 __LSLW2:
000ac9 0fee      	LSL  R30
000aca 1fff      	ROL  R31
000acb 0fee      	LSL  R30
000acc 1fff      	ROL  R31
000acd 9508      	RET
                 
                 __MULW12U:
000ace 9ffa      	MUL  R31,R26
000acf 2df0      	MOV  R31,R0
000ad0 9feb      	MUL  R30,R27
000ad1 0df0      	ADD  R31,R0
000ad2 9fea      	MUL  R30,R26
000ad3 2de0      	MOV  R30,R0
000ad4 0df1      	ADD  R31,R1
000ad5 9508      	RET
                 
                 __GETW1P:
000ad6 91ed      	LD   R30,X+
000ad7 91fc      	LD   R31,X
000ad8 9711      	SBIW R26,1
000ad9 9508      	RET
                 
                 __EEPROMRDW:
000ada 9611      	ADIW R26,1
000adb d002      	RCALL __EEPROMRDB
000adc 2ffe      	MOV  R31,R30
000add 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
000ade 99e1      	SBIC EECR,EEWE
000adf cffe      	RJMP __EEPROMRDB
000ae0 93ff      	PUSH R31
000ae1 b7ff      	IN   R31,SREG
000ae2 94f8      	CLI
000ae3 bbae      	OUT  EEARL,R26
000ae4 bbbf      	OUT  EEARH,R27
000ae5 9ae0      	SBI  EECR,EERE
000ae6 b3ed      	IN   R30,EEDR
000ae7 bfff      	OUT  SREG,R31
000ae8 91ff      	POP  R31
000ae9 9508      	RET
                 
                 __EEPROMWRW:
000aea d007      	RCALL __EEPROMWRB
000aeb 9611      	ADIW R26,1
000aec 93ef      	PUSH R30
000aed 2fef      	MOV  R30,R31
000aee d003      	RCALL __EEPROMWRB
000aef 91ef      	POP  R30
000af0 9711      	SBIW R26,1
000af1 9508      	RET
                 
                 __EEPROMWRB:
000af2 9be1      	SBIS EECR,EEWE
000af3 c002      	RJMP __EEPROMWRB1
000af4 95a8      	WDR
000af5 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
000af6 b79f      	IN   R25,SREG
000af7 94f8      	CLI
000af8 bbae      	OUT  EEARL,R26
000af9 bbbf      	OUT  EEARH,R27
000afa 9ae0      	SBI  EECR,EERE
000afb b38d      	IN   R24,EEDR
000afc 17e8      	CP   R30,R24
000afd f019      	BREQ __EEPROMWRB0
000afe bbed      	OUT  EEDR,R30
000aff 9ae2      	SBI  EECR,EEMWE
000b00 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
000b01 bf9f      	OUT  SREG,R25
000b02 9508      	RET
                 
                 __CPW02:
000b03 2400      	CLR  R0
000b04 160a      	CP   R0,R26
000b05 060b      	CPC  R0,R27
000b06 9508      	RET
                 
                 __SAVELOCR6:
000b07 935a      	ST   -Y,R21
                 __SAVELOCR5:
000b08 934a      	ST   -Y,R20
                 __SAVELOCR4:
000b09 933a      	ST   -Y,R19
                 __SAVELOCR3:
000b0a 932a      	ST   -Y,R18
                 __SAVELOCR2:
000b0b 931a      	ST   -Y,R17
000b0c 930a      	ST   -Y,R16
000b0d 9508      	RET
                 
                 __LOADLOCR6:
000b0e 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000b0f 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000b10 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000b11 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000b12 8119      	LDD  R17,Y+1
000b13 8108      	LD   R16,Y
000b14 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :  28 r1 :   5 r2 :   0 r3 :   0 r4 :   1 r5 :   1 r6 :   6 r7 :   4 
r8 :   7 r9 :   4 r10:   4 r11:   2 r12:   4 r13:   4 r14:   0 r15:   0 
r16:  52 r17:  87 r18:  33 r19:  40 r20:  24 r21:  37 r22:  16 r23:   1 
r24:  32 r25:  13 r26: 307 r27: 104 r28:  28 r29:   1 r30: 765 r31: 164 
x  :  21 y  : 480 z  :  28 
Registers used: 31 out of 35 (88.6%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  17 add   :  25 
adiw  :  36 and   :   8 andi  :  24 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  41 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   9 
brlt  :   5 brmi  :   0 brne  :  77 brpl  :   1 brsh  :  18 brtc  :   0 
brts  :   1 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  : 155 
cbi   :  14 cbr   :   0 clc   :   0 clh   :   0 cli   :   3 cln   :   0 
clr   :  26 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   9 
cp    :  28 cpc   :  20 cpi   :  81 cpse  :   0 dec   :   7 des   :   0 
elpm  :   0 eor   :   1 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 
ijmp  :   0 in    :   8 inc   :   5 jmp   :  62 ld    :  56 ldd   : 232 
ldi   : 276 lds   :  45 lpm   :  25 lsl   :   5 lsr   :  15 mov   :  93 
movw  :  39 mul   :   7 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 
or    :   6 ori   :  18 out   :  21 pop   :  12 push  :  12 rcall :  73 
ret   :  50 reti  :   1 rjmp  : 109 rol   :   3 ror   :   0 sbc   :   2 
sbci  :  11 sbi   :  26 sbic  :   1 sbis  :   1 sbiw  :  32 sbr   :   0 
sbrc  :   0 sbrs  :   0 sec   :   0 seh   :   0 sei   :   1 sen   :   0 
ser   :   0 ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    : 175 std   :  50 sts   :  47 sub   :   9 subi  :  38 
swap  :   1 tst   :   3 wdr   :   2 
Instructions used: 63 out of 117 (53.8%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00162a   4964    710   5674  131072   4.3%
[.dseg] 0x000100 0x0007bb      0    699    699    4096  17.1%
[.eseg] 0x000000 0x000002      0      2      2    4096   0.0%

Assembly complete, 0 errors, 14 warnings
