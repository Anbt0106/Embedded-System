
AVRASM ver. 2.1.30  E:\Embedded\Embedded-System\HeThongKhoaMaPhim\Password_Bai3\Debug\List\Password_bai3.asm Sun Dec 22 04:41:12 2024

E:\Embedded\Embedded-System\HeThongKhoaMaPhim\Password_Bai3\Debug\List\Password_bai3.asm(1090): warning: Register r4 already defined by the .DEF directive
E:\Embedded\Embedded-System\HeThongKhoaMaPhim\Password_Bai3\Debug\List\Password_bai3.asm(1091): warning: Register r5 already defined by the .DEF directive
E:\Embedded\Embedded-System\HeThongKhoaMaPhim\Password_Bai3\Debug\List\Password_bai3.asm(1092): warning: Register r6 already defined by the .DEF directive
E:\Embedded\Embedded-System\HeThongKhoaMaPhim\Password_Bai3\Debug\List\Password_bai3.asm(1093): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _miss=R4
                 	.DEF _miss_msb=R5
                 	.DEF _counter=R6
                 	.DEF _counter_msb=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0189 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 01b9 	JMP  _timer0_ovf_isr
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _font5x7:
000046 0705
000047 6020
000048 0000
000049 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
00004a 0000
00004b 5f00
00004c 0000
00004d 0700      	.DB  0x0,0x0,0x0,0x5F,0x0,0x0,0x0,0x7
00004e 0700
00004f 1400
000050 147f
000051 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
000052 2a24
000053 2a7f
000054 2312
000055 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
000056 6264
000057 4936
000058 2255
000059 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
00005a 0305
00005b 0000
00005c 1c00
00005d 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
00005e 0000
00005f 2241
000060 001c
000061 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
000062 2a1c
000063 0808
000064 3e08
000065 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
000066 5000
000067 0030
000068 0800
000069 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
00006a 0808
00006b 3000
00006c 0030
00006d 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
00006e 0810
00006f 0204
000070 513e
000071 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
000072 003e
000073 7f42
000074 0040
000075 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
000076 4951
000077 2146
000078 4541
000079 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
00007a 1418
00007b 7f12
00007c 2710
00007d 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
00007e 3945
00007f 4a3c
000080 4949
000081 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
000082 0971
000083 0305
000084 4936
000085 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
000086 0636
000087 4949
000088 1e29
000089 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
00008a 0036
00008b 0000
00008c 3656
00008d 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
00008e 0800
00008f 2214
000090 1441
000091 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
000092 1414
000093 2241
000094 0814
000095 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
000096 5101
000097 0609
000098 4932
000099 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
00009a 7e3e
00009b 1111
00009c 7e11
00009d 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
00009e 4949
00009f 3e36
0000a0 4141
0000a1 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
0000a2 417f
0000a3 2241
0000a4 7f1c
0000a5 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
0000a6 4149
0000a7 097f
0000a8 0109
0000a9 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
0000aa 4141
0000ab 3251
0000ac 087f
0000ad 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
0000ae 007f
0000af 7f41
0000b0 0041
0000b1 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
0000b2 3f41
0000b3 7f01
0000b4 1408
0000b5 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
0000b6 407f
0000b7 4040
0000b8 7f40
0000b9 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
0000ba 7f02
0000bb 047f
0000bc 1008
0000bd 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
0000be 4141
0000bf 3e41
0000c0 097f
0000c1 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
0000c2 3e06
0000c3 5141
0000c4 5e21
0000c5 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
0000c6 2919
0000c7 4646
0000c8 4949
0000c9 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
0000ca 0101
0000cb 017f
0000cc 3f01
0000cd 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
0000ce 3f40
0000cf 201f
0000d0 2040
0000d1 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
0000d2 1820
0000d3 7f20
0000d4 1463
0000d5 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000d6 0363
0000d7 7804
0000d8 0304
0000d9 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000da 4549
0000db 0043
0000dc 7f00
0000dd 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000de 0402
0000df 1008
0000e0 4120
0000e1 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000e2 0000
0000e3 0204
0000e4 0201
0000e5 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000e6 4040
0000e7 4040
0000e8 0100
0000e9 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000ea 2000
0000eb 5454
0000ec 7854
0000ed 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000ee 4444
0000ef 3838
0000f0 4444
0000f1 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000f2 4438
0000f3 4844
0000f4 387f
0000f5 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000f6 1854
0000f7 7e08
0000f8 0109
0000f9 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000fa 5414
0000fb 3c54
0000fc 087f
0000fd 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000fe 0078
0000ff 7d44
000100 0040
000101 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
000102 3d44
000103 0000
000104 107f
000105 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
000106 4100
000107 407f
000108 7c00
000109 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
00010a 7804
00010b 087c
00010c 0404
00010d 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
00010e 4444
00010f 3844
000110 147c
000111 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
000112 0808
000113 1414
000114 7c18
000115 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
000116 0404
000117 4808
000118 5454
000119 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
00011a 3f04
00011b 4044
00011c 3c20
00011d 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
00011e 7c20
00011f 201c
000120 2040
000121 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
000122 3040
000123 3c40
000124 2844
000125 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
000126 0c44
000127 5050
000128 3c50
000129 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
00012a 4c54
00012b 0044
00012c 3608
00012d 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
00012e 0000
00012f 007f
000130 0000
000131 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
000132 0008
000133 0102
000134 0402
000135 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
000136 4141
000137 7f41      	.DB  0x41,0x41,0x41,0x7F
                 __glcd_mask:
000138 0100
000139 0703
00013a 1f0f
00013b 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
E:\Embedded\Embedded-System\HeThongKhoaMaPhim\Password_Bai3\Debug\List\Password_bai3.asm(1202): warning: .cseg .db misalignment - padding zero byte
00013c 00ff      	.DB  0xFF
                 _tbl10_G103:
00013d 2710
00013e 03e8
00013f 0064
000140 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000141 0001      	.DB  0x1,0x0
                 _tbl16_G103:
000142 1000
000143 0100
000144 0010
000145 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000146 0000
000147 0000      	.DB  0x0,0x0,0x0,0x0
                 
                 _0x3:
000148 0000
000149 0001
00014a 0002
00014b 0003      	.DB  0x0,0x0,0x1,0x0,0x2,0x0,0x3,0x0
00014c 0004
00014d 0005
00014e 0006
00014f 0007      	.DB  0x4,0x0,0x5,0x0,0x6,0x0,0x7,0x0
E:\Embedded\Embedded-System\HeThongKhoaMaPhim\Password_Bai3\Debug\List\Password_bai3.asm(1216): warning: .cseg .db misalignment - padding zero byte
000150 0008      	.DB  0x8
                 _0x0:
000151 4150
000152 5353
000153 4f57
000154 4452      	.DB  0x50,0x41,0x53,0x53,0x57,0x4F,0x52,0x44
000155 003f
000156 4f4e
000157 003f
000158 4150      	.DB  0x3F,0x0,0x4E,0x4F,0x3F,0x0,0x50,0x41
000159 5353
00015a 4445
00015b 4e00
00015c 5745      	.DB  0x53,0x53,0x45,0x44,0x0,0x4E,0x45,0x57
00015d 5020
00015e 5341
00015f 3f53
000160 5300      	.DB  0x20,0x50,0x41,0x53,0x53,0x3F,0x0,0x53
000161 5641
000162 4445
E:\Embedded\Embedded-System\HeThongKhoaMaPhim\Password_Bai3\Debug\List\Password_bai3.asm(1222): warning: .cseg .db misalignment - padding zero byte
000163 0000      	.DB  0x41,0x56,0x45,0x44,0x0
                 _0x2080060:
E:\Embedded\Embedded-System\HeThongKhoaMaPhim\Password_Bai3\Debug\List\Password_bai3.asm(1224): warning: .cseg .db misalignment - padding zero byte
000164 0001      	.DB  0x1
                 _0x2080000:
000165 4e2d
000166 4e41
000167 4900
000168 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
E:\Embedded\Embedded-System\HeThongKhoaMaPhim\Password_Bai3\Debug\List\Password_bai3.asm(1227): warning: .cseg .db misalignment - padding zero byte
000169 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00016a 0004      	.DW  0x04
00016b 0004      	.DW  0x04
00016c 028c      	.DW  __REG_VARS*2
                 
00016d 0011      	.DW  0x11
00016e 0556      	.DW  _keypad
00016f 0290      	.DW  _0x3*2
                 
000170 000a      	.DW  0x0A
000171 0500      	.DW  _0x2B
000172 02a2      	.DW  _0x0*2
                 
000173 000a      	.DW  0x0A
000174 050a      	.DW  _0x2B+10
000175 02a2      	.DW  _0x0*2
                 
000176 0004      	.DW  0x04
000177 0514      	.DW  _0x2B+20
000178 02ac      	.DW  _0x0*2+10
                 
000179 0007      	.DW  0x07
00017a 0518      	.DW  _0x2B+24
00017b 02b0      	.DW  _0x0*2+14
                 
00017c 000a      	.DW  0x0A
00017d 051f      	.DW  _0x3C
00017e 02b7      	.DW  _0x0*2+21
                 
00017f 000a      	.DW  0x0A
000180 0529      	.DW  _0x3C+10
000181 02b7      	.DW  _0x0*2+21
                 
000182 0006      	.DW  0x06
000183 0533      	.DW  _0x3C+20
000184 02c1      	.DW  _0x0*2+31
                 
000185 0001      	.DW  0x01
000186 076c      	.DW  __seed_G104
000187 02c8      	.DW  _0x2080060*2
                 
                 _0xFFFFFFFF:
000188 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000189 94f8      	CLI
00018a 27ee      	CLR  R30
00018b bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00018c e0f1      	LDI  R31,1
00018d bff5      	OUT  MCUCR,R31
00018e bfe5      	OUT  MCUCR,R30
00018f 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
000191 e08d      	LDI  R24,(14-2)+1
000192 e0a2      	LDI  R26,2
000193 27bb      	CLR  R27
                 __CLEAR_REG:
000194 93ed      	ST   X+,R30
000195 958a      	DEC  R24
000196 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000197 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000198 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000199 e0a0      	LDI  R26,LOW(__SRAM_START)
00019a e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00019b 93ed      	ST   X+,R30
00019c 9701      	SBIW R24,1
00019d f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00019e ede4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00019f e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0001a0 9185      	LPM  R24,Z+
0001a1 9195      	LPM  R25,Z+
0001a2 9700      	SBIW R24,0
0001a3 f061      	BREQ __GLOBAL_INI_END
0001a4 91a5      	LPM  R26,Z+
0001a5 91b5      	LPM  R27,Z+
0001a6 9005      	LPM  R0,Z+
0001a7 9015      	LPM  R1,Z+
0001a8 01bf      	MOVW R22,R30
0001a9 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0001aa 9005      	LPM  R0,Z+
0001ab 920d      	ST   X+,R0
0001ac 9701      	SBIW R24,1
0001ad f7e1      	BRNE __GLOBAL_INI_LOOP
0001ae 01fb      	MOVW R30,R22
0001af cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0001b0 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0001b1 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0001b2 bfed      	OUT  SPL,R30
0001b3 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0001b4 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0001b5 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0001b6 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0001b7 940c 02b3 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;/*
                 ; * bai1.c
                 ; *
                 ; * Created: 12/8/2022 9:06:36 PM
                 ; * Author: Who
                 ; */
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <glcd.h>
                 ;#include <font5x7.h>
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <eeprom.h>
                 ;
                 ;// macro for easier usage
                 ;#define read_eeprom_word(address) eeprom_read_word ((const unsigned int*)address)
                 ;#define write_eeprom_word(address,value) eeprom_write_word ((unsigned int*)address,(unsigned int)value)
                 ;#define update_eeprom_word(address,value) eeprom_update_word ((unsigned int*)address,(unsigned int)value)
                 ;unsigned int EEMEM my_eeprom;
                 ;
                 ;int keypad[3][3] = {0, 1, 2, 3, 4, 5, 6, 7, 8};
                 
                 	.DSEG
                 ;char tmp[10];
                 ;int miss = 0;
                 ;int counter = 0;
                 ;
                 ;// Timer 0 overflow interrupt service routine with 1 ms
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0000 001D {
                 
                 	.CSEG
                 _timer0_ovf_isr:
                 ; .FSTART _timer0_ovf_isr
0001b9 920a      	ST   -Y,R0
0001ba 93ea      	ST   -Y,R30
0001bb 93fa      	ST   -Y,R31
0001bc b7ef      	IN   R30,SREG
0001bd 93ea      	ST   -Y,R30
                 ; 0000 001E     TCNT0=0x06;
0001be e0e6      	LDI  R30,LOW(6)
0001bf bfe2      	OUT  0x32,R30
                 ; 0000 001F     // Place your code here
                 ; 0000 0020     if (miss >= 3) {
0001c0 e0e3      	LDI  R30,LOW(3)
0001c1 e0f0      	LDI  R31,HIGH(3)
0001c2 164e      	CP   R4,R30
0001c3 065f      	CPC  R5,R31
0001c4 f0bc      	BRLT _0x4
                 ; 0000 0021         if (counter == 2000)
0001c5 ede0      	LDI  R30,LOW(2000)
0001c6 e0f7      	LDI  R31,HIGH(2000)
0001c7 15e6      	CP   R30,R6
0001c8 05f7      	CPC  R31,R7
0001c9 f411      	BRNE _0x5
                 ; 0000 0022             counter  = 0;
0001ca 2466      	CLR  R6
0001cb 2477      	CLR  R7
                 ; 0000 0023 
                 ; 0000 0024         if (counter == 0) {
                 _0x5:
0001cc 2c06      	MOV  R0,R6
0001cd 2807      	OR   R0,R7
0001ce f411      	BRNE _0x6
                 ; 0000 0025             PORTD.4 = 0;
0001cf 9894      	CBI  0x12,4
                 ; 0000 0026             PORTD.5 = 1;
0001d0 9a95      	SBI  0x12,5
                 ; 0000 0027         }
                 ; 0000 0028 
                 ; 0000 0029         if (counter == 1000) {
                 _0x6:
0001d1 eee8      	LDI  R30,LOW(1000)
0001d2 e0f3      	LDI  R31,HIGH(1000)
0001d3 15e6      	CP   R30,R6
0001d4 05f7      	CPC  R31,R7
0001d5 f411      	BRNE _0xB
                 ; 0000 002A             PORTD.5 = 0;
0001d6 9895      	CBI  0x12,5
                 ; 0000 002B             PORTD.4 = 1;
0001d7 9a94      	SBI  0x12,4
                 ; 0000 002C         }
                 ; 0000 002D         counter++;
                 _0xB:
0001d8 01f3      	MOVW R30,R6
0001d9 9631      	ADIW R30,1
0001da 013f      	MOVW R6,R30
                 ; 0000 002E     }
                 ; 0000 002F     else {
0001db c002      	RJMP _0x10
                 _0x4:
                 ; 0000 0030         PORTD.4 = 0;
0001dc 9894      	CBI  0x12,4
                 ; 0000 0031         PORTD.5 = 0;
0001dd 9895      	CBI  0x12,5
                 ; 0000 0032     }
                 _0x10:
                 ; 0000 0033 }
0001de 91e9      	LD   R30,Y+
0001df bfef      	OUT  SREG,R30
0001e0 91f9      	LD   R31,Y+
0001e1 91e9      	LD   R30,Y+
0001e2 9009      	LD   R0,Y+
0001e3 9518      	RETI
                 ; .FEND
                 ;
                 ;
                 ;// "inherited" from tai lieu thuc hanh
                 ;int read() {
                 ; 0000 0037 int read() {
                 _read:
                 ; .FSTART _read
                 ; 0000 0038     char a, i, j;
                 ; 0000 0039     for(j = 0; j < 3; j++ ){
0001e4 940e 0947 	CALL __SAVELOCR4
                 ;	a -> R17
                 ;	i -> R16
                 ;	j -> R19
0001e6 e030      	LDI  R19,LOW(0)
                 _0x16:
0001e7 3033      	CPI  R19,3
0001e8 f5a0      	BRSH _0x17
                 ; 0000 003A         if (j == 0) PORTF = 0b11111101;
0001e9 3030      	CPI  R19,0
0001ea f419      	BRNE _0x18
0001eb efed      	LDI  R30,LOW(253)
0001ec 93e0 0062 	STS  98,R30
                 ; 0000 003B         if (j == 1) PORTF = 0b11110111;
                 _0x18:
0001ee 3031      	CPI  R19,1
0001ef f419      	BRNE _0x19
0001f0 efe7      	LDI  R30,LOW(247)
0001f1 93e0 0062 	STS  98,R30
                 ; 0000 003C         if (j == 2) PORTF = 0b11011111;
                 _0x19:
0001f3 3032      	CPI  R19,2
0001f4 f419      	BRNE _0x1A
0001f5 edef      	LDI  R30,LOW(223)
0001f6 93e0 0062 	STS  98,R30
                 ; 0000 003D         for(i = 0; i < 3; i++){
                 _0x1A:
0001f8 e000      	LDI  R16,LOW(0)
                 _0x1C:
0001f9 3003      	CPI  R16,3
0001fa f500      	BRSH _0x1D
                 ; 0000 003E             if (i == 0){
0001fb 3000      	CPI  R16,0
0001fc f441      	BRNE _0x1E
                 ; 0000 003F                 a = PINF&0x04;
0001fd b1e0      	IN   R30,0x0
0001fe 70e4      	ANDI R30,LOW(0x4)
0001ff 2f1e      	MOV  R17,R30
                 ; 0000 0040                 if(a != 0x04)
000200 3014      	CPI  R17,4
000201 f019      	BREQ _0x1F
                 ; 0000 0041                     return keypad[i][j];
000202 940e 0846 	CALL SUBOPT_0x0
000204 c03a      	RJMP _0x214000A
                 ; 0000 0042             }
                 _0x1F:
                 ; 0000 0043             if (i == 1){
                 _0x1E:
000205 3001      	CPI  R16,1
000206 f441      	BRNE _0x20
                 ; 0000 0044                 a = PINF&0x10;
000207 b1e0      	IN   R30,0x0
000208 71e0      	ANDI R30,LOW(0x10)
000209 2f1e      	MOV  R17,R30
                 ; 0000 0045                 if (a != 0x10)
00020a 3110      	CPI  R17,16
00020b f019      	BREQ _0x21
                 ; 0000 0046                     return keypad[i][j];
00020c 940e 0846 	CALL SUBOPT_0x0
00020e c030      	RJMP _0x214000A
                 ; 0000 0047             }
                 _0x21:
                 ; 0000 0048             if (i == 2){
                 _0x20:
00020f 3002      	CPI  R16,2
000210 f441      	BRNE _0x22
                 ; 0000 0049                 a = PINF&0x01;
000211 b1e0      	IN   R30,0x0
000212 70e1      	ANDI R30,LOW(0x1)
000213 2f1e      	MOV  R17,R30
                 ; 0000 004A                 if (a != 0x01)
000214 3011      	CPI  R17,1
000215 f019      	BREQ _0x23
                 ; 0000 004B                     return keypad[i][j];
000216 940e 0846 	CALL SUBOPT_0x0
000218 c026      	RJMP _0x214000A
                 ; 0000 004C             }
                 _0x23:
                 ; 0000 004D         }
                 _0x22:
000219 5f0f      	SUBI R16,-1
00021a cfde      	RJMP _0x1C
                 _0x1D:
                 ; 0000 004E     }
00021b 5f3f      	SUBI R19,-1
00021c cfca      	RJMP _0x16
                 _0x17:
                 ; 0000 004F     return -1;
00021d efef      	LDI  R30,LOW(65535)
00021e efff      	LDI  R31,HIGH(65535)
00021f 940e 094e 	CALL __LOADLOCR4
000221 c01d      	RJMP _0x214000A
                 ; 0000 0050 }
                 ; .FEND
                 ;
                 ;void mainScreen(unsigned char * c, int pass) {
                 ; 0000 0052 void mainScreen(unsigned char * c, int pass) {
                 _mainScreen:
                 ; .FSTART _mainScreen
                 ; 0000 0053     glcd_clear();
000222 93ba      	ST   -Y,R27
000223 93aa      	ST   -Y,R26
                 ;	*c -> Y+2
                 ;	pass -> Y+0
000224 940e 0857 	CALL SUBOPT_0x1
                 ; 0000 0054     glcd_outtextxy(15, 20, c);
000226 81ac      	LDD  R26,Y+4
000227 81bd      	LDD  R27,Y+4+1
000228 940e 0775 	CALL _glcd_outtextxy
                 ; 0000 0055     if (pass != -1) {
00022a 81a8      	LD   R26,Y
00022b 81b9      	LDD  R27,Y+1
00022c 3faf      	CPI  R26,LOW(0xFFFF)
00022d efef      	LDI  R30,HIGH(0xFFFF)
00022e 07be      	CPC  R27,R30
00022f f079      	BREQ _0x24
                 ; 0000 0056         itoa(pass, tmp);
000230 81e8      	LD   R30,Y
000231 81f9      	LDD  R31,Y+1
000232 93fa      	ST   -Y,R31
000233 93ea      	ST   -Y,R30
000234 e6a8      	LDI  R26,LOW(_tmp)
000235 e0b5      	LDI  R27,HIGH(_tmp)
000236 940e 0797 	CALL _itoa
                 ; 0000 0057         glcd_outtextxy(30, 30, tmp);
000238 e1ee      	LDI  R30,LOW(30)
000239 93ea      	ST   -Y,R30
00023a 93ea      	ST   -Y,R30
00023b e6a8      	LDI  R26,LOW(_tmp)
00023c e0b5      	LDI  R27,HIGH(_tmp)
00023d 940e 0775 	CALL _glcd_outtextxy
                 ; 0000 0058     }
                 ; 0000 0059 }
                 _0x24:
                 _0x214000A:
00023f 9624      	ADIW R28,4
000240 9508      	RET
                 ; .FEND
                 ;
                 ;void exe() {
                 ; 0000 005B void exe() {
                 _exe:
                 ; .FSTART _exe
                 ; 0000 005C     unsigned int input_times = 0, input = -1, pass = 0, require = 108, reader;
                 ; 0000 005D     reader = read_eeprom_word(&my_eeprom);
000241 9724      	SBIW R28,4
000242 e6ec      	LDI  R30,LOW(108)
000243 83ea      	STD  Y+2,R30
000244 e0e0      	LDI  R30,LOW(0)
000245 83eb      	STD  Y+3,R30
000246 940e 0945 	CALL __SAVELOCR6
                 ;	input_times -> R16,R17
                 ;	input -> R18,R19
                 ;	pass -> R20,R21
                 ;	require -> Y+8
                 ;	reader -> Y+6
000248 940e 085e 	CALL SUBOPT_0x2
00024a e0a0      	LDI  R26,LOW(_my_eeprom)
00024b e0b0      	LDI  R27,HIGH(_my_eeprom)
00024c 940e 0918 	CALL __EEPROMRDW
00024e 83ee      	STD  Y+6,R30
00024f 83ff      	STD  Y+6+1,R31
                 ; 0000 005E     if (reader >= 100 && reader <= 999)
000250 81ae      	LDD  R26,Y+6
000251 81bf      	LDD  R27,Y+6+1
000252 36a4      	CPI  R26,LOW(0x64)
000253 e0e0      	LDI  R30,HIGH(0x64)
000254 07be      	CPC  R27,R30
000255 f020      	BRLO _0x26
000256 3ea8      	CPI  R26,LOW(0x3E8)
000257 e0e3      	LDI  R30,HIGH(0x3E8)
000258 07be      	CPC  R27,R30
000259 f008      	BRLO _0x27
                 _0x26:
00025a c004      	RJMP _0x25
                 _0x27:
                 ; 0000 005F         require = reader;
00025b 81ee      	LDD  R30,Y+6
00025c 81ff      	LDD  R31,Y+6+1
00025d 87e8      	STD  Y+8,R30
00025e 87f9      	STD  Y+8+1,R31
                 ; 0000 0060 
                 ; 0000 0061     while (pass != require) {
                 _0x25:
                 _0x28:
00025f 85e8      	LDD  R30,Y+8
000260 85f9      	LDD  R31,Y+8+1
000261 17e4      	CP   R30,R20
000262 07f5      	CPC  R31,R21
000263 f1d9      	BREQ _0x2A
                 ; 0000 0062         mainScreen("PASSWORD?", -1);
                +
000264 e0e0     +LDI R30 , LOW ( _0x2B + ( 0 ) )
000265 e0f5     +LDI R31 , HIGH ( _0x2B + ( 0 ) )
                 	__POINTW1MN _0x2B,0
000266 940e 0865 	CALL SUBOPT_0x3
                 ; 0000 0063         while (input_times != 3) {
                 _0x2C:
000268 e0e3      	LDI  R30,LOW(3)
000269 e0f0      	LDI  R31,HIGH(3)
00026a 17e0      	CP   R30,R16
00026b 07f1      	CPC  R31,R17
00026c f0b1      	BREQ _0x2E
                 ; 0000 0064             input = read();
00026d 940e 086b 	CALL SUBOPT_0x4
                 ; 0000 0065             delay_ms(200);
                 ; 0000 0066             if (input != -1) {
00026f f091      	BREQ _0x2F
                 ; 0000 0067                 input_times++;
                +
000270 5f0f     +SUBI R16 , LOW ( - 1 )
000271 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 0068                 pass = pass * 10 + input;
                +
000272 e0aa     +LDI R26 , 10
000273 9fa4     +MUL R26 , R20
000274 01f0     +MOVW R30 , R0
000275 9fa5     +MUL R26 , R21
000276 0df0     +ADD R31 , R0
                 	__MULBNWRU 20,21,10
000277 0fe2      	ADD  R30,R18
000278 1ff3      	ADC  R31,R19
000279 01af      	MOVW R20,R30
                 ; 0000 0069                 mainScreen("PASSWORD?", pass);
                +
00027a e0ea     +LDI R30 , LOW ( _0x2B + ( 10 ) )
00027b e0f5     +LDI R31 , HIGH ( _0x2B + ( 10 ) )
                 	__POINTW1MN _0x2B,10
00027c 93fa      	ST   -Y,R31
00027d 93ea      	ST   -Y,R30
00027e 01da      	MOVW R26,R20
00027f dfa2      	RCALL _mainScreen
                 ; 0000 006A                 input = -1;
                +
000280 ef2f     +LDI R18 , LOW ( - 1 )
000281 ef3f     +LDI R19 , HIGH ( - 1 )
                 	__GETWRN 18,19,-1
                 ; 0000 006B             }
                 ; 0000 006C         }
                 _0x2F:
000282 cfe5      	RJMP _0x2C
                 _0x2E:
                 ; 0000 006D 
                 ; 0000 006E         if (pass != require) {
000283 85e8      	LDD  R30,Y+8
000284 85f9      	LDD  R31,Y+8+1
000285 17e4      	CP   R30,R20
000286 07f5      	CPC  R31,R21
000287 f061      	BREQ _0x30
                 ; 0000 006F             glcd_clear();
000288 940e 0857 	CALL SUBOPT_0x1
                 ; 0000 0070             glcd_outtextxy(15, 20, "NO?");
                +
00028a e1a4     +LDI R26 , LOW ( _0x2B + ( 20 ) )
00028b e0b5     +LDI R27 , HIGH ( _0x2B + ( 20 ) )
                 	__POINTW2MN _0x2B,20
00028c 940e 0775 	CALL _glcd_outtextxy
                 ; 0000 0071             input_times = 0;
00028e 940e 085e 	CALL SUBOPT_0x2
                 ; 0000 0072             input = -1;
                 ; 0000 0073             pass = 0;
                 ; 0000 0074             delay_ms(800);
000290 e2a0      	LDI  R26,LOW(800)
000291 e0b3      	LDI  R27,HIGH(800)
000292 940e 08f2 	CALL _delay_ms
                 ; 0000 0075         }
                 ; 0000 0076         miss++;
                 _0x30:
000294 01f2      	MOVW R30,R4
000295 9631      	ADIW R30,1
000296 012f      	MOVW R4,R30
                 ; 0000 0077         // turn on role 1
                 ; 0000 0078         if (miss == 3) {
000297 e0e3      	LDI  R30,LOW(3)
000298 e0f0      	LDI  R31,HIGH(3)
000299 15e4      	CP   R30,R4
00029a 05f5      	CPC  R31,R5
00029b f411      	BRNE _0x31
                 ; 0000 0079             DDRC.3 = 1;
00029c 9aa3      	SBI  0x14,3
                 ; 0000 007A             PORTC.3 = 1;
00029d 9aab      	SBI  0x15,3
                 ; 0000 007B         }
                 ; 0000 007C 
                 ; 0000 007D     }
                 _0x31:
00029e cfc0      	RJMP _0x28
                 _0x2A:
                 ; 0000 007E 
                 ; 0000 007F     miss = 0;
00029f 2444      	CLR  R4
0002a0 2455      	CLR  R5
                 ; 0000 0080     delay_ms(500);
0002a1 efa4      	LDI  R26,LOW(500)
0002a2 e0b1      	LDI  R27,HIGH(500)
0002a3 940e 08f2 	CALL _delay_ms
                 ; 0000 0081     glcd_clear();
0002a5 d18a      	RCALL _glcd_clear
                 ; 0000 0082     PORTC.3 = 0;
0002a6 98ab      	CBI  0x15,3
                 ; 0000 0083     glcd_outtextxy(15, 20, "PASSED");
0002a7 e0ef      	LDI  R30,LOW(15)
0002a8 93ea      	ST   -Y,R30
0002a9 e1e4      	LDI  R30,LOW(20)
0002aa 93ea      	ST   -Y,R30
                +
0002ab e1a8     +LDI R26 , LOW ( _0x2B + ( 24 ) )
0002ac e0b5     +LDI R27 , HIGH ( _0x2B + ( 24 ) )
                 	__POINTW2MN _0x2B,24
0002ad 940e 0775 	CALL _glcd_outtextxy
                 ; 0000 0084 }
0002af 940e 094c 	CALL __LOADLOCR6
0002b1 962a      	ADIW R28,10
0002b2 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x2B:
000500           	.BYTE 0x1F
                 ;
                 ;void main(void)
                 ; 0000 0087 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0088     unsigned int pass = 0, input, input_times = 0;
                 ; 0000 0089     //init GLCD
                 ; 0000 008A     GLCDINIT_t glcd_init_data;
                 ; 0000 008B     glcd_init_data.font=font5x7;
0002b3 9728      	SBIW R28,8
                 ;	pass -> R16,R17
                 ;	input -> R18,R19
                 ;	input_times -> R20,R21
                 ;	glcd_init_data -> Y+0
                +
0002b4 e000     +LDI R16 , LOW ( 0 )
0002b5 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
0002b6 e040     +LDI R20 , LOW ( 0 )
0002b7 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
0002b8 e8ec      	LDI  R30,LOW(_font5x7*2)
0002b9 e0f0      	LDI  R31,HIGH(_font5x7*2)
0002ba 83e8      	ST   Y,R30
0002bb 83f9      	STD  Y+1,R31
                 ; 0000 008C     glcd_init_data.temp_coef=140;
0002bc 81ee      	LDD  R30,Y+6
0002bd 7fec      	ANDI R30,LOW(0xFC)
0002be 83ee      	STD  Y+6,R30
                 ; 0000 008D     glcd_init_data.bias=4;
0002bf 7ee3      	ANDI R30,LOW(0xE3)
0002c0 61e0      	ORI  R30,0x10
0002c1 83ee      	STD  Y+6,R30
                 ; 0000 008E     glcd_init_data.vlcd=66;
0002c2 81ef      	LDD  R30,Y+7
0002c3 78e0      	ANDI R30,LOW(0x80)
0002c4 64e2      	ORI  R30,LOW(0x42)
0002c5 83ef      	STD  Y+7,R30
                 ; 0000 008F     glcd_init(&glcd_init_data);
0002c6 01de      	MOVW R26,R28
0002c7 d0c1      	RCALL _glcd_init
                 ; 0000 0090 
                 ; 0000 0091     DDRF = 0b11101010;
0002c8 eeea      	LDI  R30,LOW(234)
0002c9 93e0 0061 	STS  97,R30
                 ; 0000 0092     DDRD.5 = 1;
0002cb 9a8d      	SBI  0x11,5
                 ; 0000 0093     DDRD.4 = 1;
0002cc 9a8c      	SBI  0x11,4
                 ; 0000 0094 
                 ; 0000 0095     //init Timer/Counter 0 with time period = 1 ms
                 ; 0000 0096     ASSR=0<<AS0;
0002cd e0e0      	LDI  R30,LOW(0)
0002ce bfe0      	OUT  0x30,R30
                 ; 0000 0097     TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (1<<CS01) | (1<<CS00);
0002cf e0e3      	LDI  R30,LOW(3)
0002d0 bfe3      	OUT  0x33,R30
                 ; 0000 0098     TCNT0=0x06;
0002d1 e0e6      	LDI  R30,LOW(6)
0002d2 bfe2      	OUT  0x32,R30
                 ; 0000 0099     OCR0=0x00;
0002d3 e0e0      	LDI  R30,LOW(0)
0002d4 bfe1      	OUT  0x31,R30
                 ; 0000 009A     TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
0002d5 e0e1      	LDI  R30,LOW(1)
0002d6 bfe7      	OUT  0x37,R30
                 ; 0000 009B     ETIMSK=(0<<TICIE3) | (0<<OCIE3A) | (0<<OCIE3B) | (0<<TOIE3) | (0<<OCIE3C) | (0<<OCIE1C);
0002d7 e0e0      	LDI  R30,LOW(0)
0002d8 93e0 007d 	STS  125,R30
                 ; 0000 009C #asm("sei")
0002da 9478      	sei
                 ; 0000 009D     exe();
0002db df65      	RCALL _exe
                 ; 0000 009E     delay_ms(1500);
0002dc edac      	LDI  R26,LOW(1500)
0002dd e0b5      	LDI  R27,HIGH(1500)
0002de 940e 08f2 	CALL _delay_ms
                 ; 0000 009F 
                 ; 0000 00A0     mainScreen("NEW PASS?", -1);
                +
0002e0 e1ef     +LDI R30 , LOW ( _0x3C + ( 0 ) )
0002e1 e0f5     +LDI R31 , HIGH ( _0x3C + ( 0 ) )
                 	__POINTW1MN _0x3C,0
0002e2 940e 0865 	CALL SUBOPT_0x3
                 ; 0000 00A1     while (input_times != 3) {
                 _0x3D:
0002e4 e0e3      	LDI  R30,LOW(3)
0002e5 e0f0      	LDI  R31,HIGH(3)
0002e6 17e4      	CP   R30,R20
0002e7 07f5      	CPC  R31,R21
0002e8 f0b1      	BREQ _0x3F
                 ; 0000 00A2         input = read();
0002e9 940e 086b 	CALL SUBOPT_0x4
                 ; 0000 00A3         delay_ms(200);
                 ; 0000 00A4         if (input != -1) {
0002eb f091      	BREQ _0x40
                 ; 0000 00A5             input_times++;
                +
0002ec 5f4f     +SUBI R20 , LOW ( - 1 )
0002ed 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0000 00A6             pass = pass * 10 + input;
                +
0002ee e0aa     +LDI R26 , 10
0002ef 9fa0     +MUL R26 , R16
0002f0 01f0     +MOVW R30 , R0
0002f1 9fa1     +MUL R26 , R17
0002f2 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,10
0002f3 0fe2      	ADD  R30,R18
0002f4 1ff3      	ADC  R31,R19
0002f5 018f      	MOVW R16,R30
                 ; 0000 00A7             mainScreen("NEW PASS?", pass);
                +
0002f6 e2e9     +LDI R30 , LOW ( _0x3C + ( 10 ) )
0002f7 e0f5     +LDI R31 , HIGH ( _0x3C + ( 10 ) )
                 	__POINTW1MN _0x3C,10
0002f8 93fa      	ST   -Y,R31
0002f9 93ea      	ST   -Y,R30
0002fa 01d8      	MOVW R26,R16
0002fb df26      	RCALL _mainScreen
                 ; 0000 00A8             input = -1;
                +
0002fc ef2f     +LDI R18 , LOW ( - 1 )
0002fd ef3f     +LDI R19 , HIGH ( - 1 )
                 	__GETWRN 18,19,-1
                 ; 0000 00A9         }
                 ; 0000 00AA     }
                 _0x40:
0002fe cfe5      	RJMP _0x3D
                 _0x3F:
                 ; 0000 00AB     update_eeprom_word(&my_eeprom, pass);
0002ff 01f8      	MOVW R30,R16
000300 e0a0      	LDI  R26,LOW(_my_eeprom)
000301 e0b0      	LDI  R27,HIGH(_my_eeprom)
000302 940e 0928 	CALL __EEPROMWRW
                 ; 0000 00AC     delay_ms(800);
000304 e2a0      	LDI  R26,LOW(800)
000305 e0b3      	LDI  R27,HIGH(800)
000306 940e 08f2 	CALL _delay_ms
                 ; 0000 00AD     mainScreen("SAVED", -1);
                +
000308 e3e3     +LDI R30 , LOW ( _0x3C + ( 20 ) )
000309 e0f5     +LDI R31 , HIGH ( _0x3C + ( 20 ) )
                 	__POINTW1MN _0x3C,20
00030a 940e 0865 	CALL SUBOPT_0x3
                 ; 0000 00AE 
                 ; 0000 00AF     while (1)
                 _0x41:
                 ; 0000 00B0     {
                 ; 0000 00B1 
                 ; 0000 00B2 
                 ; 0000 00B3     }
00030c cfff      	RJMP _0x41
                 ; 0000 00B4 }
                 _0x44:
00030d cfff      	RJMP _0x44
                 ; .FEND
                 
                 	.DSEG
                 _0x3C:
00051f           	.BYTE 0x1A
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _pcd8544_delay_G100:
                 ; .FSTART _pcd8544_delay_G100
00030e 9508      	RET
                 ; .FEND
                 _pcd8544_wrbus_G100:
                 ; .FSTART _pcd8544_wrbus_G100
00030f 93aa      	ST   -Y,R26
000310 931a      	ST   -Y,R17
000311 91e0 0065 	LDS  R30,101
000313 7eef      	ANDI R30,0xEF
000314 93e0 0065 	STS  101,R30
000316 e018      	LDI  R17,LOW(8)
                 _0x2000004:
000317 dff6      	RCALL _pcd8544_delay_G100
000318 81e9      	LDD  R30,Y+1
000319 78e0      	ANDI R30,LOW(0x80)
00031a f021      	BREQ _0x2000006
00031b 91e0 0065 	LDS  R30,101
00031d 60e2      	ORI  R30,2
00031e c003      	RJMP _0x20000A0
                 _0x2000006:
00031f 91e0 0065 	LDS  R30,101
000321 7fed      	ANDI R30,0xFD
                 _0x20000A0:
000322 93e0 0065 	STS  101,R30
000324 81e9      	LDD  R30,Y+1
000325 0fee      	LSL  R30
000326 83e9      	STD  Y+1,R30
000327 dfe6      	RCALL _pcd8544_delay_G100
000328 91e0 0065 	LDS  R30,101
00032a 60e4      	ORI  R30,4
00032b 93e0 0065 	STS  101,R30
00032d dfe0      	RCALL _pcd8544_delay_G100
00032e 91e0 0065 	LDS  R30,101
000330 7feb      	ANDI R30,0xFB
000331 93e0 0065 	STS  101,R30
000333 5011      	SUBI R17,LOW(1)
000334 f711      	BRNE _0x2000004
000335 91e0 0065 	LDS  R30,101
000337 61e0      	ORI  R30,0x10
000338 93e0 0065 	STS  101,R30
00033a 8118      	LDD  R17,Y+0
00033b 940c 07de 	JMP  _0x2140003
                 ; .FEND
                 _pcd8544_wrcmd:
                 ; .FSTART _pcd8544_wrcmd
00033d 93aa      	ST   -Y,R26
00033e 91e0 0065 	LDS  R30,101
000340 7fee      	ANDI R30,0xFE
000341 93e0 0065 	STS  101,R30
000343 81a8      	LD   R26,Y
000344 dfca      	RCALL _pcd8544_wrbus_G100
000345 c0e8      	RJMP _0x2140009
                 ; .FEND
                 _pcd8544_wrdata_G100:
                 ; .FSTART _pcd8544_wrdata_G100
000346 93aa      	ST   -Y,R26
000347 91e0 0065 	LDS  R30,101
000349 60e1      	ORI  R30,1
00034a 93e0 0065 	STS  101,R30
00034c 81a8      	LD   R26,Y
00034d dfc1      	RCALL _pcd8544_wrbus_G100
00034e c0df      	RJMP _0x2140009
                 ; .FEND
                 _pcd8544_setaddr_G100:
                 ; .FSTART _pcd8544_setaddr_G100
00034f 93aa      	ST   -Y,R26
000350 931a      	ST   -Y,R17
000351 81e9      	LDD  R30,Y+1
000352 95e6      	LSR  R30
000353 95e6      	LSR  R30
000354 95e6      	LSR  R30
000355 2f1e      	MOV  R17,R30
000356 e5e4      	LDI  R30,LOW(84)
000357 9fe1      	MUL  R30,R17
000358 01f0      	MOVW R30,R0
000359 01df      	MOVW R26,R30
00035a 81ea      	LDD  R30,Y+2
00035b e0f0      	LDI  R31,0
00035c 0fea      	ADD  R30,R26
00035d 1ffb      	ADC  R31,R27
00035e 93e0 0572 	STS  _gfx_addr_G100,R30
000360 93f0 0573 	STS  _gfx_addr_G100+1,R31
000362 2fe1      	MOV  R30,R17
000363 8118      	LDD  R17,Y+0
000364 940c 0825 	JMP  _0x2140002
                 ; .FEND
                 _pcd8544_gotoxy:
                 ; .FSTART _pcd8544_gotoxy
000366 93aa      	ST   -Y,R26
000367 81e9      	LDD  R30,Y+1
000368 68e0      	ORI  R30,0x80
000369 2fae      	MOV  R26,R30
00036a dfd2      	RCALL _pcd8544_wrcmd
00036b 81e9      	LDD  R30,Y+1
00036c 93ea      	ST   -Y,R30
00036d 81a9      	LDD  R26,Y+1
00036e dfe0      	RCALL _pcd8544_setaddr_G100
00036f 64e0      	ORI  R30,0x40
000370 2fae      	MOV  R26,R30
000371 dfcb      	RCALL _pcd8544_wrcmd
000372 940c 07de 	JMP  _0x2140003
                 ; .FEND
                 _pcd8544_rdbyte:
                 ; .FSTART _pcd8544_rdbyte
000374 93aa      	ST   -Y,R26
000375 81e9      	LDD  R30,Y+1
000376 93ea      	ST   -Y,R30
000377 81a9      	LDD  R26,Y+1
000378 dfed      	RCALL _pcd8544_gotoxy
000379 91e0 0572 	LDS  R30,_gfx_addr_G100
00037b 91f0 0573 	LDS  R31,_gfx_addr_G100+1
00037d 58ec      	SUBI R30,LOW(-_gfx_buffer_G100)
00037e 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G100)
00037f 81e0      	LD   R30,Z
000380 940c 07de 	JMP  _0x2140003
                 ; .FEND
                 _pcd8544_wrbyte:
                 ; .FSTART _pcd8544_wrbyte
000382 93aa      	ST   -Y,R26
000383 940e 0877 	CALL SUBOPT_0x5
000385 81a8      	LD   R26,Y
000386 83a0      	STD  Z+0,R26
000387 dfbe      	RCALL _pcd8544_wrdata_G100
000388 c0a5      	RJMP _0x2140009
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
000389 93ba      	ST   -Y,R27
00038a 93aa      	ST   -Y,R26
00038b 940e 0947 	CALL __SAVELOCR4
00038d 91e0 0064 	LDS  R30,100
00038f 61e0      	ORI  R30,0x10
000390 940e 0882 	CALL SUBOPT_0x6
000392 61e0      	ORI  R30,0x10
000393 93e0 0065 	STS  101,R30
000395 91e0 0064 	LDS  R30,100
000397 60e4      	ORI  R30,4
000398 940e 0882 	CALL SUBOPT_0x6
00039a 7feb      	ANDI R30,0xFB
00039b 93e0 0065 	STS  101,R30
00039d 91e0 0064 	LDS  R30,100
00039f 60e2      	ORI  R30,2
0003a0 93e0 0064 	STS  100,R30
0003a2 91e0 0064 	LDS  R30,100
0003a4 60e1      	ORI  R30,1
0003a5 93e0 0064 	STS  100,R30
0003a7 91e0 0064 	LDS  R30,100
0003a9 60e8      	ORI  R30,8
0003aa 940e 0882 	CALL SUBOPT_0x6
0003ac 7fe7      	ANDI R30,0XF7
0003ad 93e0 0065 	STS  101,R30
0003af e0aa      	LDI  R26,LOW(10)
0003b0 e0b0      	LDI  R27,0
0003b1 940e 08f2 	CALL _delay_ms
0003b3 91e0 0065 	LDS  R30,101
0003b5 60e8      	ORI  R30,8
0003b6 93e0 0065 	STS  101,R30
0003b8 81ec      	LDD  R30,Y+4
0003b9 81fd      	LDD  R31,Y+4+1
0003ba 9730      	SBIW R30,0
0003bb f121      	BREQ _0x2000008
0003bc 81e6      	LDD  R30,Z+6
0003bd 70e3      	ANDI R30,LOW(0x3)
0003be 2f1e      	MOV  R17,R30
0003bf 81ec      	LDD  R30,Y+4
0003c0 81fd      	LDD  R31,Y+4+1
0003c1 81e6      	LDD  R30,Z+6
0003c2 95e6      	LSR  R30
0003c3 95e6      	LSR  R30
0003c4 70e7      	ANDI R30,LOW(0x7)
0003c5 2f0e      	MOV  R16,R30
0003c6 81ec      	LDD  R30,Y+4
0003c7 81fd      	LDD  R31,Y+4+1
0003c8 81e7      	LDD  R30,Z+7
0003c9 77ef      	ANDI R30,0x7F
0003ca 2f3e      	MOV  R19,R30
0003cb 81ac      	LDD  R26,Y+4
0003cc 81bd      	LDD  R27,Y+4+1
0003cd 940e 0914 	CALL __GETW1P
                +
0003cf 93e0 053d+STS _glcd_state + ( 4 ) , R30
0003d1 93f0 053e+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
0003d3 9612      	ADIW R26,2
0003d4 940e 0914 	CALL __GETW1P
                +
0003d6 93e0 0552+STS _glcd_state + ( 25 ) , R30
0003d8 93f0 0553+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
0003da 81ac      	LDD  R26,Y+4
0003db 81bd      	LDD  R27,Y+4+1
0003dc 9614      	ADIW R26,4
0003dd 940e 0914 	CALL __GETW1P
0003df c00d      	RJMP _0x20000A1
                 _0x2000008:
0003e0 e010      	LDI  R17,LOW(0)
0003e1 e003      	LDI  R16,LOW(3)
0003e2 e332      	LDI  R19,LOW(50)
0003e3 e0e0      	LDI  R30,LOW(0)
0003e4 e0f0      	LDI  R31,HIGH(0)
                +
0003e5 93e0 053d+STS _glcd_state + ( 4 ) , R30
0003e7 93f0 053e+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
                +
0003e9 93e0 0552+STS _glcd_state + ( 25 ) , R30
0003eb 93f0 0553+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
                 _0x20000A1:
                +
0003ed 93e0 0554+STS _glcd_state + ( 27 ) , R30
0003ef 93f0 0555+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
0003f1 e2a1      	LDI  R26,LOW(33)
0003f2 df4a      	RCALL _pcd8544_wrcmd
0003f3 2fe1      	MOV  R30,R17
0003f4 60e4      	ORI  R30,4
0003f5 2fae      	MOV  R26,R30
0003f6 df46      	RCALL _pcd8544_wrcmd
0003f7 2fe0      	MOV  R30,R16
0003f8 61e0      	ORI  R30,0x10
0003f9 2fae      	MOV  R26,R30
0003fa df42      	RCALL _pcd8544_wrcmd
0003fb 2fe3      	MOV  R30,R19
0003fc 68e0      	ORI  R30,0x80
0003fd 2fae      	MOV  R26,R30
0003fe df3e      	RCALL _pcd8544_wrcmd
0003ff e2a0      	LDI  R26,LOW(32)
000400 df3c      	RCALL _pcd8544_wrcmd
000401 e0a1      	LDI  R26,LOW(1)
000402 d022      	RCALL _glcd_display
000403 e0e1      	LDI  R30,LOW(1)
000404 93e0 0539 	STS  _glcd_state,R30
000406 e0e0      	LDI  R30,LOW(0)
                +
000407 93e0 053a+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
000409 e0e1      	LDI  R30,LOW(1)
                +
00040a 93e0 053f+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
00040c 93e0 0540+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
00040e 93e0 0541+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
000410 efef      	LDI  R30,LOW(255)
                +
000411 93e0 0542+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
000413 e0e1      	LDI  R30,LOW(1)
                +
000414 93e0 0549+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
000416 e4ea     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
000417 e0f5     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
000418 93fa      	ST   -Y,R31
000419 93ea      	ST   -Y,R30
00041a efef      	LDI  R30,LOW(255)
00041b 93ea      	ST   -Y,R30
00041c e0a8      	LDI  R26,LOW(8)
00041d e0b0      	LDI  R27,0
00041e 940e 07c5 	CALL _memset
000420 d00f      	RCALL _glcd_clear
000421 e0e1      	LDI  R30,LOW(1)
000422 940e 094e 	CALL __LOADLOCR4
000424 c060      	RJMP _0x2140008
                 ; .FEND
                 _glcd_display:
                 ; .FSTART _glcd_display
000425 93aa      	ST   -Y,R26
000426 81e8      	LD   R30,Y
000427 30e0      	CPI  R30,0
000428 f011      	BREQ _0x200000A
000429 e0ec      	LDI  R30,LOW(12)
00042a c001      	RJMP _0x200000B
                 _0x200000A:
00042b e0e8      	LDI  R30,LOW(8)
                 _0x200000B:
00042c 2fae      	MOV  R26,R30
00042d df0f      	RCALL _pcd8544_wrcmd
                 _0x2140009:
00042e 9621      	ADIW R28,1
00042f 9508      	RET
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
000430 940e 0947 	CALL __SAVELOCR4
000432 e030      	LDI  R19,0
                +
000433 91e0 053a+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000435 30e0      	CPI  R30,0
000436 f009      	BREQ _0x200000D
000437 ef3f      	LDI  R19,LOW(255)
                 _0x200000D:
000438 e0e0      	LDI  R30,LOW(0)
000439 93ea      	ST   -Y,R30
00043a e0a0      	LDI  R26,LOW(0)
00043b df2a      	RCALL _pcd8544_gotoxy
                +
00043c ef08     +LDI R16 , LOW ( 504 )
00043d e011     +LDI R17 , HIGH ( 504 )
                 	__GETWRN 16,17,504
                 _0x200000E:
00043e 01f8      	MOVW R30,R16
                +
00043f 5001     +SUBI R16 , LOW ( 1 )
000440 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
000441 9730      	SBIW R30,0
000442 f019      	BREQ _0x2000010
000443 2fa3      	MOV  R26,R19
000444 df3d      	RCALL _pcd8544_wrbyte
000445 cff8      	RJMP _0x200000E
                 _0x2000010:
000446 e0e0      	LDI  R30,LOW(0)
000447 93ea      	ST   -Y,R30
000448 e0a0      	LDI  R26,LOW(0)
000449 d340      	RCALL _glcd_moveto
00044a 940e 094e 	CALL __LOADLOCR4
00044c 940c 0844 	JMP  _0x2140001
                 ; .FEND
                 _pcd8544_wrmasked_G100:
                 ; .FSTART _pcd8544_wrmasked_G100
00044e 93aa      	ST   -Y,R26
00044f 931a      	ST   -Y,R17
000450 81ed      	LDD  R30,Y+5
000451 93ea      	ST   -Y,R30
000452 81ad      	LDD  R26,Y+5
000453 df20      	RCALL _pcd8544_rdbyte
000454 2f1e      	MOV  R17,R30
000455 81e9      	LDD  R30,Y+1
000456 30e7      	CPI  R30,LOW(0x7)
000457 f011      	BREQ _0x2000020
000458 30e8      	CPI  R30,LOW(0x8)
000459 f439      	BRNE _0x2000021
                 _0x2000020:
00045a 81eb      	LDD  R30,Y+3
00045b 93ea      	ST   -Y,R30
00045c 81aa      	LDD  R26,Y+2
00045d 940e 07e0 	CALL _glcd_mappixcolor1bit
00045f 83eb      	STD  Y+3,R30
000460 c008      	RJMP _0x2000022
                 _0x2000021:
000461 30e3      	CPI  R30,LOW(0x3)
000462 f421      	BRNE _0x2000024
000463 81eb      	LDD  R30,Y+3
000464 95e0      	COM  R30
000465 83eb      	STD  Y+3,R30
000466 c002      	RJMP _0x2000025
                 _0x2000024:
000467 30e0      	CPI  R30,0
000468 f421      	BRNE _0x2000026
                 _0x2000025:
                 _0x2000022:
000469 81ea      	LDD  R30,Y+2
00046a 95e0      	COM  R30
00046b 231e      	AND  R17,R30
00046c c002      	RJMP _0x2000027
                 _0x2000026:
00046d 30e2      	CPI  R30,LOW(0x2)
00046e f429      	BRNE _0x2000028
                 _0x2000027:
00046f 81ea      	LDD  R30,Y+2
000470 81ab      	LDD  R26,Y+3
000471 23ea      	AND  R30,R26
000472 2b1e      	OR   R17,R30
000473 c00e      	RJMP _0x200001E
                 _0x2000028:
000474 30e1      	CPI  R30,LOW(0x1)
000475 f429      	BRNE _0x2000029
000476 81ea      	LDD  R30,Y+2
000477 81ab      	LDD  R26,Y+3
000478 23ea      	AND  R30,R26
000479 271e      	EOR  R17,R30
00047a c007      	RJMP _0x200001E
                 _0x2000029:
00047b 30e4      	CPI  R30,LOW(0x4)
00047c f429      	BRNE _0x200001E
00047d 81ea      	LDD  R30,Y+2
00047e 95e0      	COM  R30
00047f 81ab      	LDD  R26,Y+3
000480 2bea      	OR   R30,R26
000481 231e      	AND  R17,R30
                 _0x200001E:
000482 2fa1      	MOV  R26,R17
000483 defe      	RCALL _pcd8544_wrbyte
000484 8118      	LDD  R17,Y+0
                 _0x2140008:
000485 9626      	ADIW R28,6
000486 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
000487 93aa      	ST   -Y,R26
000488 9723      	SBIW R28,3
000489 940e 0945 	CALL __SAVELOCR6
00048b 89a8      	LDD  R26,Y+16
00048c 35a4      	CPI  R26,LOW(0x54)
00048d f448      	BRSH _0x200002C
00048e 85af      	LDD  R26,Y+15
00048f 33a0      	CPI  R26,LOW(0x30)
000490 f430      	BRSH _0x200002C
000491 85ae      	LDD  R26,Y+14
000492 30a0      	CPI  R26,LOW(0x0)
000493 f019      	BREQ _0x200002C
000494 85ad      	LDD  R26,Y+13
000495 30a0      	CPI  R26,LOW(0x0)
000496 f409      	BRNE _0x200002B
                 _0x200002C:
000497 c1cc      	RJMP _0x2140007
                 _0x200002B:
000498 85ee      	LDD  R30,Y+14
000499 87e8      	STD  Y+8,R30
00049a 89a8      	LDD  R26,Y+16
00049b 27bb      	CLR  R27
00049c 85ee      	LDD  R30,Y+14
00049d e0f0      	LDI  R31,0
00049e 0fae      	ADD  R26,R30
00049f 1fbf      	ADC  R27,R31
0004a0 35a5      	CPI  R26,LOW(0x55)
0004a1 e0e0      	LDI  R30,HIGH(0x55)
0004a2 07be      	CPC  R27,R30
0004a3 f020      	BRLO _0x200002E
0004a4 89a8      	LDD  R26,Y+16
0004a5 e5e4      	LDI  R30,LOW(84)
0004a6 1bea      	SUB  R30,R26
0004a7 87ee      	STD  Y+14,R30
                 _0x200002E:
0004a8 852d      	LDD  R18,Y+13
0004a9 85af      	LDD  R26,Y+15
0004aa 27bb      	CLR  R27
0004ab 85ed      	LDD  R30,Y+13
0004ac e0f0      	LDI  R31,0
0004ad 0fae      	ADD  R26,R30
0004ae 1fbf      	ADC  R27,R31
0004af 97d1      	SBIW R26,49
0004b0 f020      	BRLO _0x200002F
0004b1 85af      	LDD  R26,Y+15
0004b2 e3e0      	LDI  R30,LOW(48)
0004b3 1bea      	SUB  R30,R26
0004b4 87ed      	STD  Y+13,R30
                 _0x200002F:
0004b5 85a9      	LDD  R26,Y+9
0004b6 30a6      	CPI  R26,LOW(0x6)
0004b7 f009      	BREQ PC+2
0004b8 c05b      	RJMP _0x2000030
0004b9 85ec      	LDD  R30,Y+12
0004ba 30e1      	CPI  R30,LOW(0x1)
0004bb f409      	BRNE _0x2000034
0004bc c1a7      	RJMP _0x2140007
                 _0x2000034:
0004bd 30e3      	CPI  R30,LOW(0x3)
0004be f439      	BRNE _0x2000037
                +
0004bf 91e0 0554+LDS R30 , _glcd_state + ( 27 )
0004c1 91f0 0555+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
0004c3 9730      	SBIW R30,0
0004c4 f409      	BRNE _0x2000036
0004c5 c19e      	RJMP _0x2140007
                 _0x2000036:
                 _0x2000037:
0004c6 8508      	LDD  R16,Y+8
0004c7 85ed      	LDD  R30,Y+13
0004c8 95e6      	LSR  R30
0004c9 95e6      	LSR  R30
0004ca 95e6      	LSR  R30
0004cb 2f3e      	MOV  R19,R30
0004cc 2fe2      	MOV  R30,R18
0004cd 70e7      	ANDI R30,LOW(0x7)
0004ce f419      	BRNE _0x2000039
0004cf 85ad      	LDD  R26,Y+13
0004d0 172a      	CP   R18,R26
0004d1 f0e9      	BREQ _0x2000038
                 _0x2000039:
0004d2 2fa0      	MOV  R26,R16
0004d3 27bb      	CLR  R27
0004d4 2fe3      	MOV  R30,R19
0004d5 e0f0      	LDI  R31,0
0004d6 940e 090c 	CALL __MULW12U
0004d8 85aa      	LDD  R26,Y+10
0004d9 85bb      	LDD  R27,Y+10+1
0004da 940e 0887 	CALL SUBOPT_0x7
0004dc 9526      	LSR  R18
0004dd 9526      	LSR  R18
0004de 9526      	LSR  R18
0004df 2f53      	MOV  R21,R19
                 _0x200003B:
0004e0 935f      	PUSH R21
0004e1 5f5f      	SUBI R21,-1
0004e2 2fe2      	MOV  R30,R18
0004e3 91af      	POP  R26
0004e4 17ea      	CP   R30,R26
0004e5 f048      	BRLO _0x200003D
0004e6 2f10      	MOV  R17,R16
                 _0x200003E:
0004e7 2fe1      	MOV  R30,R17
0004e8 5011      	SUBI R17,1
0004e9 30e0      	CPI  R30,0
0004ea f019      	BREQ _0x2000040
0004eb 940e 088c 	CALL SUBOPT_0x8
0004ed cff9      	RJMP _0x200003E
                 _0x2000040:
0004ee cff1      	RJMP _0x200003B
                 _0x200003D:
                 _0x2000038:
0004ef 85ae      	LDD  R26,Y+14
0004f0 170a      	CP   R16,R26
0004f1 f111      	BREQ _0x2000041
0004f2 85ee      	LDD  R30,Y+14
0004f3 85aa      	LDD  R26,Y+10
0004f4 85bb      	LDD  R27,Y+10+1
0004f5 e0f0      	LDI  R31,0
0004f6 940e 0887 	CALL SUBOPT_0x7
0004f8 85ed      	LDD  R30,Y+13
0004f9 70e7      	ANDI R30,LOW(0x7)
0004fa f009      	BREQ _0x2000042
0004fb 5f3f      	SUBI R19,-LOW(1)
                 _0x2000042:
0004fc e020      	LDI  R18,LOW(0)
                 _0x2000043:
0004fd 932f      	PUSH R18
0004fe 5f2f      	SUBI R18,-1
0004ff 2fe3      	MOV  R30,R19
000500 91af      	POP  R26
000501 17ae      	CP   R26,R30
000502 f488      	BRSH _0x2000045
000503 851e      	LDD  R17,Y+14
                 _0x2000046:
000504 931f      	PUSH R17
000505 5f1f      	SUBI R17,-1
000506 2fe0      	MOV  R30,R16
000507 91af      	POP  R26
000508 17ae      	CP   R26,R30
000509 f418      	BRSH _0x2000048
00050a 940e 088c 	CALL SUBOPT_0x8
00050c cff7      	RJMP _0x2000046
                 _0x2000048:
00050d 85ee      	LDD  R30,Y+14
00050e 81ae      	LDD  R26,Y+6
00050f 81bf      	LDD  R27,Y+6+1
000510 e0f0      	LDI  R31,0
000511 940e 0887 	CALL SUBOPT_0x7
000513 cfe9      	RJMP _0x2000043
                 _0x2000045:
                 _0x2000041:
                 _0x2000030:
000514 85ef      	LDD  R30,Y+15
000515 70e7      	ANDI R30,LOW(0x7)
000516 2f3e      	MOV  R19,R30
                 _0x2000049:
000517 85ed      	LDD  R30,Y+13
000518 30e0      	CPI  R30,0
000519 f409      	BRNE PC+2
00051a c149      	RJMP _0x200004B
00051b 85ea      	LDD  R30,Y+10
00051c 85fb      	LDD  R31,Y+10+1
00051d 83ee      	STD  Y+6,R30
00051e 83ff      	STD  Y+6+1,R31
00051f e010      	LDI  R17,LOW(0)
000520 8908      	LDD  R16,Y+16
000521 3030      	CPI  R19,0
000522 f009      	BREQ PC+2
000523 c063      	RJMP _0x200004C
000524 85ad      	LDD  R26,Y+13
000525 30a8      	CPI  R26,LOW(0x8)
000526 f408      	BRSH PC+2
000527 c05a      	RJMP _0x200004D
000528 85e9      	LDD  R30,Y+9
000529 30e0      	CPI  R30,0
00052a f011      	BREQ _0x2000052
00052b 30e3      	CPI  R30,LOW(0x3)
00052c f409      	BRNE _0x2000053
                 _0x2000052:
00052d c002      	RJMP _0x2000054
                 _0x2000053:
00052e 30e7      	CPI  R30,LOW(0x7)
00052f f409      	BRNE _0x2000055
                 _0x2000054:
000530 c002      	RJMP _0x2000056
                 _0x2000055:
000531 30e8      	CPI  R30,LOW(0x8)
000532 f409      	BRNE _0x2000057
                 _0x2000056:
000533 c002      	RJMP _0x2000058
                 _0x2000057:
000534 30e9      	CPI  R30,LOW(0x9)
000535 f409      	BRNE _0x2000059
                 _0x2000058:
000536 c002      	RJMP _0x200005A
                 _0x2000059:
000537 30ea      	CPI  R30,LOW(0xA)
000538 f421      	BRNE _0x200005B
                 _0x200005A:
000539 930a      	ST   -Y,R16
00053a 89a8      	LDD  R26,Y+16
00053b de2a      	RCALL _pcd8544_gotoxy
00053c c004      	RJMP _0x2000050
                 _0x200005B:
00053d 30e6      	CPI  R30,LOW(0x6)
00053e f411      	BRNE _0x2000050
00053f 940e 0899 	CALL SUBOPT_0x9
                 _0x2000050:
                 _0x200005D:
000541 931f      	PUSH R17
000542 5f1f      	SUBI R17,-1
000543 85ee      	LDD  R30,Y+14
000544 91af      	POP  R26
000545 17ae      	CP   R26,R30
000546 f5a0      	BRSH _0x200005F
000547 85a9      	LDD  R26,Y+9
000548 30a6      	CPI  R26,LOW(0x6)
000549 f451      	BRNE _0x2000060
00054a 940e 089d 	CALL SUBOPT_0xA
00054c 93fa      	ST   -Y,R31
00054d 93ea      	ST   -Y,R30
00054e 940e 0877 	CALL SUBOPT_0x5
000550 81a0      	LD   R26,Z
000551 940e 0827 	CALL _glcd_writemem
000553 c026      	RJMP _0x2000061
                 _0x2000060:
000554 85e9      	LDD  R30,Y+9
000555 30e9      	CPI  R30,LOW(0x9)
000556 f411      	BRNE _0x2000065
000557 e050      	LDI  R21,LOW(0)
000558 c00e      	RJMP _0x2000066
                 _0x2000065:
000559 30ea      	CPI  R30,LOW(0xA)
00055a f411      	BRNE _0x2000064
00055b ef5f      	LDI  R21,LOW(255)
00055c c00a      	RJMP _0x2000066
                 _0x2000064:
00055d 940e 089d 	CALL SUBOPT_0xA
00055f 940e 08a6 	CALL SUBOPT_0xB
000561 2f5e      	MOV  R21,R30
000562 85e9      	LDD  R30,Y+9
000563 30e7      	CPI  R30,LOW(0x7)
000564 f011      	BREQ _0x200006D
000565 30e8      	CPI  R30,LOW(0x8)
000566 f421      	BRNE _0x200006E
                 _0x200006D:
                 _0x2000066:
000567 940e 08ac 	CALL SUBOPT_0xC
000569 2f5e      	MOV  R21,R30
00056a c006      	RJMP _0x200006F
                 _0x200006E:
00056b 30e3      	CPI  R30,LOW(0x3)
00056c f411      	BRNE _0x2000071
00056d 9550      	COM  R21
00056e c002      	RJMP _0x2000072
                 _0x2000071:
00056f 30e0      	CPI  R30,0
000570 f419      	BRNE _0x2000074
                 _0x2000072:
                 _0x200006F:
000571 2fa5      	MOV  R26,R21
000572 ddd3      	RCALL _pcd8544_wrdata_G100
000573 c006      	RJMP _0x200006B
                 _0x2000074:
000574 940e 08b0 	CALL SUBOPT_0xD
000576 efef      	LDI  R30,LOW(255)
000577 93ea      	ST   -Y,R30
000578 85ad      	LDD  R26,Y+13
000579 ded4      	RCALL _pcd8544_wrmasked_G100
                 _0x200006B:
                 _0x2000061:
00057a cfc6      	RJMP _0x200005D
                 _0x200005F:
00057b 85ef      	LDD  R30,Y+15
00057c 5fe8      	SUBI R30,-LOW(8)
00057d 87ef      	STD  Y+15,R30
00057e 85ed      	LDD  R30,Y+13
00057f 50e8      	SUBI R30,LOW(8)
000580 87ed      	STD  Y+13,R30
000581 c0d9      	RJMP _0x2000075
                 _0x200004D:
000582 855d      	LDD  R21,Y+13
000583 e020      	LDI  R18,LOW(0)
000584 e0e0      	LDI  R30,LOW(0)
000585 87ed      	STD  Y+13,R30
000586 c07e      	RJMP _0x2000076
                 _0x200004C:
000587 2fe3      	MOV  R30,R19
000588 85ad      	LDD  R26,Y+13
000589 0fae      	ADD  R26,R30
00058a 30a9      	CPI  R26,LOW(0x9)
00058b f420      	BRSH _0x2000077
00058c 852d      	LDD  R18,Y+13
00058d e0e0      	LDI  R30,LOW(0)
00058e 87ed      	STD  Y+13,R30
00058f c003      	RJMP _0x2000078
                 _0x2000077:
000590 e0e8      	LDI  R30,LOW(8)
000591 1be3      	SUB  R30,R19
000592 2f2e      	MOV  R18,R30
                 _0x2000078:
000593 933a      	ST   -Y,R19
000594 2fa2      	MOV  R26,R18
000595 940e 07d5 	CALL _glcd_getmask
000597 2f4e      	MOV  R20,R30
000598 85e9      	LDD  R30,Y+9
000599 30e6      	CPI  R30,LOW(0x6)
00059a f511      	BRNE _0x200007C
00059b 940e 0899 	CALL SUBOPT_0x9
                 _0x200007D:
00059d 931f      	PUSH R17
00059e 5f1f      	SUBI R17,-1
00059f 85ee      	LDD  R30,Y+14
0005a0 91af      	POP  R26
0005a1 17ae      	CP   R26,R30
0005a2 f4c8      	BRSH _0x200007F
0005a3 940e 0877 	CALL SUBOPT_0x5
0005a5 81e0      	LD   R30,Z
0005a6 23e4      	AND  R30,R20
0005a7 2fae      	MOV  R26,R30
0005a8 2fe3      	MOV  R30,R19
0005a9 940e 0904 	CALL __LSRB12
0005ab 940e 08b6 	CALL SUBOPT_0xE
0005ad 2fe3      	MOV  R30,R19
0005ae 2fa4      	MOV  R26,R20
0005af 940e 0904 	CALL __LSRB12
0005b1 95e0      	COM  R30
0005b2 21e1      	AND  R30,R1
0005b3 2b5e      	OR   R21,R30
0005b4 940e 089d 	CALL SUBOPT_0xA
0005b6 93fa      	ST   -Y,R31
0005b7 93ea      	ST   -Y,R30
0005b8 2fa5      	MOV  R26,R21
0005b9 940e 0827 	CALL _glcd_writemem
0005bb cfe1      	RJMP _0x200007D
                 _0x200007F:
0005bc c02c      	RJMP _0x200007B
                 _0x200007C:
0005bd 30e9      	CPI  R30,LOW(0x9)
0005be f411      	BRNE _0x2000080
0005bf e050      	LDI  R21,LOW(0)
0005c0 c003      	RJMP _0x2000081
                 _0x2000080:
0005c1 30ea      	CPI  R30,LOW(0xA)
0005c2 f4a9      	BRNE _0x2000087
0005c3 ef5f      	LDI  R21,LOW(255)
                 _0x2000081:
0005c4 940e 08ac 	CALL SUBOPT_0xC
0005c6 2fae      	MOV  R26,R30
0005c7 2fe3      	MOV  R30,R19
0005c8 940e 08fc 	CALL __LSLB12
0005ca 2f5e      	MOV  R21,R30
                 _0x2000084:
0005cb 931f      	PUSH R17
0005cc 5f1f      	SUBI R17,-1
0005cd 85ee      	LDD  R30,Y+14
0005ce 91af      	POP  R26
0005cf 17ae      	CP   R26,R30
0005d0 f430      	BRSH _0x2000086
0005d1 940e 08b0 	CALL SUBOPT_0xD
0005d3 934a      	ST   -Y,R20
0005d4 e0a0      	LDI  R26,LOW(0)
0005d5 de78      	RCALL _pcd8544_wrmasked_G100
0005d6 cff4      	RJMP _0x2000084
                 _0x2000086:
0005d7 c011      	RJMP _0x200007B
                 _0x2000087:
                 _0x2000088:
0005d8 931f      	PUSH R17
0005d9 5f1f      	SUBI R17,-1
0005da 85ee      	LDD  R30,Y+14
0005db 91af      	POP  R26
0005dc 17ae      	CP   R26,R30
0005dd f458      	BRSH _0x200008A
0005de 940e 08c1 	CALL SUBOPT_0xF
0005e0 2fae      	MOV  R26,R30
0005e1 2fe3      	MOV  R30,R19
0005e2 940e 08fc 	CALL __LSLB12
0005e4 93ea      	ST   -Y,R30
0005e5 934a      	ST   -Y,R20
0005e6 85ad      	LDD  R26,Y+13
0005e7 de66      	RCALL _pcd8544_wrmasked_G100
0005e8 cfef      	RJMP _0x2000088
                 _0x200008A:
                 _0x200007B:
0005e9 85ed      	LDD  R30,Y+13
0005ea 30e0      	CPI  R30,0
0005eb f409      	BRNE _0x200008B
0005ec c077      	RJMP _0x200004B
                 _0x200008B:
0005ed 85ad      	LDD  R26,Y+13
0005ee 30a8      	CPI  R26,LOW(0x8)
0005ef f428      	BRSH _0x200008C
0005f0 85ed      	LDD  R30,Y+13
0005f1 1be2      	SUB  R30,R18
0005f2 2f5e      	MOV  R21,R30
0005f3 e0e0      	LDI  R30,LOW(0)
0005f4 c003      	RJMP _0x20000A2
                 _0x200008C:
0005f5 2f53      	MOV  R21,R19
0005f6 85ed      	LDD  R30,Y+13
0005f7 50e8      	SUBI R30,LOW(8)
                 _0x20000A2:
0005f8 87ed      	STD  Y+13,R30
0005f9 e010      	LDI  R17,LOW(0)
0005fa 85ef      	LDD  R30,Y+15
0005fb 5fe8      	SUBI R30,-LOW(8)
0005fc 87ef      	STD  Y+15,R30
0005fd e0e8      	LDI  R30,LOW(8)
0005fe 1be3      	SUB  R30,R19
0005ff 2f2e      	MOV  R18,R30
000600 8908      	LDD  R16,Y+16
000601 85ea      	LDD  R30,Y+10
000602 85fb      	LDD  R31,Y+10+1
000603 83ee      	STD  Y+6,R30
000604 83ff      	STD  Y+6+1,R31
                 _0x2000076:
000605 2fe5      	MOV  R30,R21
000606 e0f0      	LDI  R31,0
000607 59e0      	SUBI R30,LOW(-__glcd_mask*2)
000608 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000609 9144      	LPM  R20,Z
00060a 85e9      	LDD  R30,Y+9
00060b 30e6      	CPI  R30,LOW(0x6)
00060c f511      	BRNE _0x2000091
00060d 940e 0899 	CALL SUBOPT_0x9
                 _0x2000092:
00060f 931f      	PUSH R17
000610 5f1f      	SUBI R17,-1
000611 85ee      	LDD  R30,Y+14
000612 91af      	POP  R26
000613 17ae      	CP   R26,R30
000614 f4c8      	BRSH _0x2000094
000615 940e 0877 	CALL SUBOPT_0x5
000617 81e0      	LD   R30,Z
000618 23e4      	AND  R30,R20
000619 2fae      	MOV  R26,R30
00061a 2fe2      	MOV  R30,R18
00061b 940e 08fc 	CALL __LSLB12
00061d 940e 08b6 	CALL SUBOPT_0xE
00061f 2fe2      	MOV  R30,R18
000620 2fa4      	MOV  R26,R20
000621 940e 08fc 	CALL __LSLB12
000623 95e0      	COM  R30
000624 21e1      	AND  R30,R1
000625 2b5e      	OR   R21,R30
000626 940e 089d 	CALL SUBOPT_0xA
000628 93fa      	ST   -Y,R31
000629 93ea      	ST   -Y,R30
00062a 2fa5      	MOV  R26,R21
00062b 940e 0827 	CALL _glcd_writemem
00062d cfe1      	RJMP _0x2000092
                 _0x2000094:
00062e c02c      	RJMP _0x2000090
                 _0x2000091:
00062f 30e9      	CPI  R30,LOW(0x9)
000630 f411      	BRNE _0x2000095
000631 e050      	LDI  R21,LOW(0)
000632 c003      	RJMP _0x2000096
                 _0x2000095:
000633 30ea      	CPI  R30,LOW(0xA)
000634 f4a9      	BRNE _0x200009C
000635 ef5f      	LDI  R21,LOW(255)
                 _0x2000096:
000636 940e 08ac 	CALL SUBOPT_0xC
000638 2fae      	MOV  R26,R30
000639 2fe2      	MOV  R30,R18
00063a 940e 0904 	CALL __LSRB12
00063c 2f5e      	MOV  R21,R30
                 _0x2000099:
00063d 931f      	PUSH R17
00063e 5f1f      	SUBI R17,-1
00063f 85ee      	LDD  R30,Y+14
000640 91af      	POP  R26
000641 17ae      	CP   R26,R30
000642 f430      	BRSH _0x200009B
000643 940e 08b0 	CALL SUBOPT_0xD
000645 934a      	ST   -Y,R20
000646 e0a0      	LDI  R26,LOW(0)
000647 de06      	RCALL _pcd8544_wrmasked_G100
000648 cff4      	RJMP _0x2000099
                 _0x200009B:
000649 c011      	RJMP _0x2000090
                 _0x200009C:
                 _0x200009D:
00064a 931f      	PUSH R17
00064b 5f1f      	SUBI R17,-1
00064c 85ee      	LDD  R30,Y+14
00064d 91af      	POP  R26
00064e 17ae      	CP   R26,R30
00064f f458      	BRSH _0x200009F
000650 940e 08c1 	CALL SUBOPT_0xF
000652 2fae      	MOV  R26,R30
000653 2fe2      	MOV  R30,R18
000654 940e 0904 	CALL __LSRB12
000656 93ea      	ST   -Y,R30
000657 934a      	ST   -Y,R20
000658 85ad      	LDD  R26,Y+13
000659 ddf4      	RCALL _pcd8544_wrmasked_G100
00065a cfef      	RJMP _0x200009D
                 _0x200009F:
                 _0x2000090:
                 _0x2000075:
00065b 85e8      	LDD  R30,Y+8
00065c 85aa      	LDD  R26,Y+10
00065d 85bb      	LDD  R27,Y+10+1
00065e e0f0      	LDI  R31,0
00065f 0fea      	ADD  R30,R26
000660 1ffb      	ADC  R31,R27
000661 87ea      	STD  Y+10,R30
000662 87fb      	STD  Y+10+1,R31
000663 ceb3      	RJMP _0x2000049
                 _0x200004B:
                 _0x2140007:
000664 940e 094c 	CALL __LOADLOCR6
000666 9661      	ADIW R28,17
000667 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
000668 940e 08ce 	CALL SUBOPT_0x10
00066a f024      	BRLT _0x2020003
00066b e0e0      	LDI  R30,LOW(0)
00066c e0f0      	LDI  R31,HIGH(0)
00066d 940c 07de 	JMP  _0x2140003
                 _0x2020003:
00066f 81a8      	LD   R26,Y
000670 81b9      	LDD  R27,Y+1
000671 35a4      	CPI  R26,LOW(0x54)
000672 e0e0      	LDI  R30,HIGH(0x54)
000673 07be      	CPC  R27,R30
000674 f024      	BRLT _0x2020004
000675 e5e3      	LDI  R30,LOW(83)
000676 e0f0      	LDI  R31,HIGH(83)
000677 940c 07de 	JMP  _0x2140003
                 _0x2020004:
000679 81e8      	LD   R30,Y
00067a 81f9      	LDD  R31,Y+1
00067b 940c 07de 	JMP  _0x2140003
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
00067d 940e 08ce 	CALL SUBOPT_0x10
00067f f024      	BRLT _0x2020005
000680 e0e0      	LDI  R30,LOW(0)
000681 e0f0      	LDI  R31,HIGH(0)
000682 940c 07de 	JMP  _0x2140003
                 _0x2020005:
000684 81a8      	LD   R26,Y
000685 81b9      	LDD  R27,Y+1
000686 97d0      	SBIW R26,48
000687 f024      	BRLT _0x2020006
000688 e2ef      	LDI  R30,LOW(47)
000689 e0f0      	LDI  R31,HIGH(47)
00068a 940c 07de 	JMP  _0x2140003
                 _0x2020006:
00068c 81e8      	LD   R30,Y
00068d 81f9      	LDD  R31,Y+1
00068e 940c 07de 	JMP  _0x2140003
                 ; .FEND
                 _glcd_getcharw_G101:
                 ; .FSTART _glcd_getcharw_G101
000690 93ba      	ST   -Y,R27
000691 93aa      	ST   -Y,R26
000692 9723      	SBIW R28,3
000693 940e 08d5 	CALL SUBOPT_0x11
000695 018f      	MOVW R16,R30
000696 2e00      	MOV  R0,R16
000697 2a01      	OR   R0,R17
000698 f419      	BRNE _0x202000B
000699 e0e0      	LDI  R30,LOW(0)
00069a e0f0      	LDI  R31,HIGH(0)
00069b c05f      	RJMP _0x2140006
                 _0x202000B:
00069c 940e 08dc 	CALL SUBOPT_0x12
00069e 820f      	STD  Y+7,R0
00069f 940e 08dc 	CALL SUBOPT_0x12
0006a1 820e      	STD  Y+6,R0
0006a2 940e 08dc 	CALL SUBOPT_0x12
0006a4 8608      	STD  Y+8,R0
0006a5 85eb      	LDD  R30,Y+11
0006a6 85a8      	LDD  R26,Y+8
0006a7 17ea      	CP   R30,R26
0006a8 f418      	BRSH _0x202000C
0006a9 e0e0      	LDI  R30,LOW(0)
0006aa e0f0      	LDI  R31,HIGH(0)
0006ab c04f      	RJMP _0x2140006
                 _0x202000C:
0006ac 01f8      	MOVW R30,R16
                +
0006ad 5f0f     +SUBI R16 , LOW ( - 1 )
0006ae 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0006af 9154      	LPM  R21,Z
0006b0 85a8      	LDD  R26,Y+8
0006b1 27bb      	CLR  R27
0006b2 27ee      	CLR  R30
0006b3 0fa5      	ADD  R26,R21
0006b4 1fbe      	ADC  R27,R30
0006b5 85eb      	LDD  R30,Y+11
0006b6 e0f0      	LDI  R31,0
0006b7 17ea      	CP   R30,R26
0006b8 07fb      	CPC  R31,R27
0006b9 f018      	BRLO _0x202000D
0006ba e0e0      	LDI  R30,LOW(0)
0006bb e0f0      	LDI  R31,HIGH(0)
0006bc c03e      	RJMP _0x2140006
                 _0x202000D:
0006bd 81ee      	LDD  R30,Y+6
0006be 95e6      	LSR  R30
0006bf 95e6      	LSR  R30
0006c0 95e6      	LSR  R30
0006c1 2f4e      	MOV  R20,R30
0006c2 81ee      	LDD  R30,Y+6
0006c3 70e7      	ANDI R30,LOW(0x7)
0006c4 f009      	BREQ _0x202000E
0006c5 5f4f      	SUBI R20,-LOW(1)
                 _0x202000E:
0006c6 81ef      	LDD  R30,Y+7
0006c7 30e0      	CPI  R30,0
0006c8 f0a1      	BREQ _0x202000F
0006c9 85a9      	LDD  R26,Y+9
0006ca 85ba      	LDD  R27,Y+9+1
0006cb 93ec      	ST   X,R30
0006cc 85a8      	LDD  R26,Y+8
0006cd 85eb      	LDD  R30,Y+11
0006ce 1bea      	SUB  R30,R26
0006cf e0f0      	LDI  R31,0
0006d0 01df      	MOVW R26,R30
0006d1 81ef      	LDD  R30,Y+7
0006d2 e0f0      	LDI  R31,0
0006d3 940e 090c 	CALL __MULW12U
0006d5 01df      	MOVW R26,R30
0006d6 2fe4      	MOV  R30,R20
0006d7 e0f0      	LDI  R31,0
0006d8 940e 090c 	CALL __MULW12U
0006da 0fe0      	ADD  R30,R16
0006db 1ff1      	ADC  R31,R17
0006dc c01e      	RJMP _0x2140006
                 _0x202000F:
0006dd 0198      	MOVW R18,R16
0006de 2fe5      	MOV  R30,R21
0006df e0f0      	LDI  R31,0
                +
0006e0 0f0e     +ADD R16 , R30
0006e1 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2020010:
0006e2 85a8      	LDD  R26,Y+8
0006e3 5faf      	SUBI R26,-LOW(1)
0006e4 87a8      	STD  Y+8,R26
0006e5 50a1      	SUBI R26,LOW(1)
0006e6 85eb      	LDD  R30,Y+11
0006e7 17ae      	CP   R26,R30
0006e8 f460      	BRSH _0x2020012
0006e9 01f9      	MOVW R30,R18
                +
0006ea 5f2f     +SUBI R18 , LOW ( - 1 )
0006eb 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0006ec 91a4      	LPM  R26,Z
0006ed e0b0      	LDI  R27,0
0006ee 2fe4      	MOV  R30,R20
0006ef e0f0      	LDI  R31,0
0006f0 940e 090c 	CALL __MULW12U
                +
0006f2 0f0e     +ADD R16 , R30
0006f3 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
0006f4 cfed      	RJMP _0x2020010
                 _0x2020012:
0006f5 01f9      	MOVW R30,R18
0006f6 91e4      	LPM  R30,Z
0006f7 85a9      	LDD  R26,Y+9
0006f8 85ba      	LDD  R27,Y+9+1
0006f9 93ec      	ST   X,R30
0006fa 01f8      	MOVW R30,R16
                 _0x2140006:
0006fb 940e 094c 	CALL __LOADLOCR6
0006fd 962c      	ADIW R28,12
0006fe 9508      	RET
                 ; .FEND
                 _glcd_new_line_G101:
                 ; .FSTART _glcd_new_line_G101
0006ff e0e0      	LDI  R30,LOW(0)
                +
000700 93e0 053b+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
000702 91a0 053c+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000704 27bb      	CLR  R27
000705 940e 08e1 	CALL SUBOPT_0x13
000707 e0f0      	LDI  R31,0
000708 0fae      	ADD  R26,R30
000709 1fbf      	ADC  R27,R31
                +
00070a 91e0 0540+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
00070c e0f0      	LDI  R31,0
00070d 0fae      	ADD  R26,R30
00070e 1fbf      	ADC  R27,R31
00070f df6d      	RCALL _glcd_clipy
                +
000710 93e0 053c+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000712 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
000713 93aa      	ST   -Y,R26
000714 9721      	SBIW R28,1
000715 940e 08d5 	CALL SUBOPT_0x11
000717 9730      	SBIW R30,0
000718 f409      	BRNE PC+2
000719 c055      	RJMP _0x202001F
00071a 81af      	LDD  R26,Y+7
00071b 30aa      	CPI  R26,LOW(0xA)
00071c f409      	BRNE _0x2020020
00071d c04f      	RJMP _0x2020021
                 _0x2020020:
00071e 81ef      	LDD  R30,Y+7
00071f 93ea      	ST   -Y,R30
000720 01de      	MOVW R26,R28
000721 9617      	ADIW R26,7
000722 df6d      	RCALL _glcd_getcharw_G101
000723 01af      	MOVW R20,R30
000724 9730      	SBIW R30,0
000725 f409      	BRNE _0x2020022
000726 c04a      	RJMP _0x2140005
                 _0x2020022:
                +
000727 91e0 053f+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000729 81ae      	LDD  R26,Y+6
00072a 0fea      	ADD  R30,R26
00072b 2f3e      	MOV  R19,R30
                +
00072c 91a0 053b+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
00072e 27bb      	CLR  R27
00072f e0f0      	LDI  R31,0
000730 0fea      	ADD  R30,R26
000731 1ffb      	ADC  R31,R27
000732 018f      	MOVW R16,R30
                +
000733 3505     +CPI R16 , LOW ( 85 )
000734 e0e0     +LDI R30 , HIGH ( 85 )
000735 071e     +CPC R17 , R30
                 	__CPWRN 16,17,85
000736 f018      	BRLO _0x2020023
000737 2f03      	MOV  R16,R19
000738 2711      	CLR  R17
000739 dfc5      	RCALL _glcd_new_line_G101
                 _0x2020023:
                +
00073a 91e0 053b+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
00073c 93ea      	ST   -Y,R30
                +
00073d 91e0 053c+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
00073f 93ea      	ST   -Y,R30
000740 85e8      	LDD  R30,Y+8
000741 93ea      	ST   -Y,R30
000742 940e 08e1 	CALL SUBOPT_0x13
000744 93ea      	ST   -Y,R30
000745 e0e1      	LDI  R30,LOW(1)
000746 93ea      	ST   -Y,R30
000747 935a      	ST   -Y,R21
000748 934a      	ST   -Y,R20
000749 e0a7      	LDI  R26,LOW(7)
00074a dd3c      	RCALL _glcd_block
                +
00074b 91e0 053b+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
00074d 81ae      	LDD  R26,Y+6
00074e 0fea      	ADD  R30,R26
00074f 93ea      	ST   -Y,R30
                +
000750 91e0 053c+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000752 93ea      	ST   -Y,R30
                +
000753 91e0 053f+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000755 93ea      	ST   -Y,R30
000756 940e 08e1 	CALL SUBOPT_0x13
000758 940e 08e8 	CALL SUBOPT_0x14
                +
00075a 91e0 053b+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
00075c 93ea      	ST   -Y,R30
                +
00075d 91a0 053c+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
00075f 940e 08e1 	CALL SUBOPT_0x13
000761 0fea      	ADD  R30,R26
000762 93ea      	ST   -Y,R30
000763 933a      	ST   -Y,R19
                +
000764 91e0 0540+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000766 940e 08e8 	CALL SUBOPT_0x14
000768 e5e4      	LDI  R30,LOW(84)
000769 e0f0      	LDI  R31,HIGH(84)
00076a 17e0      	CP   R30,R16
00076b 07f1      	CPC  R31,R17
00076c f411      	BRNE _0x2020024
                 _0x2020021:
00076d df91      	RCALL _glcd_new_line_G101
00076e c002      	RJMP _0x2140005
                 _0x2020024:
                 _0x202001F:
                +
00076f 9300 053b+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
                 _0x2140005:
000771 940e 094c 	CALL __LOADLOCR6
000773 9628      	ADIW R28,8
000774 9508      	RET
                 ; .FEND
                 _glcd_outtextxy:
                 ; .FSTART _glcd_outtextxy
000775 93ba      	ST   -Y,R27
000776 93aa      	ST   -Y,R26
000777 931a      	ST   -Y,R17
000778 81ec      	LDD  R30,Y+4
000779 93ea      	ST   -Y,R30
00077a 81ac      	LDD  R26,Y+4
00077b d00e      	RCALL _glcd_moveto
                 _0x2020025:
00077c 81a9      	LDD  R26,Y+1
00077d 81ba      	LDD  R27,Y+1+1
00077e 91ed      	LD   R30,X+
00077f 83a9      	STD  Y+1,R26
000780 83ba      	STD  Y+1+1,R27
000781 2f1e      	MOV  R17,R30
000782 30e0      	CPI  R30,0
000783 f019      	BREQ _0x2020027
000784 2fa1      	MOV  R26,R17
000785 df8d      	RCALL _glcd_putchar
000786 cff5      	RJMP _0x2020025
                 _0x2020027:
000787 8118      	LDD  R17,Y+0
000788 940c 07d3 	JMP  _0x2140004
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
00078a 93aa      	ST   -Y,R26
00078b 81a9      	LDD  R26,Y+1
00078c 27bb      	CLR  R27
00078d deda      	RCALL _glcd_clipx
                +
00078e 93e0 053b+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000790 81a8      	LD   R26,Y
000791 27bb      	CLR  R27
000792 deea      	RCALL _glcd_clipy
                +
000793 93e0 053c+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000795 940c 07de 	JMP  _0x2140003
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 
                 	.CSEG
                 _itoa:
                 ; .FSTART _itoa
000797 93ba      	ST   -Y,R27
000798 93aa      	ST   -Y,R26
000799 91a9          ld   r26,y+
00079a 91b9          ld   r27,y+
00079b 91e9          ld   r30,y+
00079c 91f9          ld   r31,y+
00079d 9630          adiw r30,0
00079e f42a          brpl __itoa0
00079f 95e0          com  r30
0007a0 95f0          com  r31
0007a1 9631          adiw r30,1
0007a2 e26d          ldi  r22,'-'
0007a3 936d          st   x+,r22
                 __itoa0:
0007a4 94e8          clt
0007a5 e180          ldi  r24,low(10000)
0007a6 e297          ldi  r25,high(10000)
0007a7 d00d          rcall __itoa1
0007a8 ee88          ldi  r24,low(1000)
0007a9 e093          ldi  r25,high(1000)
0007aa d00a          rcall __itoa1
0007ab e684          ldi  r24,100
0007ac 2799          clr  r25
0007ad d007          rcall __itoa1
0007ae e08a          ldi  r24,10
0007af d005          rcall __itoa1
0007b0 2f6e          mov  r22,r30
0007b1 d010          rcall __itoa5
0007b2 2766          clr  r22
0007b3 936c          st   x,r22
0007b4 9508          ret
                 
                 __itoa1:
0007b5 2766          clr	 r22
                 __itoa2:
0007b6 17e8          cp   r30,r24
0007b7 07f9          cpc  r31,r25
0007b8 f020          brlo __itoa3
0007b9 9563          inc  r22
0007ba 1be8          sub  r30,r24
0007bb 0bf9          sbc  r31,r25
0007bc f7c9          brne __itoa2
                 __itoa3:
0007bd 2366          tst  r22
0007be f411          brne __itoa4
0007bf f016          brts __itoa5
0007c0 9508          ret
                 __itoa4:
0007c1 9468          set
                 __itoa5:
0007c2 5d60          subi r22,-0x30
0007c3 936d          st   x+,r22
0007c4 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
0007c5 93ba      	ST   -Y,R27
0007c6 93aa      	ST   -Y,R26
0007c7 81b9          ldd  r27,y+1
0007c8 81a8          ld   r26,y
0007c9 9610          adiw r26,0
0007ca f031          breq memset1
0007cb 81fc          ldd  r31,y+4
0007cc 81eb          ldd  r30,y+3
0007cd 816a          ldd  r22,y+2
                 memset0:
0007ce 9361          st   z+,r22
0007cf 9711          sbiw r26,1
0007d0 f7e9          brne memset0
                 memset1:
0007d1 81eb          ldd  r30,y+3
0007d2 81fc          ldd  r31,y+4
                 _0x2140004:
0007d3 9625      	ADIW R28,5
0007d4 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
0007d5 93aa      	ST   -Y,R26
0007d6 81e8      	LD   R30,Y
0007d7 e0f0      	LDI  R31,0
0007d8 59e0      	SUBI R30,LOW(-__glcd_mask*2)
0007d9 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
0007da 91a4      	LPM  R26,Z
0007db 81e9      	LDD  R30,Y+1
0007dc 940e 08fc 	CALL __LSLB12
                 _0x2140003:
0007de 9622      	ADIW R28,2
0007df 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
0007e0 93aa      	ST   -Y,R26
0007e1 931a      	ST   -Y,R17
0007e2 81e9      	LDD  R30,Y+1
0007e3 30e7      	CPI  R30,LOW(0x7)
0007e4 f011      	BREQ _0x20E0007
0007e5 30ea      	CPI  R30,LOW(0xA)
0007e6 f419      	BRNE _0x20E0008
                 _0x20E0007:
0007e7 9110 0539 	LDS  R17,_glcd_state
0007e9 c009      	RJMP _0x20E0009
                 _0x20E0008:
0007ea 30e9      	CPI  R30,LOW(0x9)
0007eb f419      	BRNE _0x20E000B
                +
0007ec 9110 053a+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
0007ee c004      	RJMP _0x20E0009
                 _0x20E000B:
0007ef 30e8      	CPI  R30,LOW(0x8)
0007f0 f4a1      	BRNE _0x20E0005
                +
0007f1 9110 0549+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x20E0009:
                +
0007f3 91e0 053a+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
0007f5 30e0      	CPI  R30,0
0007f6 f049      	BREQ _0x20E000E
0007f7 3010      	CPI  R17,0
0007f8 f019      	BREQ _0x20E000F
0007f9 efef      	LDI  R30,LOW(255)
0007fa 8118      	LDD  R17,Y+0
0007fb c029      	RJMP _0x2140002
                 _0x20E000F:
0007fc 81ea      	LDD  R30,Y+2
0007fd 95e0      	COM  R30
0007fe 8118      	LDD  R17,Y+0
0007ff c025      	RJMP _0x2140002
                 _0x20E000E:
000800 3010      	CPI  R17,0
000801 f419      	BRNE _0x20E0011
000802 e0e0      	LDI  R30,LOW(0)
000803 8118      	LDD  R17,Y+0
000804 c020      	RJMP _0x2140002
                 _0x20E0011:
                 _0x20E0005:
000805 81ea      	LDD  R30,Y+2
000806 8118      	LDD  R17,Y+0
000807 c01d      	RJMP _0x2140002
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
000808 93ba      	ST   -Y,R27
000809 93aa      	ST   -Y,R26
00080a 81ea      	LDD  R30,Y+2
00080b 30e1      	CPI  R30,LOW(0x1)
00080c f421      	BRNE _0x20E0015
00080d 81e8      	LD   R30,Y
00080e 81f9      	LDD  R31,Y+1
00080f 91e4      	LPM  R30,Z
000810 c014      	RJMP _0x2140002
                 _0x20E0015:
000811 30e2      	CPI  R30,LOW(0x2)
000812 f429      	BRNE _0x20E0016
000813 81a8      	LD   R26,Y
000814 81b9      	LDD  R27,Y+1
000815 940e 091c 	CALL __EEPROMRDB
000817 c00d      	RJMP _0x2140002
                 _0x20E0016:
000818 30e3      	CPI  R30,LOW(0x3)
000819 f441      	BRNE _0x20E0018
00081a 81a8      	LD   R26,Y
00081b 81b9      	LDD  R27,Y+1
                +
00081c 91e0 0552+LDS R30 , _glcd_state + ( 25 )
00081e 91f0 0553+LDS R31 , _glcd_state + ( 25 ) + 1
000820 9509     +ICALL
                 	__CALL1MN _glcd_state,25
000821 c003      	RJMP _0x2140002
                 _0x20E0018:
000822 81a8      	LD   R26,Y
000823 81b9      	LDD  R27,Y+1
000824 91ec      	LD   R30,X
                 _0x2140002:
000825 9623      	ADIW R28,3
000826 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
000827 93aa      	ST   -Y,R26
000828 81eb      	LDD  R30,Y+3
000829 30e0      	CPI  R30,0
00082a f429      	BRNE _0x20E001C
00082b 81e8      	LD   R30,Y
00082c 81a9      	LDD  R26,Y+1
00082d 81ba      	LDD  R27,Y+1+1
00082e 93ec      	ST   X,R30
00082f c014      	RJMP _0x20E001B
                 _0x20E001C:
000830 30e2      	CPI  R30,LOW(0x2)
000831 f431      	BRNE _0x20E001D
000832 81e8      	LD   R30,Y
000833 81a9      	LDD  R26,Y+1
000834 81ba      	LDD  R27,Y+1+1
000835 940e 0930 	CALL __EEPROMWRB
000837 c00c      	RJMP _0x20E001B
                 _0x20E001D:
000838 30e3      	CPI  R30,LOW(0x3)
000839 f451      	BRNE _0x20E001B
00083a 81e9      	LDD  R30,Y+1
00083b 81fa      	LDD  R31,Y+1+1
00083c 93fa      	ST   -Y,R31
00083d 93ea      	ST   -Y,R30
00083e 81aa      	LDD  R26,Y+2
                +
00083f 91e0 0554+LDS R30 , _glcd_state + ( 27 )
000841 91f0 0555+LDS R31 , _glcd_state + ( 27 ) + 1
000843 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x20E001B:
                 _0x2140001:
000844 9624      	ADIW R28,4
000845 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _glcd_state:
000539           	.BYTE 0x1D
                 
                 	.ESEG
                 _my_eeprom:
000000           	.BYTE 0x2
                 
                 	.DSEG
                 _keypad:
000556           	.BYTE 0x12
                 _tmp:
000568           	.BYTE 0xA
                 _gfx_addr_G100:
000572           	.BYTE 0x2
                 _gfx_buffer_G100:
000574           	.BYTE 0x1F8
                 __seed_G104:
00076c           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x0:
000846 e0a6      	LDI  R26,LOW(6)
000847 9f0a      	MUL  R16,R26
000848 01f0      	MOVW R30,R0
000849 5aea      	SUBI R30,LOW(-_keypad)
00084a 4ffa      	SBCI R31,HIGH(-_keypad)
00084b 01df      	MOVW R26,R30
00084c 2fe3      	MOV  R30,R19
00084d e0f0      	LDI  R31,0
00084e 0fee      	LSL  R30
00084f 1fff      	ROL  R31
000850 0fae      	ADD  R26,R30
000851 1fbf      	ADC  R27,R31
000852 940e 0914 	CALL __GETW1P
000854 940e 094e 	CALL __LOADLOCR4
000856 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
000857 940e 0430 	CALL _glcd_clear
000859 e0ef      	LDI  R30,LOW(15)
00085a 93ea      	ST   -Y,R30
00085b e1e4      	LDI  R30,LOW(20)
00085c 93ea      	ST   -Y,R30
00085d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
                +
00085e e000     +LDI R16 , LOW ( 0 )
00085f e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
000860 ef2f     +LDI R18 , LOW ( - 1 )
000861 ef3f     +LDI R19 , HIGH ( - 1 )
                 	__GETWRN 18,19,-1
                +
000862 e040     +LDI R20 , LOW ( 0 )
000863 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
000864 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3:
000865 93fa      	ST   -Y,R31
000866 93ea      	ST   -Y,R30
000867 efaf      	LDI  R26,LOW(65535)
000868 efbf      	LDI  R27,HIGH(65535)
000869 940c 0222 	JMP  _mainScreen
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x4:
00086b 940e 01e4 	CALL _read
00086d 019f      	MOVW R18,R30
00086e eca8      	LDI  R26,LOW(200)
00086f e0b0      	LDI  R27,0
000870 940e 08f2 	CALL _delay_ms
000872 efef      	LDI  R30,LOW(65535)
000873 efff      	LDI  R31,HIGH(65535)
000874 17e2      	CP   R30,R18
000875 07f3      	CPC  R31,R19
000876 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x5:
000877 e7a2      	LDI  R26,LOW(_gfx_addr_G100)
000878 e0b5      	LDI  R27,HIGH(_gfx_addr_G100)
000879 91ed      	LD   R30,X+
00087a 91fd      	LD   R31,X+
00087b 9631      	ADIW R30,1
00087c 93fe      	ST   -X,R31
00087d 93ee      	ST   -X,R30
00087e 9731      	SBIW R30,1
00087f 58ec      	SUBI R30,LOW(-_gfx_buffer_G100)
000880 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G100)
000881 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
000882 93e0 0064 	STS  100,R30
000884 91e0 0065 	LDS  R30,101
000886 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000887 0fea      	ADD  R30,R26
000888 1ffb      	ADC  R31,R27
000889 83ee      	STD  Y+6,R30
00088a 83ff      	STD  Y+6+1,R31
00088b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x8:
00088c 85ec      	LDD  R30,Y+12
00088d 93ea      	ST   -Y,R30
00088e 81ef      	LDD  R30,Y+7
00088f 85f8      	LDD  R31,Y+7+1
000890 9631      	ADIW R30,1
000891 83ef      	STD  Y+7,R30
000892 87f8      	STD  Y+7+1,R31
000893 9731      	SBIW R30,1
000894 93fa      	ST   -Y,R31
000895 93ea      	ST   -Y,R30
000896 e0a0      	LDI  R26,LOW(0)
000897 940c 0827 	JMP  _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
000899 930a      	ST   -Y,R16
00089a 89a8      	LDD  R26,Y+16
00089b 940c 034f 	JMP  _pcd8544_setaddr_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0xA:
00089d 85ec      	LDD  R30,Y+12
00089e 93ea      	ST   -Y,R30
00089f 81ef      	LDD  R30,Y+7
0008a0 85f8      	LDD  R31,Y+7+1
0008a1 9631      	ADIW R30,1
0008a2 83ef      	STD  Y+7,R30
0008a3 87f8      	STD  Y+7+1,R31
0008a4 9731      	SBIW R30,1
0008a5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB:
0008a6 2766      	CLR  R22
0008a7 2777      	CLR  R23
0008a8 01df      	MOVW R26,R30
0008a9 01cb      	MOVW R24,R22
0008aa 940c 0808 	JMP  _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
0008ac 935a      	ST   -Y,R21
0008ad 85aa      	LDD  R26,Y+10
0008ae 940c 07e0 	JMP  _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xD:
0008b0 930a      	ST   -Y,R16
0008b1 9503      	INC  R16
0008b2 89e8      	LDD  R30,Y+16
0008b3 93ea      	ST   -Y,R30
0008b4 935a      	ST   -Y,R21
0008b5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xE:
0008b6 2f5e      	MOV  R21,R30
0008b7 85ec      	LDD  R30,Y+12
0008b8 93ea      	ST   -Y,R30
0008b9 81af      	LDD  R26,Y+7
0008ba 85b8      	LDD  R27,Y+7+1
0008bb 2788      	CLR  R24
0008bc 2799      	CLR  R25
0008bd 940e 0808 	CALL _glcd_readmem
0008bf 2e1e      	MOV  R1,R30
0008c0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xF:
0008c1 930a      	ST   -Y,R16
0008c2 9503      	INC  R16
0008c3 89e8      	LDD  R30,Y+16
0008c4 93ea      	ST   -Y,R30
0008c5 85ee      	LDD  R30,Y+14
0008c6 93ea      	ST   -Y,R30
0008c7 85e9      	LDD  R30,Y+9
0008c8 85fa      	LDD  R31,Y+9+1
0008c9 9631      	ADIW R30,1
0008ca 87e9      	STD  Y+9,R30
0008cb 87fa      	STD  Y+9+1,R31
0008cc 9731      	SBIW R30,1
0008cd cfd8      	RJMP SUBOPT_0xB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
0008ce 93ba      	ST   -Y,R27
0008cf 93aa      	ST   -Y,R26
0008d0 81a8      	LD   R26,Y
0008d1 81b9      	LDD  R27,Y+1
0008d2 940e 0941 	CALL __CPW02
0008d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
0008d5 940e 0945 	CALL __SAVELOCR6
                +
0008d7 91e0 053d+LDS R30 , _glcd_state + ( 4 )
0008d9 91f0 053e+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
0008db 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
0008dc 01f8      	MOVW R30,R16
                +
0008dd 5f0f     +SUBI R16 , LOW ( - 1 )
0008de 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0008df 9004      	LPM  R0,Z
0008e0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x13:
                +
0008e1 91e0 053d+LDS R30 , _glcd_state + ( 4 )
0008e3 91f0 053e+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
0008e5 9631      	ADIW R30,1
0008e6 91e4      	LPM  R30,Z
0008e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x14:
0008e8 93ea      	ST   -Y,R30
0008e9 e0e0      	LDI  R30,LOW(0)
0008ea 93ea      	ST   -Y,R30
0008eb e0e0      	LDI  R30,LOW(0)
0008ec e0f0      	LDI  R31,HIGH(0)
0008ed 93fa      	ST   -Y,R31
0008ee 93ea      	ST   -Y,R30
0008ef e0a9      	LDI  R26,LOW(9)
0008f0 940c 0487 	JMP  _glcd_block
                 
                 
                 	.CSEG
                 _delay_ms:
0008f2 9610      	adiw r26,0
0008f3 f039      	breq __delay_ms1
                 __delay_ms0:
                +
0008f4 ed80     +LDI R24 , LOW ( 0x7D0 )
0008f5 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0008f6 9701     +SBIW R24 , 1
0008f7 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0008f8 95a8      	wdr
0008f9 9711      	sbiw r26,1
0008fa f7c9      	brne __delay_ms0
                 __delay_ms1:
0008fb 9508      	ret
                 
                 __LSLB12:
0008fc 23ee      	TST  R30
0008fd 2e0e      	MOV  R0,R30
0008fe 2fea      	MOV  R30,R26
0008ff f019      	BREQ __LSLB12R
                 __LSLB12L:
000900 0fee      	LSL  R30
000901 940a      	DEC  R0
000902 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
000903 9508      	RET
                 
                 __LSRB12:
000904 23ee      	TST  R30
000905 2e0e      	MOV  R0,R30
000906 2fea      	MOV  R30,R26
000907 f019      	BREQ __LSRB12R
                 __LSRB12L:
000908 95e6      	LSR  R30
000909 940a      	DEC  R0
00090a f7e9      	BRNE __LSRB12L
                 __LSRB12R:
00090b 9508      	RET
                 
                 __MULW12U:
00090c 9ffa      	MUL  R31,R26
00090d 2df0      	MOV  R31,R0
00090e 9feb      	MUL  R30,R27
00090f 0df0      	ADD  R31,R0
000910 9fea      	MUL  R30,R26
000911 2de0      	MOV  R30,R0
000912 0df1      	ADD  R31,R1
000913 9508      	RET
                 
                 __GETW1P:
000914 91ed      	LD   R30,X+
000915 91fc      	LD   R31,X
000916 9711      	SBIW R26,1
000917 9508      	RET
                 
                 __EEPROMRDW:
000918 9611      	ADIW R26,1
000919 d002      	RCALL __EEPROMRDB
00091a 2ffe      	MOV  R31,R30
00091b 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
00091c 99e1      	SBIC EECR,EEWE
00091d cffe      	RJMP __EEPROMRDB
00091e 93ff      	PUSH R31
00091f b7ff      	IN   R31,SREG
000920 94f8      	CLI
000921 bbae      	OUT  EEARL,R26
000922 bbbf      	OUT  EEARH,R27
000923 9ae0      	SBI  EECR,EERE
000924 b3ed      	IN   R30,EEDR
000925 bfff      	OUT  SREG,R31
000926 91ff      	POP  R31
000927 9508      	RET
                 
                 __EEPROMWRW:
000928 d007      	RCALL __EEPROMWRB
000929 9611      	ADIW R26,1
00092a 93ef      	PUSH R30
00092b 2fef      	MOV  R30,R31
00092c d003      	RCALL __EEPROMWRB
00092d 91ef      	POP  R30
00092e 9711      	SBIW R26,1
00092f 9508      	RET
                 
                 __EEPROMWRB:
000930 9be1      	SBIS EECR,EEWE
000931 c002      	RJMP __EEPROMWRB1
000932 95a8      	WDR
000933 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
000934 b79f      	IN   R25,SREG
000935 94f8      	CLI
000936 bbae      	OUT  EEARL,R26
000937 bbbf      	OUT  EEARH,R27
000938 9ae0      	SBI  EECR,EERE
000939 b38d      	IN   R24,EEDR
00093a 17e8      	CP   R30,R24
00093b f019      	BREQ __EEPROMWRB0
00093c bbed      	OUT  EEDR,R30
00093d 9ae2      	SBI  EECR,EEMWE
00093e 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
00093f bf9f      	OUT  SREG,R25
000940 9508      	RET
                 
                 __CPW02:
000941 2400      	CLR  R0
000942 160a      	CP   R0,R26
000943 060b      	CPC  R0,R27
000944 9508      	RET
                 
                 __SAVELOCR6:
000945 935a      	ST   -Y,R21
                 __SAVELOCR5:
000946 934a      	ST   -Y,R20
                 __SAVELOCR4:
000947 933a      	ST   -Y,R19
                 __SAVELOCR3:
000948 932a      	ST   -Y,R18
                 __SAVELOCR2:
000949 931a      	ST   -Y,R17
00094a 930a      	ST   -Y,R16
00094b 9508      	RET
                 
                 __LOADLOCR6:
00094c 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00094d 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00094e 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00094f 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000950 8119      	LDD  R17,Y+1
000951 8108      	LD   R16,Y
000952 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :  30 r1 :   5 r2 :   0 r3 :   0 r4 :   5 r5 :   3 r6 :   6 r7 :   4 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:  52 r17:  80 r18:  33 r19:  41 r20:  27 r21:  39 r22:  16 r23:   1 
r24:  20 r25:  11 r26: 247 r27:  79 r28:  19 r29:   1 r30: 660 r31: 150 
x  :  17 y  : 386 z  :  24 
Registers used: 25 out of 35 (71.4%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  15 add   :  23 
adiw  :  27 and   :   8 andi  :  20 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  37 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   5 brmi  :   0 brne  :  67 brpl  :   1 brsh  :  18 brtc  :   0 
brts  :   1 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  : 111 
cbi   :   5 cbr   :   0 clc   :   0 clh   :   0 cli   :   3 cln   :   0 
clr   :  24 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   9 
cp    :  28 cpc   :  19 cpi   :  76 cpse  :   0 dec   :   3 des   :   0 
elpm  :   0 eor   :   1 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 
ijmp  :   0 in    :   8 inc   :   3 jmp   :  55 ld    :  39 ldd   : 199 
ldi   : 218 lds   :  44 lpm   :  23 lsl   :   3 lsr   :  15 mov   :  84 
movw  :  35 mul   :   9 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 
or    :   6 ori   :  18 out   :  20 pop   :  12 push  :  12 rcall :  52 
ret   :  41 reti  :   1 rjmp  :  93 rol   :   1 ror   :   0 sbc   :   1 
sbci  :  11 sbi   :  10 sbic  :   1 sbis  :   1 sbiw  :  25 sbr   :   0 
sbrc  :   0 sbrs  :   0 sec   :   0 seh   :   0 sei   :   1 sen   :   0 
ser   :   0 ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    : 131 std   :  43 sts   :  44 sub   :   7 subi  :  34 
swap  :   0 tst   :   3 wdr   :   2 
Instructions used: 62 out of 117 (53.0%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0012a6   4128    646   4774  131072   3.6%
[.dseg] 0x000100 0x000770      0    624    624    4096  15.2%
[.eseg] 0x000000 0x000002      0      2      2    4096   0.0%

Assembly complete, 0 errors, 9 warnings
