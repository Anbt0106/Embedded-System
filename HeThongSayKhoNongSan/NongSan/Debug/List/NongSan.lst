
AVRASM ver. 2.1.30  E:\Embedded\Embedded-System\HeThongSayKhoNongSan\NongSan\Debug\List\NongSan.asm Sat Dec 21 21:23:13 2024

E:\Embedded\Embedded-System\HeThongSayKhoNongSan\NongSan\Debug\List\NongSan.asm(1090): warning: Register r4 already defined by the .DEF directive
E:\Embedded\Embedded-System\HeThongSayKhoNongSan\NongSan\Debug\List\NongSan.asm(1091): warning: Register r5 already defined by the .DEF directive
E:\Embedded\Embedded-System\HeThongSayKhoNongSan\NongSan\Debug\List\NongSan.asm(1092): warning: Register r7 already defined by the .DEF directive
E:\Embedded\Embedded-System\HeThongSayKhoNongSan\NongSan\Debug\List\NongSan.asm(1093): warning: Register r6 already defined by the .DEF directive
E:\Embedded\Embedded-System\HeThongSayKhoNongSan\NongSan\Debug\List\NongSan.asm(1094): warning: Register r9 already defined by the .DEF directive
E:\Embedded\Embedded-System\HeThongSayKhoNongSan\NongSan\Debug\List\NongSan.asm(1095): warning: Register r8 already defined by the .DEF directive
E:\Embedded\Embedded-System\HeThongSayKhoNongSan\NongSan\Debug\List\NongSan.asm(1096): warning: Register r11 already defined by the .DEF directive
E:\Embedded\Embedded-System\HeThongSayKhoNongSan\NongSan\Debug\List\NongSan.asm(1097): warning: Register r10 already defined by the .DEF directive
E:\Embedded\Embedded-System\HeThongSayKhoNongSan\NongSan\Debug\List\NongSan.asm(1098): warning: Register r13 already defined by the .DEF directive
E:\Embedded\Embedded-System\HeThongSayKhoNongSan\NongSan\Debug\List\NongSan.asm(1099): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _checksum=R4
                 	.DEF _checksum_msb=R5
                 	.DEF _x=R7
                 	.DEF _nhietdo=R6
                 	.DEF _doam=R9
                 	.DEF _nhietdo_naodo=R8
                 	.DEF _nhietdo_naodo2=R11
                 	.DEF _doam_naodo=R10
                 	.DEF _say_xong=R13
                 	.DEF __lcd_x=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0172 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0271 	JMP  _timer1_ovf_isr
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _font5x7:
000046 0705
000047 6020
000048 0000
000049 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
00004a 0000
00004b 5f00
00004c 0000
00004d 0700      	.DB  0x0,0x0,0x0,0x5F,0x0,0x0,0x0,0x7
00004e 0700
00004f 1400
000050 147f
000051 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
000052 2a24
000053 2a7f
000054 2312
000055 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
000056 6264
000057 4936
000058 2255
000059 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
00005a 0305
00005b 0000
00005c 1c00
00005d 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
00005e 0000
00005f 2241
000060 001c
000061 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
000062 2a1c
000063 0808
000064 3e08
000065 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
000066 5000
000067 0030
000068 0800
000069 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
00006a 0808
00006b 3000
00006c 0030
00006d 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
00006e 0810
00006f 0204
000070 513e
000071 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
000072 003e
000073 7f42
000074 0040
000075 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
000076 4951
000077 2146
000078 4541
000079 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
00007a 1418
00007b 7f12
00007c 2710
00007d 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
00007e 3945
00007f 4a3c
000080 4949
000081 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
000082 0971
000083 0305
000084 4936
000085 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
000086 0636
000087 4949
000088 1e29
000089 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
00008a 0036
00008b 0000
00008c 3656
00008d 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
00008e 0800
00008f 2214
000090 1441
000091 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
000092 1414
000093 2241
000094 0814
000095 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
000096 5101
000097 0609
000098 4932
000099 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
00009a 7e3e
00009b 1111
00009c 7e11
00009d 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
00009e 4949
00009f 3e36
0000a0 4141
0000a1 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
0000a2 417f
0000a3 2241
0000a4 7f1c
0000a5 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
0000a6 4149
0000a7 097f
0000a8 0109
0000a9 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
0000aa 4141
0000ab 3251
0000ac 087f
0000ad 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
0000ae 007f
0000af 7f41
0000b0 0041
0000b1 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
0000b2 3f41
0000b3 7f01
0000b4 1408
0000b5 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
0000b6 407f
0000b7 4040
0000b8 7f40
0000b9 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
0000ba 7f02
0000bb 047f
0000bc 1008
0000bd 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
0000be 4141
0000bf 3e41
0000c0 097f
0000c1 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
0000c2 3e06
0000c3 5141
0000c4 5e21
0000c5 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
0000c6 2919
0000c7 4646
0000c8 4949
0000c9 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
0000ca 0101
0000cb 017f
0000cc 3f01
0000cd 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
0000ce 3f40
0000cf 201f
0000d0 2040
0000d1 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
0000d2 1820
0000d3 7f20
0000d4 1463
0000d5 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000d6 0363
0000d7 7804
0000d8 0304
0000d9 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000da 4549
0000db 0043
0000dc 7f00
0000dd 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000de 0402
0000df 1008
0000e0 4120
0000e1 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000e2 0000
0000e3 0204
0000e4 0201
0000e5 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000e6 4040
0000e7 4040
0000e8 0100
0000e9 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000ea 2000
0000eb 5454
0000ec 7854
0000ed 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000ee 4444
0000ef 3838
0000f0 4444
0000f1 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000f2 4438
0000f3 4844
0000f4 387f
0000f5 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000f6 1854
0000f7 7e08
0000f8 0109
0000f9 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000fa 5414
0000fb 3c54
0000fc 087f
0000fd 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000fe 0078
0000ff 7d44
000100 0040
000101 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
000102 3d44
000103 0000
000104 107f
000105 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
000106 4100
000107 407f
000108 7c00
000109 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
00010a 7804
00010b 087c
00010c 0404
00010d 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
00010e 4444
00010f 3844
000110 147c
000111 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
000112 0808
000113 1414
000114 7c18
000115 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
000116 0404
000117 4808
000118 5454
000119 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
00011a 3f04
00011b 4044
00011c 3c20
00011d 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
00011e 7c20
00011f 201c
000120 2040
000121 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
000122 3040
000123 3c40
000124 2844
000125 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
000126 0c44
000127 5050
000128 3c50
000129 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
00012a 4c54
00012b 0044
00012c 3608
00012d 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
00012e 0000
00012f 007f
000130 0000
000131 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
000132 0008
000133 0102
000134 0402
000135 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
000136 4141
000137 7f41      	.DB  0x41,0x41,0x41,0x7F
                 __glcd_mask:
000138 0100
000139 0703
00013a 1f0f
00013b 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
E:\Embedded\Embedded-System\HeThongSayKhoNongSan\NongSan\Debug\List\NongSan.asm(1208): warning: .cseg .db misalignment - padding zero byte
00013c 00ff      	.DB  0xFF
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
00013d 0000
00013e 0000      	.DB  0x0,0x0,0x0,0x0
00013f 001c
000140 1e35      	.DB  0x1C,0x0,0x35,0x1E
000141 0000      	.DB  0x0,0x0
                 
                 _0x3:
000142 0000
000143 0000
000144 0000
000145 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000146 0000      	.DB  0x0,0x0
                 _0x26:
000147 0001
000148 0002
000149 0003
00014a 0004      	.DB  0x1,0x0,0x2,0x0,0x3,0x0,0x4,0x0
00014b 0005
00014c 0006
00014d 0007
00014e 0008      	.DB  0x5,0x0,0x6,0x0,0x7,0x0,0x8,0x0
E:\Embedded\Embedded-System\HeThongSayKhoNongSan\NongSan\Debug\List\NongSan.asm(1222): warning: .cseg .db misalignment - padding zero byte
00014f 0009      	.DB  0x9
                 _0x0:
000150 4554
000151 504d
000152 003a
000153 5548      	.DB  0x54,0x45,0x4D,0x50,0x3A,0x0,0x48,0x55
000154 494d
000155 003a
000156 4153
000157 2059      	.DB  0x4D,0x49,0x3A,0x0,0x53,0x41,0x59,0x20
000158 4f58
000159 474e
00015a 0021      	.DB  0x58,0x4F,0x4E,0x47,0x21,0x0
                 _0x2060003:
00015b c080      	.DB  0x80,0xC0
                 _0x20E0060:
E:\Embedded\Embedded-System\HeThongSayKhoNongSan\NongSan\Debug\List\NongSan.asm(1230): warning: .cseg .db misalignment - padding zero byte
00015c 0001      	.DB  0x1
                 _0x20E0000:
00015d 4e2d
00015e 4e41
00015f 4900
000160 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
E:\Embedded\Embedded-System\HeThongSayKhoNongSan\NongSan\Debug\List\NongSan.asm(1233): warning: .cseg .db misalignment - padding zero byte
000161 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000162 000a      	.DW  0x0A
000163 0004      	.DW  0x04
000164 027a      	.DW  __REG_VARS*2
                 
000165 0011      	.DW  0x11
000166 0527      	.DW  _keypad
000167 028e      	.DW  _0x26*2
                 
000168 000a      	.DW  0x0A
000169 0500      	.DW  _0x6B
00016a 02ac      	.DW  _0x0*2+12
                 
00016b 0002      	.DW  0x02
00016c 0735      	.DW  __base_y_G103
00016d 02b6      	.DW  _0x2060003*2
                 
00016e 0001      	.DW  0x01
00016f 073b      	.DW  __seed_G107
000170 02b8      	.DW  _0x20E0060*2
                 
                 _0xFFFFFFFF:
000171 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000172 94f8      	CLI
000173 27ee      	CLR  R30
000174 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000175 e0f1      	LDI  R31,1
000176 bff5      	OUT  MCUCR,R31
000177 bfe5      	OUT  MCUCR,R30
000178 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
00017a e08d      	LDI  R24,(14-2)+1
00017b e0a2      	LDI  R26,2
00017c 27bb      	CLR  R27
                 __CLEAR_REG:
00017d 93ed      	ST   X+,R30
00017e 958a      	DEC  R24
00017f f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000180 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000181 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000182 e0a0      	LDI  R26,LOW(__SRAM_START)
000183 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000184 93ed      	ST   X+,R30
000185 9701      	SBIW R24,1
000186 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000187 ece4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000188 e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000189 9185      	LPM  R24,Z+
00018a 9195      	LPM  R25,Z+
00018b 9700      	SBIW R24,0
00018c f061      	BREQ __GLOBAL_INI_END
00018d 91a5      	LPM  R26,Z+
00018e 91b5      	LPM  R27,Z+
00018f 9005      	LPM  R0,Z+
000190 9015      	LPM  R1,Z+
000191 01bf      	MOVW R22,R30
000192 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000193 9005      	LPM  R0,Z+
000194 920d      	ST   X+,R0
000195 9701      	SBIW R24,1
000196 f7e1      	BRNE __GLOBAL_INI_LOOP
000197 01fb      	MOVW R30,R22
000198 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
000199 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00019a efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00019b bfed      	OUT  SPL,R30
00019c e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00019d bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00019e e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00019f e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0001a0 940c 02ce 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <glcd.h>
                 ;#include <font5x7.h>
                 ;#include <dht11.c>
                 ;#include <io.h>
                 ;#include <alcd.h>
                 ;#include <delay.h>
                 ;
                 ;#define PIN_DHT PINB.7
                 ;#define PORT_DHT PORTB.7
                 ;#define DDR_DHT DDRB.7
                 ;
                 ;int checksum = 0;
                 ;
                 ;char dht11(unsigned char *nhietdo, unsigned char *doam) {
                 ; 0000 0006 char dht11(unsigned char *nhietdo, unsigned char *doam) {
                 
                 	.CSEG
                 _dht11:
                 ; .FSTART _dht11
                 ;    int i, j;
                 ;    int buffer[5] = {0, 0, 0, 0, 0};
                 ;    // buoc 1
                 ;    DDR_DHT = 1;
0001a2 93ba      	ST   -Y,R27
0001a3 93aa      	ST   -Y,R26
0001a4 972a      	SBIW R28,10
0001a5 e08a      	LDI  R24,10
0001a6 e0a0      	LDI  R26,LOW(0)
0001a7 e0b0      	LDI  R27,HIGH(0)
0001a8 e8e4      	LDI  R30,LOW(_0x3*2)
0001a9 e0f2      	LDI  R31,HIGH(_0x3*2)
0001aa 940e 09f2 	CALL __INITLOCB
0001ac 940e 09e6 	CALL __SAVELOCR4
                 ;	*nhietdo -> Y+16
                 ;	*doam -> Y+14
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ;	buffer -> Y+4
0001ae 9abf      	SBI  0x17,7
                 ;    PORT_DHT = 1;
0001af 9ac7      	SBI  0x18,7
                 ;    delay_us(60);
                +
0001b0 ea80     +LDI R24 , LOW ( 160 )
                +__DELAY_USB_LOOP :
0001b1 958a     +DEC R24
0001b2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 160
                 ;    // buoc 2
                 ;    PORT_DHT = 0;
0001b3 98c7      	CBI  0x18,7
                 ;    delay_ms(25);
0001b4 e1a9      	LDI  R26,LOW(25)
0001b5 e0b0      	LDI  R27,0
0001b6 940e 095c 	CALL _delay_ms
                 ;    // buoc 3
                 ;    DDR_DHT = 0;
0001b8 98bf      	CBI  0x17,7
                 ;    PORT_DHT = 1;
0001b9 9ac7      	SBI  0x18,7
                 ;
                 ;    // check pin
                 ;    delay_us(60);
                +
0001ba ea80     +LDI R24 , LOW ( 160 )
                +__DELAY_USB_LOOP :
0001bb 958a     +DEC R24
0001bc f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 160
                 ;    if (PIN_DHT) return 0;
0001bd 9bb7      	SBIS 0x16,7
0001be c002      	RJMP _0xE
0001bf e0e0      	LDI  R30,LOW(0)
0001c0 c05c      	RJMP _0x212000B
                 ;    else while (!(PIN_DHT));
                 _0xE:
                 _0x10:
0001c1 9bb7      	SBIS 0x16,7
0001c2 cffe      	RJMP _0x10
                 ;    delay_us(60);
                +
0001c3 ea80     +LDI R24 , LOW ( 160 )
                +__DELAY_USB_LOOP :
0001c4 958a     +DEC R24
0001c5 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 160
                 ;    if (!PIN_DHT) return 0;
0001c6 99b7      	SBIC 0x16,7
0001c7 c002      	RJMP _0x13
0001c8 e0e0      	LDI  R30,LOW(0)
0001c9 c053      	RJMP _0x212000B
                 ;    else while ((PIN_DHT));
                 _0x13:
                 _0x15:
0001ca 99b7      	SBIC 0x16,7
0001cb cffe      	RJMP _0x15
                 ;
                 ;
                 ;    for (i = 0; i < 5; ++i) {
                +
0001cc e000     +LDI R16 , LOW ( 0 )
0001cd e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x19:
                +
0001ce 3005     +CPI R16 , LOW ( 5 )
0001cf e0e0     +LDI R30 , HIGH ( 5 )
0001d0 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
0001d1 f564      	BRGE _0x1A
                 ;        for (j = 0; j < 8; ++j) {
                +
0001d2 e020     +LDI R18 , LOW ( 0 )
0001d3 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x1C:
                +
0001d4 3028     +CPI R18 , LOW ( 8 )
0001d5 e0e0     +LDI R30 , HIGH ( 8 )
0001d6 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0001d7 f51c      	BRGE _0x1D
                 ;            while (!(PIN_DHT));
                 _0x1E:
0001d8 9bb7      	SBIS 0x16,7
0001d9 cffe      	RJMP _0x1E
                 ;            delay_us(50);
                +
0001da e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0001db 958a     +DEC R24
0001dc f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
                 ;            if (PIN_DHT) {
0001dd 9bb7      	SBIS 0x16,7
0001de c019      	RJMP _0x21
                 ;                buffer[i] |= (1 << (7 - j));
0001df 01f8      	MOVW R30,R16
0001e0 01de      	MOVW R26,R28
0001e1 9614      	ADIW R26,4
0001e2 0fee      	LSL  R30
0001e3 1fff      	ROL  R31
0001e4 0fea      	ADD  R30,R26
0001e5 1ffb      	ADC  R31,R27
0001e6 01cf      	MOVW R24,R30
0001e7 8160      	LD   R22,Z
0001e8 8171      	LDD  R23,Z+1
0001e9 e0e7      	LDI  R30,LOW(7)
0001ea e0f0      	LDI  R31,HIGH(7)
0001eb 1be2      	SUB  R30,R18
0001ec 0bf3      	SBC  R31,R19
0001ed e0a1      	LDI  R26,LOW(1)
0001ee e0b0      	LDI  R27,HIGH(1)
0001ef 940e 097a 	CALL __LSLW12
0001f1 2be6      	OR   R30,R22
0001f2 2bf7      	OR   R31,R23
0001f3 01dc      	MOVW R26,R24
0001f4 93ed      	ST   X+,R30
0001f5 93fc      	ST   X,R31
                 ;                while ((PIN_DHT));
                 _0x22:
0001f6 99b7      	SBIC 0x16,7
0001f7 cffe      	RJMP _0x22
                 ;            }
                 ;        }
                 _0x21:
                +
0001f8 5f2f     +SUBI R18 , LOW ( - 1 )
0001f9 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0001fa cfd9      	RJMP _0x1C
                 _0x1D:
                 ;    }
                +
0001fb 5f0f     +SUBI R16 , LOW ( - 1 )
0001fc 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0001fd cfd0      	RJMP _0x19
                 _0x1A:
                 ;    checksum = buffer[0] + buffer[1] + buffer[2] + buffer[3];
0001fe 81ee      	LDD  R30,Y+6
0001ff 81ff      	LDD  R31,Y+6+1
000200 81ac      	LDD  R26,Y+4
000201 81bd      	LDD  R27,Y+4+1
000202 0fea      	ADD  R30,R26
000203 1ffb      	ADC  R31,R27
000204 85a8      	LDD  R26,Y+8
000205 85b9      	LDD  R27,Y+8+1
000206 0fea      	ADD  R30,R26
000207 1ffb      	ADC  R31,R27
000208 85aa      	LDD  R26,Y+10
000209 85bb      	LDD  R27,Y+10+1
00020a 0fea      	ADD  R30,R26
00020b 1ffb      	ADC  R31,R27
00020c 012f      	MOVW R4,R30
                 ;
                 ;    if ((checksum) != buffer[4]) return 0;
00020d 85ec      	LDD  R30,Y+12
00020e 85fd      	LDD  R31,Y+12+1
00020f 15e4      	CP   R30,R4
000210 05f5      	CPC  R31,R5
000211 f011      	BREQ _0x25
000212 e0e0      	LDI  R30,LOW(0)
000213 c009      	RJMP _0x212000B
                 ;
                 ;    *nhietdo = buffer[2];
                 _0x25:
000214 85e8      	LDD  R30,Y+8
000215 89a8      	LDD  R26,Y+16
000216 89b9      	LDD  R27,Y+16+1
000217 93ec      	ST   X,R30
                 ;    *doam = buffer[0];
000218 81ec      	LDD  R30,Y+4
000219 85ae      	LDD  R26,Y+14
00021a 85bf      	LDD  R27,Y+14+1
00021b 93ec      	ST   X,R30
                 ;    return 1;
00021c e0e1      	LDI  R30,LOW(1)
                 _0x212000B:
00021d 940e 09ed 	CALL __LOADLOCR4
00021f 9662      	ADIW R28,18
000220 9508      	RET
                 ;}
                 ; .FEND
                 ;#include <hardware.c>
                 ;#include <delay.h>
                 ;#include <glcd.h>
                 ;#include <font5x7.h>
                 ;#include <alcd.h>
                 ;
                 ;int keypad[3][3] = {1,2,3,4,5,6,7,8,9};
                 
                 	.DSEG
                 ;
                 ;void init_register() {
                 ; 0000 0007 void init_register() {
                 
                 	.CSEG
                 _init_register:
                 ; .FSTART _init_register
                 ;    // ban phim ma tran
                 ;    DDRF = 0b11101010;
000221 eeea      	LDI  R30,LOW(234)
000222 93e0 0061 	STS  97,R30
                 ;    // 2 led
                 ;    DDRD.4 = 1;
000224 9a8c      	SBI  0x11,4
                 ;    DDRD.5 = 1;
000225 9a8d      	SBI  0x11,5
                 ;    // lcd
                 ;    DDRD.7 = 1;
000226 9a8f      	SBI  0x11,7
                 ;    DDRB.4 = 1;
000227 9abc      	SBI  0x17,4
                 ;    // BT 1, 2
                 ;    PORTB.2 = 1;
000228 9ac2      	SBI  0x18,2
                 ;    PORTB.3 = 1;
000229 9ac3      	SBI  0x18,3
                 ;    PORTD.7 = 1;
00022a 9a97      	SBI  0x12,7
                 ;    // servo
                 ;    DDRC.7 = 1;
00022b 9aa7      	SBI  0x14,7
                 ;}
00022c 9508      	RET
                 ; .FEND
                 ;
                 ;int read() {
                 ;    char a, i, j;
                 ;    for(j = 0; j < 3; j++ ){
                 ;	a -> R17
                 ;	i -> R16
                 ;	j -> R19
                 ;        if (j == 0) PORTF = 0b11111101;
                 ;        if (j == 1) PORTF = 0b11110111;
                 ;        if (j == 2) PORTF = 0b11011111;
                 ;        for(i = 0; i < 3; i++){
                 ;            if (i == 0){
                 ;                a = PINF&0x04;
                 ;                if(a != 0x04) {
                 ;                    init_register();
                 ;                    return keypad[i][j];
                 ;                }
                 ;            }
                 ;            if (i == 1){
                 ;                a = PINF&0x10;
                 ;                if (a != 0x10) {
                 ;                    init_register();
                 ;                    return keypad[i][j];
                 ;                }
                 ;            }
                 ;            if (i == 2){
                 ;                a = PINF&0x01;
                 ;                if (a != 0x01) {
                 ;                    init_register();
                 ;                    return keypad[i][j];
                 ;                }
                 ;            }
                 ;        }
                 ;    }
                 ;    init_register();
                 ;    return -1;
                 ;}
                 ;
                 ;
                 ;void init_glcd(int bias, int vlcd) {
                 _init_glcd:
                 ; .FSTART _init_glcd
                 ;    GLCDINIT_t glcd_init_data;
                 ;    glcd_init_data.font=font5x7;
00022d 93ba      	ST   -Y,R27
00022e 93aa      	ST   -Y,R26
00022f 9728      	SBIW R28,8
                 ;	bias -> Y+10
                 ;	vlcd -> Y+8
                 ;	glcd_init_data -> Y+0
000230 e8ec      	LDI  R30,LOW(_font5x7*2)
000231 e0f0      	LDI  R31,HIGH(_font5x7*2)
000232 83e8      	ST   Y,R30
000233 83f9      	STD  Y+1,R31
                 ;    glcd_init_data.temp_coef=140;
000234 81ee      	LDD  R30,Y+6
000235 7fec      	ANDI R30,LOW(0xFC)
000236 83ee      	STD  Y+6,R30
                 ;    glcd_init_data.bias=bias;
000237 85ea      	LDD  R30,Y+10
000238 70e7      	ANDI R30,LOW(0x7)
000239 0fee      	LSL  R30
00023a 0fee      	LSL  R30
00023b 2e0e      	MOV  R0,R30
00023c 81ee      	LDD  R30,Y+6
00023d 7ee3      	ANDI R30,LOW(0xE3)
00023e 29e0      	OR   R30,R0
00023f 83ee      	STD  Y+6,R30
                 ;    glcd_init_data.vlcd=vlcd;
000240 85e8      	LDD  R30,Y+8
000241 77ef      	ANDI R30,0x7F
000242 2e0e      	MOV  R0,R30
000243 81ef      	LDD  R30,Y+7
000244 78e0      	ANDI R30,LOW(0x80)
000245 29e0      	OR   R30,R0
000246 83ef      	STD  Y+7,R30
                 ;    glcd_init(&glcd_init_data);
000247 01de      	MOVW R26,R28
000248 d13a      	RCALL _glcd_init
                 ;}
000249 940c 0700 	JMP  _0x2120008
                 ; .FEND
                 ;
                 ;void init_lcd() {
                 _init_lcd:
                 ; .FSTART _init_lcd
                 ;    lcd_init(16);
00024b e1a0      	LDI  R26,LOW(16)
00024c 940e 0812 	CALL _lcd_init
                 ;    lcd_clear();
00024e 940e 07d9 	CALL _lcd_clear
                 ;
                 ;}
000250 9508      	RET
                 ; .FEND
                 ;
                 ;void adjustSpeed(int speed) {
                 _adjustSpeed:
                 ; .FSTART _adjustSpeed
                 ;    OCR0 = 255 - speed;
000251 93ba      	ST   -Y,R27
000252 93aa      	ST   -Y,R26
                 ;	speed -> Y+0
000253 81a8      	LD   R26,Y
000254 efef      	LDI  R30,LOW(255)
000255 1bea      	SUB  R30,R26
000256 bfe1      	OUT  0x31,R30
                 ;}
000257 9622      	ADIW R28,2
000258 9508      	RET
                 ; .FEND
                 ;
                 ;void quay_DC() {
                 ;    adjustSpeed(120);
                 ;}
                 ;
                 ;void dung_DC() {
                 ;    adjustSpeed(0);
                 ;}
                 ;
                 ;void init_timer() {
                 _init_timer:
                 ; .FSTART _init_timer
                 ;    // khoi tao timer 0 cho dong co
                 ;    ASSR=0<<AS0;
000259 e0e0      	LDI  R30,LOW(0)
00025a bfe0      	OUT  0x30,R30
                 ;    TCCR0=(1<<WGM00) | (1<<COM01) | (1<<COM00) | (0<<WGM01) | (1<<CS02) | (0<<CS01) | (0<<CS00);
00025b e7e4      	LDI  R30,LOW(116)
00025c bfe3      	OUT  0x33,R30
                 ;    TCNT0=0x00;
00025d e0e0      	LDI  R30,LOW(0)
00025e bfe2      	OUT  0x32,R30
                 ;    adjustSpeed(0);
00025f e0a0      	LDI  R26,LOW(0)
000260 e0b0      	LDI  R27,0
000261 dfef      	RCALL _adjustSpeed
                 ;
                 ;    // Timer 1 (0.1 ms) cho den va servo
                 ;    TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<COM1C1) | (0<<COM1C0) | (0<<WGM11) | (0<<WGM10);
000262 e0e0      	LDI  R30,LOW(0)
000263 bdef      	OUT  0x2F,R30
                 ;    TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (1<<CS10);
000264 e0e1      	LDI  R30,LOW(1)
000265 bdee      	OUT  0x2E,R30
                 ;    TCNT1H=0xFC;
000266 efec      	LDI  R30,LOW(252)
000267 bded      	OUT  0x2D,R30
                 ;    TCNT1L=0xE0;
000268 eee0      	LDI  R30,LOW(224)
000269 bdec      	OUT  0x2C,R30
                 ;    TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (1<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
00026a e0e4      	LDI  R30,LOW(4)
00026b bfe7      	OUT  0x37,R30
                 ;    ETIMSK=(0<<TICIE3) | (0<<OCIE3A) | (0<<OCIE3B) | (0<<TOIE3) | (0<<OCIE3C) | (0<<OCIE1C);
00026c e0e0      	LDI  R30,LOW(0)
00026d 93e0 007d 	STS  125,R30
                 ;#asm("sei")
00026f 9478      	sei
                 ;}
000270 9508      	RET
                 ; .FEND
                 ;
                 ;char x = 0;
                 ;unsigned char nhietdo = 0, doam = 0;
                 ;/*
                 ; nhietdo_naodo, doam_naodo: Nhiet do, do am bat dau say kho
                 ; nhietdo_naodo2: Nhiet do ket thuc say kho
                 ; */
                 ;unsigned char nhietdo_naodo = 28, nhietdo_naodo2 = 30, doam_naodo = 53;
                 ;bool say_xong = false;
                 ;int counter = 0;
                 ;
                 ;// Interrupt cua timer1
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
                 ; 0000 0015 {
                 _timer1_ovf_isr:
                 ; .FSTART _timer1_ovf_isr
000271 93aa      	ST   -Y,R26
000272 93ba      	ST   -Y,R27
000273 93ea      	ST   -Y,R30
000274 93fa      	ST   -Y,R31
000275 b7ef      	IN   R30,SREG
000276 93ea      	ST   -Y,R30
                 ; 0000 0016     // Reinitialize Timer1 value
                 ; 0000 0017     TCNT1H=0xE0C0 >> 8;
000277 eee0      	LDI  R30,LOW(224)
000278 bded      	OUT  0x2D,R30
                 ; 0000 0018     TCNT1L=0xE0C0 & 0xff;
000279 ece0      	LDI  R30,LOW(192)
00027a bdec      	OUT  0x2C,R30
                 ; 0000 0019     // Place your code here
                 ; 0000 001A     if (say_xong) {
00027b 20dd      	TST  R13
00027c f119      	BREQ _0x46
                 ; 0000 001B         if (counter == 2000)
00027d 91a0 0539 	LDS  R26,_counter
00027f 91b0 053a 	LDS  R27,_counter+1
000281 3da0      	CPI  R26,LOW(0x7D0)
000282 e0e7      	LDI  R30,HIGH(0x7D0)
000283 07be      	CPC  R27,R30
000284 f429      	BRNE _0x47
                 ; 0000 001C             counter  = 0;
000285 e0e0      	LDI  R30,LOW(0)
000286 93e0 0539 	STS  _counter,R30
000288 93e0 053a 	STS  _counter+1,R30
                 ; 0000 001D 
                 ; 0000 001E         if (counter == 0) {
                 _0x47:
00028a 91e0 0539 	LDS  R30,_counter
00028c 91f0 053a 	LDS  R31,_counter+1
00028e 9730      	SBIW R30,0
00028f f411      	BRNE _0x48
                 ; 0000 001F             PORTD.4 = 0;
000290 9894      	CBI  0x12,4
                 ; 0000 0020             PORTD.5 = 1;
000291 9a95      	SBI  0x12,5
                 ; 0000 0021         }
                 ; 0000 0022 
                 ; 0000 0023         if (counter == 1000) {
                 _0x48:
000292 91a0 0539 	LDS  R26,_counter
000294 91b0 053a 	LDS  R27,_counter+1
000296 3ea8      	CPI  R26,LOW(0x3E8)
000297 e0e3      	LDI  R30,HIGH(0x3E8)
000298 07be      	CPC  R27,R30
000299 f411      	BRNE _0x4D
                 ; 0000 0024             PORTD.5 = 0;
00029a 9895      	CBI  0x12,5
                 ; 0000 0025             PORTD.4 = 1;
00029b 9a94      	SBI  0x12,4
                 ; 0000 0026         }
                 ; 0000 0027         counter++;
                 _0x4D:
00029c e3a9      	LDI  R26,LOW(_counter)
00029d e0b5      	LDI  R27,HIGH(_counter)
00029e 940e 08c3 	CALL SUBOPT_0x0
                 ; 0000 0028     }
                 ; 0000 0029 }
                 _0x46:
0002a0 91e9      	LD   R30,Y+
0002a1 bfef      	OUT  SREG,R30
0002a2 91f9      	LD   R31,Y+
0002a3 91e9      	LD   R30,Y+
0002a4 91b9      	LD   R27,Y+
0002a5 91a9      	LD   R26,Y+
0002a6 9518      	RETI
                 ; .FEND
                 ;
                 ;void hien_thi() {
                 ; 0000 002B void hien_thi() {
                 _hien_thi:
                 ; .FSTART _hien_thi
                 ; 0000 002C     x = dht11(&nhietdo, &doam);
0002a7 e0e6      	LDI  R30,LOW(6)
0002a8 e0f0      	LDI  R31,HIGH(6)
0002a9 93fa      	ST   -Y,R31
0002aa 93ea      	ST   -Y,R30
0002ab e0a9      	LDI  R26,LOW(9)
0002ac e0b0      	LDI  R27,HIGH(9)
0002ad def4      	RCALL _dht11
0002ae 2e7e      	MOV  R7,R30
                 ; 0000 002D 
                 ; 0000 002E     lcd_gotoxy(0, 0);
0002af e0e0      	LDI  R30,LOW(0)
0002b0 93ea      	ST   -Y,R30
0002b1 e0a0      	LDI  R26,LOW(0)
0002b2 940e 07cb 	CALL _lcd_gotoxy
                 ; 0000 002F     lcd_putsf("TEMP:");
                +
0002b4 eaa0     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
0002b5 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW2FN _0x0,0
0002b6 940e 0800 	CALL _lcd_putsf
                 ; 0000 0030     lcd_putchar(nhietdo / 10 + 48);
0002b8 2da6      	MOV  R26,R6
0002b9 940e 08c9 	CALL SUBOPT_0x1
                 ; 0000 0031     lcd_putchar(nhietdo % 10 + 48);
0002bb 2da6      	MOV  R26,R6
0002bc 940e 08d2 	CALL SUBOPT_0x2
                 ; 0000 0032     lcd_gotoxy(0, 1);
0002be e0e0      	LDI  R30,LOW(0)
0002bf 93ea      	ST   -Y,R30
0002c0 e0a1      	LDI  R26,LOW(1)
0002c1 940e 07cb 	CALL _lcd_gotoxy
                 ; 0000 0033     lcd_putsf("HUMI:");
                +
0002c3 eaa6     +LDI R26 , LOW ( 2 * _0x0 + ( 6 ) )
0002c4 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 6 ) )
                 	__POINTW2FN _0x0,6
0002c5 940e 0800 	CALL _lcd_putsf
                 ; 0000 0034     lcd_putchar(doam / 10 + 48);
0002c7 2da9      	MOV  R26,R9
0002c8 940e 08c9 	CALL SUBOPT_0x1
                 ; 0000 0035     lcd_putchar(doam % 10 + 48);
0002ca 2da9      	MOV  R26,R9
0002cb 940e 08d2 	CALL SUBOPT_0x2
                 ; 0000 0036 }
0002cd 9508      	RET
                 ; .FEND
                 ;
                 ; void main(void)
                 ; 0000 0039 {
                 _main:
                 ; .FSTART _main
                 ; 0000 003A     init_glcd(4, 66);
0002ce e0e4      	LDI  R30,LOW(4)
0002cf e0f0      	LDI  R31,HIGH(4)
0002d0 93fa      	ST   -Y,R31
0002d1 93ea      	ST   -Y,R30
0002d2 e4a2      	LDI  R26,LOW(66)
0002d3 e0b0      	LDI  R27,0
0002d4 df58      	RCALL _init_glcd
                 ; 0000 003B     init_lcd();
0002d5 df75      	RCALL _init_lcd
                 ; 0000 003C     init_register();
0002d6 df4a      	RCALL _init_register
                 ; 0000 003D 
                 ; 0000 003E     // some port
                 ; 0000 003F     DDRB.4 = 1;
0002d7 9abc      	SBI  0x17,4
                 ; 0000 0040     DDRD.7 = 1;
0002d8 9a8f      	SBI  0x11,7
                 ; 0000 0041     DDRD.4 = 1;
0002d9 9a8c      	SBI  0x11,4
                 ; 0000 0042     DDRD.5 = 1;
0002da 9a8d      	SBI  0x11,5
                 ; 0000 0043 
                 ; 0000 0044     //pull up BT1
                 ; 0000 0045     DDRB.2 = 0;
0002db 98ba      	CBI  0x17,2
                 ; 0000 0046     PORTB.2 = 1;
0002dc 9ac2      	SBI  0x18,2
                 ; 0000 0047     //pull up BT2
                 ; 0000 0048     DDRB.3 = 0;
0002dd 98bb      	CBI  0x17,3
                 ; 0000 0049     PORTB.3 = 1;
0002de 9ac3      	SBI  0x18,3
                 ; 0000 004A 
                 ; 0000 004B     init_timer();
0002df df79      	RCALL _init_timer
                 ; 0000 004C     while (1)
                 _0x62:
                 ; 0000 004D     {
                 ; 0000 004E         hien_thi();
0002e0 dfc6      	RCALL _hien_thi
                 ; 0000 004F         if (nhietdo == nhietdo_naodo && doam == doam_naodo)
0002e1 1486      	CP   R8,R6
0002e2 f411      	BRNE _0x66
0002e3 14a9      	CP   R10,R9
0002e4 f009      	BREQ _0x67
                 _0x66:
0002e5 c003      	RJMP _0x65
                 _0x67:
                 ; 0000 0050             adjustSpeed(255);
0002e6 efaf      	LDI  R26,LOW(255)
0002e7 e0b0      	LDI  R27,0
0002e8 df68      	RCALL _adjustSpeed
                 ; 0000 0051         // OCR0 = 0 tuong duong speed 255 (nghia la dang say kho)
                 ; 0000 0052         if (OCR0 == 0 && nhietdo == nhietdo_naodo2) {
                 _0x65:
0002e9 b7e1      	IN   R30,0x31
0002ea 30e0      	CPI  R30,0
0002eb f411      	BRNE _0x69
0002ec 14b6      	CP   R11,R6
0002ed f009      	BREQ _0x6A
                 _0x69:
0002ee c00d      	RJMP _0x68
                 _0x6A:
                 ; 0000 0053             adjustSpeed(0);
0002ef e0a0      	LDI  R26,LOW(0)
0002f0 e0b0      	LDI  R27,0
0002f1 df5f      	RCALL _adjustSpeed
                 ; 0000 0054             glcd_outtextxy(20, 20, "SAY XONG!");
0002f2 e1e4      	LDI  R30,LOW(20)
0002f3 93ea      	ST   -Y,R30
0002f4 93ea      	ST   -Y,R30
                +
0002f5 e0a0     +LDI R26 , LOW ( _0x6B + ( 0 ) )
0002f6 e0b5     +LDI R27 , HIGH ( _0x6B + ( 0 ) )
                 	__POINTW2MN _0x6B,0
0002f7 940e 0778 	CALL _glcd_outtextxy
                 ; 0000 0055             say_xong = true;
0002f9 e0e1      	LDI  R30,LOW(1)
0002fa 2ede      	MOV  R13,R30
                 ; 0000 0056             while(1){};
                 _0x6C:
0002fb cfff      	RJMP _0x6C
                 ; 0000 0057         }
                 ; 0000 0058         delay_ms(250);
                 _0x68:
0002fc efaa      	LDI  R26,LOW(250)
0002fd e0b0      	LDI  R27,0
0002fe 940e 095c 	CALL _delay_ms
                 ; 0000 0059     }
000300 cfdf      	RJMP _0x62
                 ; 0000 005A }
                 _0x6F:
000301 cfff      	RJMP _0x6F
                 ; .FEND
                 
                 	.DSEG
                 _0x6B:
000500           	.BYTE 0xA
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _pcd8544_delay_G100:
                 ; .FSTART _pcd8544_delay_G100
000302 9508      	RET
                 ; .FEND
                 _pcd8544_wrbus_G100:
                 ; .FSTART _pcd8544_wrbus_G100
000303 93aa      	ST   -Y,R26
000304 931a      	ST   -Y,R17
000305 91e0 0065 	LDS  R30,101
000307 7eef      	ANDI R30,0xEF
000308 93e0 0065 	STS  101,R30
00030a e018      	LDI  R17,LOW(8)
                 _0x2000004:
00030b dff6      	RCALL _pcd8544_delay_G100
00030c 81e9      	LDD  R30,Y+1
00030d 78e0      	ANDI R30,LOW(0x80)
00030e f021      	BREQ _0x2000006
00030f 91e0 0065 	LDS  R30,101
000311 60e2      	ORI  R30,2
000312 c003      	RJMP _0x20000A0
                 _0x2000006:
000313 91e0 0065 	LDS  R30,101
000315 7fed      	ANDI R30,0xFD
                 _0x20000A0:
000316 93e0 0065 	STS  101,R30
000318 81e9      	LDD  R30,Y+1
000319 0fee      	LSL  R30
00031a 83e9      	STD  Y+1,R30
00031b dfe6      	RCALL _pcd8544_delay_G100
00031c 91e0 0065 	LDS  R30,101
00031e 60e4      	ORI  R30,4
00031f 93e0 0065 	STS  101,R30
000321 dfe0      	RCALL _pcd8544_delay_G100
000322 91e0 0065 	LDS  R30,101
000324 7feb      	ANDI R30,0xFB
000325 93e0 0065 	STS  101,R30
000327 5011      	SUBI R17,LOW(1)
000328 f711      	BRNE _0x2000004
000329 91e0 0065 	LDS  R30,101
00032b 61e0      	ORI  R30,0x10
00032c 93e0 0065 	STS  101,R30
00032e 8118      	LDD  R17,Y+0
00032f 940c 085b 	JMP  _0x2120003
                 ; .FEND
                 _pcd8544_wrcmd:
                 ; .FSTART _pcd8544_wrcmd
000331 93aa      	ST   -Y,R26
000332 91e0 0065 	LDS  R30,101
000334 7fee      	ANDI R30,0xFE
000335 93e0 0065 	STS  101,R30
000337 81a8      	LD   R26,Y
000338 dfca      	RCALL _pcd8544_wrbus_G100
000339 940c 0840 	JMP  _0x2120005
                 ; .FEND
                 _pcd8544_wrdata_G100:
                 ; .FSTART _pcd8544_wrdata_G100
00033b 93aa      	ST   -Y,R26
00033c 91e0 0065 	LDS  R30,101
00033e 60e1      	ORI  R30,1
00033f 93e0 0065 	STS  101,R30
000341 81a8      	LD   R26,Y
000342 dfc0      	RCALL _pcd8544_wrbus_G100
000343 940c 0840 	JMP  _0x2120005
                 ; .FEND
                 _pcd8544_setaddr_G100:
                 ; .FSTART _pcd8544_setaddr_G100
000345 93aa      	ST   -Y,R26
000346 931a      	ST   -Y,R17
000347 81e9      	LDD  R30,Y+1
000348 95e6      	LSR  R30
000349 95e6      	LSR  R30
00034a 95e6      	LSR  R30
00034b 2f1e      	MOV  R17,R30
00034c e5e4      	LDI  R30,LOW(84)
00034d 9fe1      	MUL  R30,R17
00034e 01f0      	MOVW R30,R0
00034f 01df      	MOVW R26,R30
000350 81ea      	LDD  R30,Y+2
000351 e0f0      	LDI  R31,0
000352 0fea      	ADD  R30,R26
000353 1ffb      	ADC  R31,R27
000354 93e0 053b 	STS  _gfx_addr_G100,R30
000356 93f0 053c 	STS  _gfx_addr_G100+1,R31
000358 2fe1      	MOV  R30,R17
000359 8118      	LDD  R17,Y+0
00035a 940c 08a2 	JMP  _0x2120002
                 ; .FEND
                 _pcd8544_gotoxy:
                 ; .FSTART _pcd8544_gotoxy
00035c 93aa      	ST   -Y,R26
00035d 81e9      	LDD  R30,Y+1
00035e 68e0      	ORI  R30,0x80
00035f 2fae      	MOV  R26,R30
000360 dfd0      	RCALL _pcd8544_wrcmd
000361 81e9      	LDD  R30,Y+1
000362 93ea      	ST   -Y,R30
000363 81a9      	LDD  R26,Y+1
000364 dfe0      	RCALL _pcd8544_setaddr_G100
000365 64e0      	ORI  R30,0x40
000366 2fae      	MOV  R26,R30
000367 dfc9      	RCALL _pcd8544_wrcmd
000368 940c 085b 	JMP  _0x2120003
                 ; .FEND
                 _pcd8544_rdbyte:
                 ; .FSTART _pcd8544_rdbyte
00036a 93aa      	ST   -Y,R26
00036b 81e9      	LDD  R30,Y+1
00036c 93ea      	ST   -Y,R30
00036d 81a9      	LDD  R26,Y+1
00036e dfed      	RCALL _pcd8544_gotoxy
00036f 91e0 053b 	LDS  R30,_gfx_addr_G100
000371 91f0 053c 	LDS  R31,_gfx_addr_G100+1
000373 5ce3      	SUBI R30,LOW(-_gfx_buffer_G100)
000374 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G100)
000375 81e0      	LD   R30,Z
000376 940c 085b 	JMP  _0x2120003
                 ; .FEND
                 _pcd8544_wrbyte:
                 ; .FSTART _pcd8544_wrbyte
000378 93aa      	ST   -Y,R26
000379 940e 08db 	CALL SUBOPT_0x3
00037b 9731      	SBIW R30,1
00037c 5ce3      	SUBI R30,LOW(-_gfx_buffer_G100)
00037d 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G100)
00037e 81a8      	LD   R26,Y
00037f 83a0      	STD  Z+0,R26
000380 dfba      	RCALL _pcd8544_wrdata_G100
000381 940c 0840 	JMP  _0x2120005
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
000383 93ba      	ST   -Y,R27
000384 93aa      	ST   -Y,R26
000385 940e 09e6 	CALL __SAVELOCR4
000387 91e0 0064 	LDS  R30,100
000389 61e0      	ORI  R30,0x10
00038a 940e 08de 	CALL SUBOPT_0x4
00038c 61e0      	ORI  R30,0x10
00038d 93e0 0065 	STS  101,R30
00038f 91e0 0064 	LDS  R30,100
000391 60e4      	ORI  R30,4
000392 940e 08de 	CALL SUBOPT_0x4
000394 7feb      	ANDI R30,0xFB
000395 93e0 0065 	STS  101,R30
000397 91e0 0064 	LDS  R30,100
000399 60e2      	ORI  R30,2
00039a 93e0 0064 	STS  100,R30
00039c 91e0 0064 	LDS  R30,100
00039e 60e1      	ORI  R30,1
00039f 93e0 0064 	STS  100,R30
0003a1 91e0 0064 	LDS  R30,100
0003a3 60e8      	ORI  R30,8
0003a4 940e 08de 	CALL SUBOPT_0x4
0003a6 7fe7      	ANDI R30,0XF7
0003a7 93e0 0065 	STS  101,R30
0003a9 e0aa      	LDI  R26,LOW(10)
0003aa e0b0      	LDI  R27,0
0003ab 940e 095c 	CALL _delay_ms
0003ad 91e0 0065 	LDS  R30,101
0003af 60e8      	ORI  R30,8
0003b0 93e0 0065 	STS  101,R30
0003b2 81ec      	LDD  R30,Y+4
0003b3 81fd      	LDD  R31,Y+4+1
0003b4 9730      	SBIW R30,0
0003b5 f121      	BREQ _0x2000008
0003b6 81e6      	LDD  R30,Z+6
0003b7 70e3      	ANDI R30,LOW(0x3)
0003b8 2f1e      	MOV  R17,R30
0003b9 81ec      	LDD  R30,Y+4
0003ba 81fd      	LDD  R31,Y+4+1
0003bb 81e6      	LDD  R30,Z+6
0003bc 95e6      	LSR  R30
0003bd 95e6      	LSR  R30
0003be 70e7      	ANDI R30,LOW(0x7)
0003bf 2f0e      	MOV  R16,R30
0003c0 81ec      	LDD  R30,Y+4
0003c1 81fd      	LDD  R31,Y+4+1
0003c2 81e7      	LDD  R30,Z+7
0003c3 77ef      	ANDI R30,0x7F
0003c4 2f3e      	MOV  R19,R30
0003c5 81ac      	LDD  R26,Y+4
0003c6 81bd      	LDD  R27,Y+4+1
0003c7 940e 09bf 	CALL __GETW1P
                +
0003c9 93e0 050e+STS _glcd_state + ( 4 ) , R30
0003cb 93f0 050f+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
0003cd 9612      	ADIW R26,2
0003ce 940e 09bf 	CALL __GETW1P
                +
0003d0 93e0 0523+STS _glcd_state + ( 25 ) , R30
0003d2 93f0 0524+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
0003d4 81ac      	LDD  R26,Y+4
0003d5 81bd      	LDD  R27,Y+4+1
0003d6 9614      	ADIW R26,4
0003d7 940e 09bf 	CALL __GETW1P
0003d9 c00d      	RJMP _0x20000A1
                 _0x2000008:
0003da e010      	LDI  R17,LOW(0)
0003db e003      	LDI  R16,LOW(3)
0003dc e332      	LDI  R19,LOW(50)
0003dd e0e0      	LDI  R30,LOW(0)
0003de e0f0      	LDI  R31,HIGH(0)
                +
0003df 93e0 050e+STS _glcd_state + ( 4 ) , R30
0003e1 93f0 050f+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
                +
0003e3 93e0 0523+STS _glcd_state + ( 25 ) , R30
0003e5 93f0 0524+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
                 _0x20000A1:
                +
0003e7 93e0 0525+STS _glcd_state + ( 27 ) , R30
0003e9 93f0 0526+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
0003eb e2a1      	LDI  R26,LOW(33)
0003ec df44      	RCALL _pcd8544_wrcmd
0003ed 2fe1      	MOV  R30,R17
0003ee 60e4      	ORI  R30,4
0003ef 2fae      	MOV  R26,R30
0003f0 df40      	RCALL _pcd8544_wrcmd
0003f1 2fe0      	MOV  R30,R16
0003f2 61e0      	ORI  R30,0x10
0003f3 2fae      	MOV  R26,R30
0003f4 df3c      	RCALL _pcd8544_wrcmd
0003f5 2fe3      	MOV  R30,R19
0003f6 68e0      	ORI  R30,0x80
0003f7 2fae      	MOV  R26,R30
0003f8 df38      	RCALL _pcd8544_wrcmd
0003f9 e2a0      	LDI  R26,LOW(32)
0003fa df36      	RCALL _pcd8544_wrcmd
0003fb e0a1      	LDI  R26,LOW(1)
0003fc d022      	RCALL _glcd_display
0003fd e0e1      	LDI  R30,LOW(1)
0003fe 93e0 050a 	STS  _glcd_state,R30
000400 e0e0      	LDI  R30,LOW(0)
                +
000401 93e0 050b+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
000403 e0e1      	LDI  R30,LOW(1)
                +
000404 93e0 0510+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
000406 93e0 0511+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
000408 93e0 0512+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
00040a efef      	LDI  R30,LOW(255)
                +
00040b 93e0 0513+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
00040d e0e1      	LDI  R30,LOW(1)
                +
00040e 93e0 051a+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
000410 e1eb     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
000411 e0f5     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
000412 93fa      	ST   -Y,R31
000413 93ea      	ST   -Y,R30
000414 efef      	LDI  R30,LOW(255)
000415 93ea      	ST   -Y,R30
000416 e0a8      	LDI  R26,LOW(8)
000417 e0b0      	LDI  R27,0
000418 940e 0842 	CALL _memset
00041a d00f      	RCALL _glcd_clear
00041b e0e1      	LDI  R30,LOW(1)
00041c 940e 09ed 	CALL __LOADLOCR4
00041e c060      	RJMP _0x212000A
                 ; .FEND
                 _glcd_display:
                 ; .FSTART _glcd_display
00041f 93aa      	ST   -Y,R26
000420 81e8      	LD   R30,Y
000421 30e0      	CPI  R30,0
000422 f011      	BREQ _0x200000A
000423 e0ec      	LDI  R30,LOW(12)
000424 c001      	RJMP _0x200000B
                 _0x200000A:
000425 e0e8      	LDI  R30,LOW(8)
                 _0x200000B:
000426 2fae      	MOV  R26,R30
000427 df09      	RCALL _pcd8544_wrcmd
000428 940c 0840 	JMP  _0x2120005
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
00042a 940e 09e6 	CALL __SAVELOCR4
00042c e030      	LDI  R19,0
                +
00042d 91e0 050b+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
00042f 30e0      	CPI  R30,0
000430 f009      	BREQ _0x200000D
000431 ef3f      	LDI  R19,LOW(255)
                 _0x200000D:
000432 e0e0      	LDI  R30,LOW(0)
000433 93ea      	ST   -Y,R30
000434 e0a0      	LDI  R26,LOW(0)
000435 df26      	RCALL _pcd8544_gotoxy
                +
000436 ef08     +LDI R16 , LOW ( 504 )
000437 e011     +LDI R17 , HIGH ( 504 )
                 	__GETWRN 16,17,504
                 _0x200000E:
000438 01f8      	MOVW R30,R16
                +
000439 5001     +SUBI R16 , LOW ( 1 )
00043a 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
00043b 9730      	SBIW R30,0
00043c f019      	BREQ _0x2000010
00043d 2fa3      	MOV  R26,R19
00043e df39      	RCALL _pcd8544_wrbyte
00043f cff8      	RJMP _0x200000E
                 _0x2000010:
000440 e0e0      	LDI  R30,LOW(0)
000441 93ea      	ST   -Y,R30
000442 e0a0      	LDI  R26,LOW(0)
000443 d349      	RCALL _glcd_moveto
000444 940e 09ed 	CALL __LOADLOCR4
000446 940c 08c1 	JMP  _0x2120001
                 ; .FEND
                 _pcd8544_wrmasked_G100:
                 ; .FSTART _pcd8544_wrmasked_G100
000448 93aa      	ST   -Y,R26
000449 931a      	ST   -Y,R17
00044a 81ed      	LDD  R30,Y+5
00044b 93ea      	ST   -Y,R30
00044c 81ad      	LDD  R26,Y+5
00044d df1c      	RCALL _pcd8544_rdbyte
00044e 2f1e      	MOV  R17,R30
00044f 81e9      	LDD  R30,Y+1
000450 30e7      	CPI  R30,LOW(0x7)
000451 f011      	BREQ _0x2000020
000452 30e8      	CPI  R30,LOW(0x8)
000453 f439      	BRNE _0x2000021
                 _0x2000020:
000454 81eb      	LDD  R30,Y+3
000455 93ea      	ST   -Y,R30
000456 81aa      	LDD  R26,Y+2
000457 940e 085d 	CALL _glcd_mappixcolor1bit
000459 83eb      	STD  Y+3,R30
00045a c008      	RJMP _0x2000022
                 _0x2000021:
00045b 30e3      	CPI  R30,LOW(0x3)
00045c f421      	BRNE _0x2000024
00045d 81eb      	LDD  R30,Y+3
00045e 95e0      	COM  R30
00045f 83eb      	STD  Y+3,R30
000460 c002      	RJMP _0x2000025
                 _0x2000024:
000461 30e0      	CPI  R30,0
000462 f421      	BRNE _0x2000026
                 _0x2000025:
                 _0x2000022:
000463 81ea      	LDD  R30,Y+2
000464 95e0      	COM  R30
000465 231e      	AND  R17,R30
000466 c002      	RJMP _0x2000027
                 _0x2000026:
000467 30e2      	CPI  R30,LOW(0x2)
000468 f429      	BRNE _0x2000028
                 _0x2000027:
000469 81ea      	LDD  R30,Y+2
00046a 81ab      	LDD  R26,Y+3
00046b 23ea      	AND  R30,R26
00046c 2b1e      	OR   R17,R30
00046d c00e      	RJMP _0x200001E
                 _0x2000028:
00046e 30e1      	CPI  R30,LOW(0x1)
00046f f429      	BRNE _0x2000029
000470 81ea      	LDD  R30,Y+2
000471 81ab      	LDD  R26,Y+3
000472 23ea      	AND  R30,R26
000473 271e      	EOR  R17,R30
000474 c007      	RJMP _0x200001E
                 _0x2000029:
000475 30e4      	CPI  R30,LOW(0x4)
000476 f429      	BRNE _0x200001E
000477 81ea      	LDD  R30,Y+2
000478 95e0      	COM  R30
000479 81ab      	LDD  R26,Y+3
00047a 2bea      	OR   R30,R26
00047b 231e      	AND  R17,R30
                 _0x200001E:
00047c 2fa1      	MOV  R26,R17
00047d defa      	RCALL _pcd8544_wrbyte
00047e 8118      	LDD  R17,Y+0
                 _0x212000A:
00047f 9626      	ADIW R28,6
000480 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
000481 93aa      	ST   -Y,R26
000482 9723      	SBIW R28,3
000483 940e 09e4 	CALL __SAVELOCR6
000485 89a8      	LDD  R26,Y+16
000486 35a4      	CPI  R26,LOW(0x54)
000487 f448      	BRSH _0x200002C
000488 85af      	LDD  R26,Y+15
000489 33a0      	CPI  R26,LOW(0x30)
00048a f430      	BRSH _0x200002C
00048b 85ae      	LDD  R26,Y+14
00048c 30a0      	CPI  R26,LOW(0x0)
00048d f019      	BREQ _0x200002C
00048e 85ad      	LDD  R26,Y+13
00048f 30a0      	CPI  R26,LOW(0x0)
000490 f409      	BRNE _0x200002B
                 _0x200002C:
000491 c1d5      	RJMP _0x2120009
                 _0x200002B:
000492 85ee      	LDD  R30,Y+14
000493 87e8      	STD  Y+8,R30
000494 89a8      	LDD  R26,Y+16
000495 27bb      	CLR  R27
000496 85ee      	LDD  R30,Y+14
000497 e0f0      	LDI  R31,0
000498 0fae      	ADD  R26,R30
000499 1fbf      	ADC  R27,R31
00049a 35a5      	CPI  R26,LOW(0x55)
00049b e0e0      	LDI  R30,HIGH(0x55)
00049c 07be      	CPC  R27,R30
00049d f020      	BRLO _0x200002E
00049e 89a8      	LDD  R26,Y+16
00049f e5e4      	LDI  R30,LOW(84)
0004a0 1bea      	SUB  R30,R26
0004a1 87ee      	STD  Y+14,R30
                 _0x200002E:
0004a2 852d      	LDD  R18,Y+13
0004a3 85af      	LDD  R26,Y+15
0004a4 27bb      	CLR  R27
0004a5 85ed      	LDD  R30,Y+13
0004a6 e0f0      	LDI  R31,0
0004a7 0fae      	ADD  R26,R30
0004a8 1fbf      	ADC  R27,R31
0004a9 97d1      	SBIW R26,49
0004aa f020      	BRLO _0x200002F
0004ab 85af      	LDD  R26,Y+15
0004ac e3e0      	LDI  R30,LOW(48)
0004ad 1bea      	SUB  R30,R26
0004ae 87ed      	STD  Y+13,R30
                 _0x200002F:
0004af 85a9      	LDD  R26,Y+9
0004b0 30a6      	CPI  R26,LOW(0x6)
0004b1 f009      	BREQ PC+2
0004b2 c05b      	RJMP _0x2000030
0004b3 85ec      	LDD  R30,Y+12
0004b4 30e1      	CPI  R30,LOW(0x1)
0004b5 f409      	BRNE _0x2000034
0004b6 c1b0      	RJMP _0x2120009
                 _0x2000034:
0004b7 30e3      	CPI  R30,LOW(0x3)
0004b8 f439      	BRNE _0x2000037
                +
0004b9 91e0 0525+LDS R30 , _glcd_state + ( 27 )
0004bb 91f0 0526+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
0004bd 9730      	SBIW R30,0
0004be f409      	BRNE _0x2000036
0004bf c1a7      	RJMP _0x2120009
                 _0x2000036:
                 _0x2000037:
0004c0 8508      	LDD  R16,Y+8
0004c1 85ed      	LDD  R30,Y+13
0004c2 95e6      	LSR  R30
0004c3 95e6      	LSR  R30
0004c4 95e6      	LSR  R30
0004c5 2f3e      	MOV  R19,R30
0004c6 2fe2      	MOV  R30,R18
0004c7 70e7      	ANDI R30,LOW(0x7)
0004c8 f419      	BRNE _0x2000039
0004c9 85ad      	LDD  R26,Y+13
0004ca 172a      	CP   R18,R26
0004cb f0e9      	BREQ _0x2000038
                 _0x2000039:
0004cc 2fa0      	MOV  R26,R16
0004cd 27bb      	CLR  R27
0004ce 2fe3      	MOV  R30,R19
0004cf e0f0      	LDI  R31,0
0004d0 940e 0983 	CALL __MULW12U
0004d2 85aa      	LDD  R26,Y+10
0004d3 85bb      	LDD  R27,Y+10+1
0004d4 940e 08e3 	CALL SUBOPT_0x5
0004d6 9526      	LSR  R18
0004d7 9526      	LSR  R18
0004d8 9526      	LSR  R18
0004d9 2f53      	MOV  R21,R19
                 _0x200003B:
0004da 935f      	PUSH R21
0004db 5f5f      	SUBI R21,-1
0004dc 2fe2      	MOV  R30,R18
0004dd 91af      	POP  R26
0004de 17ea      	CP   R30,R26
0004df f048      	BRLO _0x200003D
0004e0 2f10      	MOV  R17,R16
                 _0x200003E:
0004e1 2fe1      	MOV  R30,R17
0004e2 5011      	SUBI R17,1
0004e3 30e0      	CPI  R30,0
0004e4 f019      	BREQ _0x2000040
0004e5 940e 08e8 	CALL SUBOPT_0x6
0004e7 cff9      	RJMP _0x200003E
                 _0x2000040:
0004e8 cff1      	RJMP _0x200003B
                 _0x200003D:
                 _0x2000038:
0004e9 85ae      	LDD  R26,Y+14
0004ea 170a      	CP   R16,R26
0004eb f111      	BREQ _0x2000041
0004ec 85ee      	LDD  R30,Y+14
0004ed 85aa      	LDD  R26,Y+10
0004ee 85bb      	LDD  R27,Y+10+1
0004ef e0f0      	LDI  R31,0
0004f0 940e 08e3 	CALL SUBOPT_0x5
0004f2 85ed      	LDD  R30,Y+13
0004f3 70e7      	ANDI R30,LOW(0x7)
0004f4 f009      	BREQ _0x2000042
0004f5 5f3f      	SUBI R19,-LOW(1)
                 _0x2000042:
0004f6 e020      	LDI  R18,LOW(0)
                 _0x2000043:
0004f7 932f      	PUSH R18
0004f8 5f2f      	SUBI R18,-1
0004f9 2fe3      	MOV  R30,R19
0004fa 91af      	POP  R26
0004fb 17ae      	CP   R26,R30
0004fc f488      	BRSH _0x2000045
0004fd 851e      	LDD  R17,Y+14
                 _0x2000046:
0004fe 931f      	PUSH R17
0004ff 5f1f      	SUBI R17,-1
000500 2fe0      	MOV  R30,R16
000501 91af      	POP  R26
000502 17ae      	CP   R26,R30
000503 f418      	BRSH _0x2000048
000504 940e 08e8 	CALL SUBOPT_0x6
000506 cff7      	RJMP _0x2000046
                 _0x2000048:
000507 85ee      	LDD  R30,Y+14
000508 81ae      	LDD  R26,Y+6
000509 81bf      	LDD  R27,Y+6+1
00050a e0f0      	LDI  R31,0
00050b 940e 08e3 	CALL SUBOPT_0x5
00050d cfe9      	RJMP _0x2000043
                 _0x2000045:
                 _0x2000041:
                 _0x2000030:
00050e 85ef      	LDD  R30,Y+15
00050f 70e7      	ANDI R30,LOW(0x7)
000510 2f3e      	MOV  R19,R30
                 _0x2000049:
000511 85ed      	LDD  R30,Y+13
000512 30e0      	CPI  R30,0
000513 f409      	BRNE PC+2
000514 c152      	RJMP _0x200004B
000515 85ea      	LDD  R30,Y+10
000516 85fb      	LDD  R31,Y+10+1
000517 83ee      	STD  Y+6,R30
000518 83ff      	STD  Y+6+1,R31
000519 e010      	LDI  R17,LOW(0)
00051a 8908      	LDD  R16,Y+16
00051b 3030      	CPI  R19,0
00051c f009      	BREQ PC+2
00051d c066      	RJMP _0x200004C
00051e 85ad      	LDD  R26,Y+13
00051f 30a8      	CPI  R26,LOW(0x8)
000520 f408      	BRSH PC+2
000521 c05d      	RJMP _0x200004D
000522 85e9      	LDD  R30,Y+9
000523 30e0      	CPI  R30,0
000524 f011      	BREQ _0x2000052
000525 30e3      	CPI  R30,LOW(0x3)
000526 f409      	BRNE _0x2000053
                 _0x2000052:
000527 c002      	RJMP _0x2000054
                 _0x2000053:
000528 30e7      	CPI  R30,LOW(0x7)
000529 f409      	BRNE _0x2000055
                 _0x2000054:
00052a c002      	RJMP _0x2000056
                 _0x2000055:
00052b 30e8      	CPI  R30,LOW(0x8)
00052c f409      	BRNE _0x2000057
                 _0x2000056:
00052d c002      	RJMP _0x2000058
                 _0x2000057:
00052e 30e9      	CPI  R30,LOW(0x9)
00052f f409      	BRNE _0x2000059
                 _0x2000058:
000530 c002      	RJMP _0x200005A
                 _0x2000059:
000531 30ea      	CPI  R30,LOW(0xA)
000532 f421      	BRNE _0x200005B
                 _0x200005A:
000533 930a      	ST   -Y,R16
000534 89a8      	LDD  R26,Y+16
000535 de26      	RCALL _pcd8544_gotoxy
000536 c004      	RJMP _0x2000050
                 _0x200005B:
000537 30e6      	CPI  R30,LOW(0x6)
000538 f411      	BRNE _0x2000050
000539 940e 08f5 	CALL SUBOPT_0x7
                 _0x2000050:
                 _0x200005D:
00053b 931f      	PUSH R17
00053c 5f1f      	SUBI R17,-1
00053d 85ee      	LDD  R30,Y+14
00053e 91af      	POP  R26
00053f 17ae      	CP   R26,R30
000540 f5b8      	BRSH _0x200005F
000541 85a9      	LDD  R26,Y+9
000542 30a6      	CPI  R26,LOW(0x6)
000543 f469      	BRNE _0x2000060
000544 940e 08f9 	CALL SUBOPT_0x8
000546 93fa      	ST   -Y,R31
000547 93ea      	ST   -Y,R30
000548 940e 08db 	CALL SUBOPT_0x3
00054a 9731      	SBIW R30,1
00054b 5ce3      	SUBI R30,LOW(-_gfx_buffer_G100)
00054c 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G100)
00054d 81a0      	LD   R26,Z
00054e 940e 08a4 	CALL _glcd_writemem
000550 c026      	RJMP _0x2000061
                 _0x2000060:
000551 85e9      	LDD  R30,Y+9
000552 30e9      	CPI  R30,LOW(0x9)
000553 f411      	BRNE _0x2000065
000554 e050      	LDI  R21,LOW(0)
000555 c00e      	RJMP _0x2000066
                 _0x2000065:
000556 30ea      	CPI  R30,LOW(0xA)
000557 f411      	BRNE _0x2000064
000558 ef5f      	LDI  R21,LOW(255)
000559 c00a      	RJMP _0x2000066
                 _0x2000064:
00055a 940e 08f9 	CALL SUBOPT_0x8
00055c 940e 0902 	CALL SUBOPT_0x9
00055e 2f5e      	MOV  R21,R30
00055f 85e9      	LDD  R30,Y+9
000560 30e7      	CPI  R30,LOW(0x7)
000561 f011      	BREQ _0x200006D
000562 30e8      	CPI  R30,LOW(0x8)
000563 f421      	BRNE _0x200006E
                 _0x200006D:
                 _0x2000066:
000564 940e 0908 	CALL SUBOPT_0xA
000566 2f5e      	MOV  R21,R30
000567 c006      	RJMP _0x200006F
                 _0x200006E:
000568 30e3      	CPI  R30,LOW(0x3)
000569 f411      	BRNE _0x2000071
00056a 9550      	COM  R21
00056b c002      	RJMP _0x2000072
                 _0x2000071:
00056c 30e0      	CPI  R30,0
00056d f419      	BRNE _0x2000074
                 _0x2000072:
                 _0x200006F:
00056e 2fa5      	MOV  R26,R21
00056f ddcb      	RCALL _pcd8544_wrdata_G100
000570 c006      	RJMP _0x200006B
                 _0x2000074:
000571 940e 090c 	CALL SUBOPT_0xB
000573 efef      	LDI  R30,LOW(255)
000574 93ea      	ST   -Y,R30
000575 85ad      	LDD  R26,Y+13
000576 ded1      	RCALL _pcd8544_wrmasked_G100
                 _0x200006B:
                 _0x2000061:
000577 cfc3      	RJMP _0x200005D
                 _0x200005F:
000578 85ef      	LDD  R30,Y+15
000579 5fe8      	SUBI R30,-LOW(8)
00057a 87ef      	STD  Y+15,R30
00057b 85ed      	LDD  R30,Y+13
00057c 50e8      	SUBI R30,LOW(8)
00057d 87ed      	STD  Y+13,R30
00057e c0df      	RJMP _0x2000075
                 _0x200004D:
00057f 855d      	LDD  R21,Y+13
000580 e020      	LDI  R18,LOW(0)
000581 e0e0      	LDI  R30,LOW(0)
000582 87ed      	STD  Y+13,R30
000583 c081      	RJMP _0x2000076
                 _0x200004C:
000584 2fe3      	MOV  R30,R19
000585 85ad      	LDD  R26,Y+13
000586 0fae      	ADD  R26,R30
000587 30a9      	CPI  R26,LOW(0x9)
000588 f420      	BRSH _0x2000077
000589 852d      	LDD  R18,Y+13
00058a e0e0      	LDI  R30,LOW(0)
00058b 87ed      	STD  Y+13,R30
00058c c003      	RJMP _0x2000078
                 _0x2000077:
00058d e0e8      	LDI  R30,LOW(8)
00058e 1be3      	SUB  R30,R19
00058f 2f2e      	MOV  R18,R30
                 _0x2000078:
000590 933a      	ST   -Y,R19
000591 2fa2      	MOV  R26,R18
000592 940e 0852 	CALL _glcd_getmask
000594 2f4e      	MOV  R20,R30
000595 85e9      	LDD  R30,Y+9
000596 30e6      	CPI  R30,LOW(0x6)
000597 f529      	BRNE _0x200007C
000598 940e 08f5 	CALL SUBOPT_0x7
                 _0x200007D:
00059a 931f      	PUSH R17
00059b 5f1f      	SUBI R17,-1
00059c 85ee      	LDD  R30,Y+14
00059d 91af      	POP  R26
00059e 17ae      	CP   R26,R30
00059f f4e0      	BRSH _0x200007F
0005a0 940e 08db 	CALL SUBOPT_0x3
0005a2 9731      	SBIW R30,1
0005a3 5ce3      	SUBI R30,LOW(-_gfx_buffer_G100)
0005a4 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G100)
0005a5 81e0      	LD   R30,Z
0005a6 23e4      	AND  R30,R20
0005a7 2fae      	MOV  R26,R30
0005a8 2fe3      	MOV  R30,R19
0005a9 940e 0972 	CALL __LSRB12
0005ab 940e 0912 	CALL SUBOPT_0xC
0005ad 2fe3      	MOV  R30,R19
0005ae 2fa4      	MOV  R26,R20
0005af 940e 0972 	CALL __LSRB12
0005b1 95e0      	COM  R30
0005b2 21e1      	AND  R30,R1
0005b3 2b5e      	OR   R21,R30
0005b4 940e 08f9 	CALL SUBOPT_0x8
0005b6 93fa      	ST   -Y,R31
0005b7 93ea      	ST   -Y,R30
0005b8 2fa5      	MOV  R26,R21
0005b9 940e 08a4 	CALL _glcd_writemem
0005bb cfde      	RJMP _0x200007D
                 _0x200007F:
0005bc c02c      	RJMP _0x200007B
                 _0x200007C:
0005bd 30e9      	CPI  R30,LOW(0x9)
0005be f411      	BRNE _0x2000080
0005bf e050      	LDI  R21,LOW(0)
0005c0 c003      	RJMP _0x2000081
                 _0x2000080:
0005c1 30ea      	CPI  R30,LOW(0xA)
0005c2 f4a9      	BRNE _0x2000087
0005c3 ef5f      	LDI  R21,LOW(255)
                 _0x2000081:
0005c4 940e 0908 	CALL SUBOPT_0xA
0005c6 2fae      	MOV  R26,R30
0005c7 2fe3      	MOV  R30,R19
0005c8 940e 096a 	CALL __LSLB12
0005ca 2f5e      	MOV  R21,R30
                 _0x2000084:
0005cb 931f      	PUSH R17
0005cc 5f1f      	SUBI R17,-1
0005cd 85ee      	LDD  R30,Y+14
0005ce 91af      	POP  R26
0005cf 17ae      	CP   R26,R30
0005d0 f430      	BRSH _0x2000086
0005d1 940e 090c 	CALL SUBOPT_0xB
0005d3 934a      	ST   -Y,R20
0005d4 e0a0      	LDI  R26,LOW(0)
0005d5 de72      	RCALL _pcd8544_wrmasked_G100
0005d6 cff4      	RJMP _0x2000084
                 _0x2000086:
0005d7 c011      	RJMP _0x200007B
                 _0x2000087:
                 _0x2000088:
0005d8 931f      	PUSH R17
0005d9 5f1f      	SUBI R17,-1
0005da 85ee      	LDD  R30,Y+14
0005db 91af      	POP  R26
0005dc 17ae      	CP   R26,R30
0005dd f458      	BRSH _0x200008A
0005de 940e 091d 	CALL SUBOPT_0xD
0005e0 2fae      	MOV  R26,R30
0005e1 2fe3      	MOV  R30,R19
0005e2 940e 096a 	CALL __LSLB12
0005e4 93ea      	ST   -Y,R30
0005e5 934a      	ST   -Y,R20
0005e6 85ad      	LDD  R26,Y+13
0005e7 de60      	RCALL _pcd8544_wrmasked_G100
0005e8 cfef      	RJMP _0x2000088
                 _0x200008A:
                 _0x200007B:
0005e9 85ed      	LDD  R30,Y+13
0005ea 30e0      	CPI  R30,0
0005eb f409      	BRNE _0x200008B
0005ec c07a      	RJMP _0x200004B
                 _0x200008B:
0005ed 85ad      	LDD  R26,Y+13
0005ee 30a8      	CPI  R26,LOW(0x8)
0005ef f428      	BRSH _0x200008C
0005f0 85ed      	LDD  R30,Y+13
0005f1 1be2      	SUB  R30,R18
0005f2 2f5e      	MOV  R21,R30
0005f3 e0e0      	LDI  R30,LOW(0)
0005f4 c003      	RJMP _0x20000A2
                 _0x200008C:
0005f5 2f53      	MOV  R21,R19
0005f6 85ed      	LDD  R30,Y+13
0005f7 50e8      	SUBI R30,LOW(8)
                 _0x20000A2:
0005f8 87ed      	STD  Y+13,R30
0005f9 e010      	LDI  R17,LOW(0)
0005fa 85ef      	LDD  R30,Y+15
0005fb 5fe8      	SUBI R30,-LOW(8)
0005fc 87ef      	STD  Y+15,R30
0005fd e0e8      	LDI  R30,LOW(8)
0005fe 1be3      	SUB  R30,R19
0005ff 2f2e      	MOV  R18,R30
000600 8908      	LDD  R16,Y+16
000601 85ea      	LDD  R30,Y+10
000602 85fb      	LDD  R31,Y+10+1
000603 83ee      	STD  Y+6,R30
000604 83ff      	STD  Y+6+1,R31
                 _0x2000076:
000605 2fe5      	MOV  R30,R21
000606 e0f0      	LDI  R31,0
000607 59e0      	SUBI R30,LOW(-__glcd_mask*2)
000608 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000609 9144      	LPM  R20,Z
00060a 85e9      	LDD  R30,Y+9
00060b 30e6      	CPI  R30,LOW(0x6)
00060c f529      	BRNE _0x2000091
00060d 940e 08f5 	CALL SUBOPT_0x7
                 _0x2000092:
00060f 931f      	PUSH R17
000610 5f1f      	SUBI R17,-1
000611 85ee      	LDD  R30,Y+14
000612 91af      	POP  R26
000613 17ae      	CP   R26,R30
000614 f4e0      	BRSH _0x2000094
000615 940e 08db 	CALL SUBOPT_0x3
000617 9731      	SBIW R30,1
000618 5ce3      	SUBI R30,LOW(-_gfx_buffer_G100)
000619 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G100)
00061a 81e0      	LD   R30,Z
00061b 23e4      	AND  R30,R20
00061c 2fae      	MOV  R26,R30
00061d 2fe2      	MOV  R30,R18
00061e 940e 096a 	CALL __LSLB12
000620 940e 0912 	CALL SUBOPT_0xC
000622 2fe2      	MOV  R30,R18
000623 2fa4      	MOV  R26,R20
000624 940e 096a 	CALL __LSLB12
000626 95e0      	COM  R30
000627 21e1      	AND  R30,R1
000628 2b5e      	OR   R21,R30
000629 940e 08f9 	CALL SUBOPT_0x8
00062b 93fa      	ST   -Y,R31
00062c 93ea      	ST   -Y,R30
00062d 2fa5      	MOV  R26,R21
00062e 940e 08a4 	CALL _glcd_writemem
000630 cfde      	RJMP _0x2000092
                 _0x2000094:
000631 c02c      	RJMP _0x2000090
                 _0x2000091:
000632 30e9      	CPI  R30,LOW(0x9)
000633 f411      	BRNE _0x2000095
000634 e050      	LDI  R21,LOW(0)
000635 c003      	RJMP _0x2000096
                 _0x2000095:
000636 30ea      	CPI  R30,LOW(0xA)
000637 f4a9      	BRNE _0x200009C
000638 ef5f      	LDI  R21,LOW(255)
                 _0x2000096:
000639 940e 0908 	CALL SUBOPT_0xA
00063b 2fae      	MOV  R26,R30
00063c 2fe2      	MOV  R30,R18
00063d 940e 0972 	CALL __LSRB12
00063f 2f5e      	MOV  R21,R30
                 _0x2000099:
000640 931f      	PUSH R17
000641 5f1f      	SUBI R17,-1
000642 85ee      	LDD  R30,Y+14
000643 91af      	POP  R26
000644 17ae      	CP   R26,R30
000645 f430      	BRSH _0x200009B
000646 940e 090c 	CALL SUBOPT_0xB
000648 934a      	ST   -Y,R20
000649 e0a0      	LDI  R26,LOW(0)
00064a ddfd      	RCALL _pcd8544_wrmasked_G100
00064b cff4      	RJMP _0x2000099
                 _0x200009B:
00064c c011      	RJMP _0x2000090
                 _0x200009C:
                 _0x200009D:
00064d 931f      	PUSH R17
00064e 5f1f      	SUBI R17,-1
00064f 85ee      	LDD  R30,Y+14
000650 91af      	POP  R26
000651 17ae      	CP   R26,R30
000652 f458      	BRSH _0x200009F
000653 940e 091d 	CALL SUBOPT_0xD
000655 2fae      	MOV  R26,R30
000656 2fe2      	MOV  R30,R18
000657 940e 0972 	CALL __LSRB12
000659 93ea      	ST   -Y,R30
00065a 934a      	ST   -Y,R20
00065b 85ad      	LDD  R26,Y+13
00065c ddeb      	RCALL _pcd8544_wrmasked_G100
00065d cfef      	RJMP _0x200009D
                 _0x200009F:
                 _0x2000090:
                 _0x2000075:
00065e 85e8      	LDD  R30,Y+8
00065f 85aa      	LDD  R26,Y+10
000660 85bb      	LDD  R27,Y+10+1
000661 e0f0      	LDI  R31,0
000662 0fea      	ADD  R30,R26
000663 1ffb      	ADC  R31,R27
000664 87ea      	STD  Y+10,R30
000665 87fb      	STD  Y+10+1,R31
000666 ceaa      	RJMP _0x2000049
                 _0x200004B:
                 _0x2120009:
000667 940e 09eb 	CALL __LOADLOCR6
000669 9661      	ADIW R28,17
00066a 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
00066b 940e 092a 	CALL SUBOPT_0xE
00066d f024      	BRLT _0x2020003
00066e e0e0      	LDI  R30,LOW(0)
00066f e0f0      	LDI  R31,HIGH(0)
000670 940c 085b 	JMP  _0x2120003
                 _0x2020003:
000672 81a8      	LD   R26,Y
000673 81b9      	LDD  R27,Y+1
000674 35a4      	CPI  R26,LOW(0x54)
000675 e0e0      	LDI  R30,HIGH(0x54)
000676 07be      	CPC  R27,R30
000677 f024      	BRLT _0x2020004
000678 e5e3      	LDI  R30,LOW(83)
000679 e0f0      	LDI  R31,HIGH(83)
00067a 940c 085b 	JMP  _0x2120003
                 _0x2020004:
00067c 81e8      	LD   R30,Y
00067d 81f9      	LDD  R31,Y+1
00067e 940c 085b 	JMP  _0x2120003
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
000680 940e 092a 	CALL SUBOPT_0xE
000682 f024      	BRLT _0x2020005
000683 e0e0      	LDI  R30,LOW(0)
000684 e0f0      	LDI  R31,HIGH(0)
000685 940c 085b 	JMP  _0x2120003
                 _0x2020005:
000687 81a8      	LD   R26,Y
000688 81b9      	LDD  R27,Y+1
000689 97d0      	SBIW R26,48
00068a f024      	BRLT _0x2020006
00068b e2ef      	LDI  R30,LOW(47)
00068c e0f0      	LDI  R31,HIGH(47)
00068d 940c 085b 	JMP  _0x2120003
                 _0x2020006:
00068f 81e8      	LD   R30,Y
000690 81f9      	LDD  R31,Y+1
000691 940c 085b 	JMP  _0x2120003
                 ; .FEND
                 _glcd_getcharw_G101:
                 ; .FSTART _glcd_getcharw_G101
000693 93ba      	ST   -Y,R27
000694 93aa      	ST   -Y,R26
000695 9723      	SBIW R28,3
000696 940e 0931 	CALL SUBOPT_0xF
000698 018f      	MOVW R16,R30
000699 2e00      	MOV  R0,R16
00069a 2a01      	OR   R0,R17
00069b f419      	BRNE _0x202000B
00069c e0e0      	LDI  R30,LOW(0)
00069d e0f0      	LDI  R31,HIGH(0)
00069e c05f      	RJMP _0x2120007
                 _0x202000B:
00069f 940e 0938 	CALL SUBOPT_0x10
0006a1 820f      	STD  Y+7,R0
0006a2 940e 0938 	CALL SUBOPT_0x10
0006a4 820e      	STD  Y+6,R0
0006a5 940e 0938 	CALL SUBOPT_0x10
0006a7 8608      	STD  Y+8,R0
0006a8 85eb      	LDD  R30,Y+11
0006a9 85a8      	LDD  R26,Y+8
0006aa 17ea      	CP   R30,R26
0006ab f418      	BRSH _0x202000C
0006ac e0e0      	LDI  R30,LOW(0)
0006ad e0f0      	LDI  R31,HIGH(0)
0006ae c04f      	RJMP _0x2120007
                 _0x202000C:
0006af 01f8      	MOVW R30,R16
                +
0006b0 5f0f     +SUBI R16 , LOW ( - 1 )
0006b1 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0006b2 9154      	LPM  R21,Z
0006b3 85a8      	LDD  R26,Y+8
0006b4 27bb      	CLR  R27
0006b5 27ee      	CLR  R30
0006b6 0fa5      	ADD  R26,R21
0006b7 1fbe      	ADC  R27,R30
0006b8 85eb      	LDD  R30,Y+11
0006b9 e0f0      	LDI  R31,0
0006ba 17ea      	CP   R30,R26
0006bb 07fb      	CPC  R31,R27
0006bc f018      	BRLO _0x202000D
0006bd e0e0      	LDI  R30,LOW(0)
0006be e0f0      	LDI  R31,HIGH(0)
0006bf c03e      	RJMP _0x2120007
                 _0x202000D:
0006c0 81ee      	LDD  R30,Y+6
0006c1 95e6      	LSR  R30
0006c2 95e6      	LSR  R30
0006c3 95e6      	LSR  R30
0006c4 2f4e      	MOV  R20,R30
0006c5 81ee      	LDD  R30,Y+6
0006c6 70e7      	ANDI R30,LOW(0x7)
0006c7 f009      	BREQ _0x202000E
0006c8 5f4f      	SUBI R20,-LOW(1)
                 _0x202000E:
0006c9 81ef      	LDD  R30,Y+7
0006ca 30e0      	CPI  R30,0
0006cb f0a1      	BREQ _0x202000F
0006cc 85a9      	LDD  R26,Y+9
0006cd 85ba      	LDD  R27,Y+9+1
0006ce 93ec      	ST   X,R30
0006cf 85a8      	LDD  R26,Y+8
0006d0 85eb      	LDD  R30,Y+11
0006d1 1bea      	SUB  R30,R26
0006d2 e0f0      	LDI  R31,0
0006d3 01df      	MOVW R26,R30
0006d4 81ef      	LDD  R30,Y+7
0006d5 e0f0      	LDI  R31,0
0006d6 940e 0983 	CALL __MULW12U
0006d8 01df      	MOVW R26,R30
0006d9 2fe4      	MOV  R30,R20
0006da e0f0      	LDI  R31,0
0006db 940e 0983 	CALL __MULW12U
0006dd 0fe0      	ADD  R30,R16
0006de 1ff1      	ADC  R31,R17
0006df c01e      	RJMP _0x2120007
                 _0x202000F:
0006e0 0198      	MOVW R18,R16
0006e1 2fe5      	MOV  R30,R21
0006e2 e0f0      	LDI  R31,0
                +
0006e3 0f0e     +ADD R16 , R30
0006e4 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2020010:
0006e5 85a8      	LDD  R26,Y+8
0006e6 5faf      	SUBI R26,-LOW(1)
0006e7 87a8      	STD  Y+8,R26
0006e8 50a1      	SUBI R26,LOW(1)
0006e9 85eb      	LDD  R30,Y+11
0006ea 17ae      	CP   R26,R30
0006eb f460      	BRSH _0x2020012
0006ec 01f9      	MOVW R30,R18
                +
0006ed 5f2f     +SUBI R18 , LOW ( - 1 )
0006ee 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0006ef 91a4      	LPM  R26,Z
0006f0 e0b0      	LDI  R27,0
0006f1 2fe4      	MOV  R30,R20
0006f2 e0f0      	LDI  R31,0
0006f3 940e 0983 	CALL __MULW12U
                +
0006f5 0f0e     +ADD R16 , R30
0006f6 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
0006f7 cfed      	RJMP _0x2020010
                 _0x2020012:
0006f8 01f9      	MOVW R30,R18
0006f9 91e4      	LPM  R30,Z
0006fa 85a9      	LDD  R26,Y+9
0006fb 85ba      	LDD  R27,Y+9+1
0006fc 93ec      	ST   X,R30
0006fd 01f8      	MOVW R30,R16
                 _0x2120007:
0006fe 940e 09eb 	CALL __LOADLOCR6
                 _0x2120008:
000700 962c      	ADIW R28,12
000701 9508      	RET
                 ; .FEND
                 _glcd_new_line_G101:
                 ; .FSTART _glcd_new_line_G101
000702 e0e0      	LDI  R30,LOW(0)
                +
000703 93e0 050c+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
000705 91a0 050d+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000707 27bb      	CLR  R27
000708 940e 093d 	CALL SUBOPT_0x11
00070a e0f0      	LDI  R31,0
00070b 0fae      	ADD  R26,R30
00070c 1fbf      	ADC  R27,R31
                +
00070d 91e0 0511+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
00070f e0f0      	LDI  R31,0
000710 0fae      	ADD  R26,R30
000711 1fbf      	ADC  R27,R31
000712 df6d      	RCALL _glcd_clipy
                +
000713 93e0 050d+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000715 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
000716 93aa      	ST   -Y,R26
000717 9721      	SBIW R28,1
000718 940e 0931 	CALL SUBOPT_0xF
00071a 9730      	SBIW R30,0
00071b f409      	BRNE PC+2
00071c c055      	RJMP _0x202001F
00071d 81af      	LDD  R26,Y+7
00071e 30aa      	CPI  R26,LOW(0xA)
00071f f409      	BRNE _0x2020020
000720 c04f      	RJMP _0x2020021
                 _0x2020020:
000721 81ef      	LDD  R30,Y+7
000722 93ea      	ST   -Y,R30
000723 01de      	MOVW R26,R28
000724 9617      	ADIW R26,7
000725 df6d      	RCALL _glcd_getcharw_G101
000726 01af      	MOVW R20,R30
000727 9730      	SBIW R30,0
000728 f409      	BRNE _0x2020022
000729 c04a      	RJMP _0x2120006
                 _0x2020022:
                +
00072a 91e0 0510+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
00072c 81ae      	LDD  R26,Y+6
00072d 0fea      	ADD  R30,R26
00072e 2f3e      	MOV  R19,R30
                +
00072f 91a0 050c+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
000731 27bb      	CLR  R27
000732 e0f0      	LDI  R31,0
000733 0fea      	ADD  R30,R26
000734 1ffb      	ADC  R31,R27
000735 018f      	MOVW R16,R30
                +
000736 3505     +CPI R16 , LOW ( 85 )
000737 e0e0     +LDI R30 , HIGH ( 85 )
000738 071e     +CPC R17 , R30
                 	__CPWRN 16,17,85
000739 f018      	BRLO _0x2020023
00073a 2f03      	MOV  R16,R19
00073b 2711      	CLR  R17
00073c dfc5      	RCALL _glcd_new_line_G101
                 _0x2020023:
                +
00073d 91e0 050c+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
00073f 93ea      	ST   -Y,R30
                +
000740 91e0 050d+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000742 93ea      	ST   -Y,R30
000743 85e8      	LDD  R30,Y+8
000744 93ea      	ST   -Y,R30
000745 940e 093d 	CALL SUBOPT_0x11
000747 93ea      	ST   -Y,R30
000748 e0e1      	LDI  R30,LOW(1)
000749 93ea      	ST   -Y,R30
00074a 935a      	ST   -Y,R21
00074b 934a      	ST   -Y,R20
00074c e0a7      	LDI  R26,LOW(7)
00074d dd33      	RCALL _glcd_block
                +
00074e 91e0 050c+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000750 81ae      	LDD  R26,Y+6
000751 0fea      	ADD  R30,R26
000752 93ea      	ST   -Y,R30
                +
000753 91e0 050d+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000755 93ea      	ST   -Y,R30
                +
000756 91e0 0510+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000758 93ea      	ST   -Y,R30
000759 940e 093d 	CALL SUBOPT_0x11
00075b 940e 0944 	CALL SUBOPT_0x12
                +
00075d 91e0 050c+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
00075f 93ea      	ST   -Y,R30
                +
000760 91a0 050d+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000762 940e 093d 	CALL SUBOPT_0x11
000764 0fea      	ADD  R30,R26
000765 93ea      	ST   -Y,R30
000766 933a      	ST   -Y,R19
                +
000767 91e0 0511+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000769 940e 0944 	CALL SUBOPT_0x12
00076b e5e4      	LDI  R30,LOW(84)
00076c e0f0      	LDI  R31,HIGH(84)
00076d 17e0      	CP   R30,R16
00076e 07f1      	CPC  R31,R17
00076f f411      	BRNE _0x2020024
                 _0x2020021:
000770 df91      	RCALL _glcd_new_line_G101
000771 c002      	RJMP _0x2120006
                 _0x2020024:
                 _0x202001F:
                +
000772 9300 050c+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
                 _0x2120006:
000774 940e 09eb 	CALL __LOADLOCR6
000776 9628      	ADIW R28,8
000777 9508      	RET
                 ; .FEND
                 _glcd_outtextxy:
                 ; .FSTART _glcd_outtextxy
000778 93ba      	ST   -Y,R27
000779 93aa      	ST   -Y,R26
00077a 931a      	ST   -Y,R17
00077b 81ec      	LDD  R30,Y+4
00077c 93ea      	ST   -Y,R30
00077d 81ac      	LDD  R26,Y+4
00077e d00e      	RCALL _glcd_moveto
                 _0x2020025:
00077f 81a9      	LDD  R26,Y+1
000780 81ba      	LDD  R27,Y+1+1
000781 91ed      	LD   R30,X+
000782 83a9      	STD  Y+1,R26
000783 83ba      	STD  Y+1+1,R27
000784 2f1e      	MOV  R17,R30
000785 30e0      	CPI  R30,0
000786 f019      	BREQ _0x2020027
000787 2fa1      	MOV  R26,R17
000788 df8d      	RCALL _glcd_putchar
000789 cff5      	RJMP _0x2020025
                 _0x2020027:
00078a 8118      	LDD  R17,Y+0
00078b 940c 0850 	JMP  _0x2120004
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
00078d 93aa      	ST   -Y,R26
00078e 81a9      	LDD  R26,Y+1
00078f 27bb      	CLR  R27
000790 deda      	RCALL _glcd_clipx
                +
000791 93e0 050c+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000793 81a8      	LD   R26,Y
000794 27bb      	CLR  R27
000795 deea      	RCALL _glcd_clipy
                +
000796 93e0 050d+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000798 940c 085b 	JMP  _0x2120003
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G103:
                 ; .FSTART __lcd_write_nibble_G103
00079a 93aa      	ST   -Y,R26
00079b 81e8      	LD   R30,Y
00079c 71e0      	ANDI R30,LOW(0x10)
00079d f011      	BREQ _0x2060004
00079e 9adb      	SBI  0x1B,3
00079f c001      	RJMP _0x2060005
                 _0x2060004:
0007a0 98db      	CBI  0x1B,3
                 _0x2060005:
0007a1 81e8      	LD   R30,Y
0007a2 72e0      	ANDI R30,LOW(0x20)
0007a3 f011      	BREQ _0x2060006
0007a4 9adc      	SBI  0x1B,4
0007a5 c001      	RJMP _0x2060007
                 _0x2060006:
0007a6 98dc      	CBI  0x1B,4
                 _0x2060007:
0007a7 81e8      	LD   R30,Y
0007a8 74e0      	ANDI R30,LOW(0x40)
0007a9 f011      	BREQ _0x2060008
0007aa 9add      	SBI  0x1B,5
0007ab c001      	RJMP _0x2060009
                 _0x2060008:
0007ac 98dd      	CBI  0x1B,5
                 _0x2060009:
0007ad 81e8      	LD   R30,Y
0007ae 78e0      	ANDI R30,LOW(0x80)
0007af f011      	BREQ _0x206000A
0007b0 9ade      	SBI  0x1B,6
0007b1 c001      	RJMP _0x206000B
                 _0x206000A:
0007b2 98de      	CBI  0x1B,6
                 _0x206000B:
                +
0007b3 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0007b4 958a     +DEC R24
0007b5 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0007b6 9ada      	SBI  0x1B,2
                +
0007b7 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0007b8 958a     +DEC R24
0007b9 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0007ba 98da      	CBI  0x1B,2
                +
0007bb e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0007bc 958a     +DEC R24
0007bd f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0007be c081      	RJMP _0x2120005
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0007bf 93aa      	ST   -Y,R26
0007c0 81a8      	LD   R26,Y
0007c1 dfd8      	RCALL __lcd_write_nibble_G103
0007c2 81e8          ld    r30,y
0007c3 95e2          swap  r30
0007c4 83e8          st    y,r30
0007c5 81a8      	LD   R26,Y
0007c6 dfd3      	RCALL __lcd_write_nibble_G103
                +
0007c7 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0007c8 958a     +DEC R24
0007c9 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0007ca c075      	RJMP _0x2120005
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0007cb 93aa      	ST   -Y,R26
0007cc 81e8      	LD   R30,Y
0007cd e0f0      	LDI  R31,0
0007ce 5ceb      	SUBI R30,LOW(-__base_y_G103)
0007cf 4ff8      	SBCI R31,HIGH(-__base_y_G103)
0007d0 81e0      	LD   R30,Z
0007d1 81a9      	LDD  R26,Y+1
0007d2 0fae      	ADD  R26,R30
0007d3 dfeb      	RCALL __lcd_write_data
0007d4 80c9      	LDD  R12,Y+1
0007d5 81e8      	LD   R30,Y
0007d6 93e0 0739 	STS  __lcd_y,R30
0007d8 c082      	RJMP _0x2120003
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0007d9 e0a2      	LDI  R26,LOW(2)
0007da 940e 094e 	CALL SUBOPT_0x13
0007dc e0ac      	LDI  R26,LOW(12)
0007dd dfe1      	RCALL __lcd_write_data
0007de e0a1      	LDI  R26,LOW(1)
0007df 940e 094e 	CALL SUBOPT_0x13
0007e1 e0e0      	LDI  R30,LOW(0)
0007e2 93e0 0739 	STS  __lcd_y,R30
0007e4 2ece      	MOV  R12,R30
0007e5 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0007e6 93aa      	ST   -Y,R26
0007e7 81a8      	LD   R26,Y
0007e8 30aa      	CPI  R26,LOW(0xA)
0007e9 f021      	BREQ _0x2060011
0007ea 91e0 073a 	LDS  R30,__lcd_maxx
0007ec 16ce      	CP   R12,R30
0007ed f060      	BRLO _0x2060010
                 _0x2060011:
0007ee e0e0      	LDI  R30,LOW(0)
0007ef 93ea      	ST   -Y,R30
0007f0 91a0 0739 	LDS  R26,__lcd_y
0007f2 5faf      	SUBI R26,-LOW(1)
0007f3 93a0 0739 	STS  __lcd_y,R26
0007f5 dfd5      	RCALL _lcd_gotoxy
0007f6 81a8      	LD   R26,Y
0007f7 30aa      	CPI  R26,LOW(0xA)
0007f8 f409      	BRNE _0x2060013
0007f9 c046      	RJMP _0x2120005
                 _0x2060013:
                 _0x2060010:
0007fa 94c3      	INC  R12
0007fb 9ad8      	SBI  0x1B,0
0007fc 81a8      	LD   R26,Y
0007fd dfc1      	RCALL __lcd_write_data
0007fe 98d8      	CBI  0x1B,0
0007ff c040      	RJMP _0x2120005
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
000800 93ba      	ST   -Y,R27
000801 93aa      	ST   -Y,R26
000802 931a      	ST   -Y,R17
                 _0x2060017:
000803 81e9      	LDD  R30,Y+1
000804 81fa      	LDD  R31,Y+1+1
000805 9631      	ADIW R30,1
000806 83e9      	STD  Y+1,R30
000807 83fa      	STD  Y+1+1,R31
000808 9731      	SBIW R30,1
000809 91e4      	LPM  R30,Z
00080a 2f1e      	MOV  R17,R30
00080b 30e0      	CPI  R30,0
00080c f019      	BREQ _0x2060019
00080d 2fa1      	MOV  R26,R17
00080e dfd7      	RCALL _lcd_putchar
00080f cff3      	RJMP _0x2060017
                 _0x2060019:
000810 8118      	LDD  R17,Y+0
000811 c090      	RJMP _0x2120002
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000812 93aa      	ST   -Y,R26
000813 9ad3      	SBI  0x1A,3
000814 9ad4      	SBI  0x1A,4
000815 9ad5      	SBI  0x1A,5
000816 9ad6      	SBI  0x1A,6
000817 9ad2      	SBI  0x1A,2
000818 9ad0      	SBI  0x1A,0
000819 9ad1      	SBI  0x1A,1
00081a 98da      	CBI  0x1B,2
00081b 98d8      	CBI  0x1B,0
00081c 98d9      	CBI  0x1B,1
00081d 81e8      	LD   R30,Y
00081e 93e0 073a 	STS  __lcd_maxx,R30
000820 58e0      	SUBI R30,-LOW(128)
                +
000821 93e0 0737+STS __base_y_G103 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G103,2
000823 81e8      	LD   R30,Y
000824 54e0      	SUBI R30,-LOW(192)
                +
000825 93e0 0738+STS __base_y_G103 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G103,3
000827 e1a4      	LDI  R26,LOW(20)
000828 e0b0      	LDI  R27,0
000829 940e 095c 	CALL _delay_ms
00082b 940e 0954 	CALL SUBOPT_0x14
00082d 940e 0954 	CALL SUBOPT_0x14
00082f 940e 0954 	CALL SUBOPT_0x14
000831 e2a0      	LDI  R26,LOW(32)
000832 df67      	RCALL __lcd_write_nibble_G103
                +
000833 ec88     +LDI R24 , LOW ( 200 )
000834 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000835 9701     +SBIW R24 , 1
000836 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000837 e2a8      	LDI  R26,LOW(40)
000838 df86      	RCALL __lcd_write_data
000839 e0a4      	LDI  R26,LOW(4)
00083a df84      	RCALL __lcd_write_data
00083b e8a5      	LDI  R26,LOW(133)
00083c df82      	RCALL __lcd_write_data
00083d e0a6      	LDI  R26,LOW(6)
00083e df80      	RCALL __lcd_write_data
00083f df99      	RCALL _lcd_clear
                 _0x2120005:
000840 9621      	ADIW R28,1
000841 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
000842 93ba      	ST   -Y,R27
000843 93aa      	ST   -Y,R26
000844 81b9          ldd  r27,y+1
000845 81a8          ld   r26,y
000846 9610          adiw r26,0
000847 f031          breq memset1
000848 81fc          ldd  r31,y+4
000849 81eb          ldd  r30,y+3
00084a 816a          ldd  r22,y+2
                 memset0:
00084b 9361          st   z+,r22
00084c 9711          sbiw r26,1
00084d f7e9          brne memset0
                 memset1:
00084e 81eb          ldd  r30,y+3
00084f 81fc          ldd  r31,y+4
                 _0x2120004:
000850 9625      	ADIW R28,5
000851 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
000852 93aa      	ST   -Y,R26
000853 81e8      	LD   R30,Y
000854 e0f0      	LDI  R31,0
000855 59e0      	SUBI R30,LOW(-__glcd_mask*2)
000856 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000857 91a4      	LPM  R26,Z
000858 81e9      	LDD  R30,Y+1
000859 940e 096a 	CALL __LSLB12
                 _0x2120003:
00085b 9622      	ADIW R28,2
00085c 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
00085d 93aa      	ST   -Y,R26
00085e 931a      	ST   -Y,R17
00085f 81e9      	LDD  R30,Y+1
000860 30e7      	CPI  R30,LOW(0x7)
000861 f011      	BREQ _0x20A0007
000862 30ea      	CPI  R30,LOW(0xA)
000863 f419      	BRNE _0x20A0008
                 _0x20A0007:
000864 9110 050a 	LDS  R17,_glcd_state
000866 c009      	RJMP _0x20A0009
                 _0x20A0008:
000867 30e9      	CPI  R30,LOW(0x9)
000868 f419      	BRNE _0x20A000B
                +
000869 9110 050b+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
00086b c004      	RJMP _0x20A0009
                 _0x20A000B:
00086c 30e8      	CPI  R30,LOW(0x8)
00086d f4a1      	BRNE _0x20A0005
                +
00086e 9110 051a+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x20A0009:
                +
000870 91e0 050b+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000872 30e0      	CPI  R30,0
000873 f049      	BREQ _0x20A000E
000874 3010      	CPI  R17,0
000875 f019      	BREQ _0x20A000F
000876 efef      	LDI  R30,LOW(255)
000877 8118      	LDD  R17,Y+0
000878 c029      	RJMP _0x2120002
                 _0x20A000F:
000879 81ea      	LDD  R30,Y+2
00087a 95e0      	COM  R30
00087b 8118      	LDD  R17,Y+0
00087c c025      	RJMP _0x2120002
                 _0x20A000E:
00087d 3010      	CPI  R17,0
00087e f419      	BRNE _0x20A0011
00087f e0e0      	LDI  R30,LOW(0)
000880 8118      	LDD  R17,Y+0
000881 c020      	RJMP _0x2120002
                 _0x20A0011:
                 _0x20A0005:
000882 81ea      	LDD  R30,Y+2
000883 8118      	LDD  R17,Y+0
000884 c01d      	RJMP _0x2120002
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
000885 93ba      	ST   -Y,R27
000886 93aa      	ST   -Y,R26
000887 81ea      	LDD  R30,Y+2
000888 30e1      	CPI  R30,LOW(0x1)
000889 f421      	BRNE _0x20A0015
00088a 81e8      	LD   R30,Y
00088b 81f9      	LDD  R31,Y+1
00088c 91e4      	LPM  R30,Z
00088d c014      	RJMP _0x2120002
                 _0x20A0015:
00088e 30e2      	CPI  R30,LOW(0x2)
00088f f429      	BRNE _0x20A0016
000890 81a8      	LD   R26,Y
000891 81b9      	LDD  R27,Y+1
000892 940e 09c3 	CALL __EEPROMRDB
000894 c00d      	RJMP _0x2120002
                 _0x20A0016:
000895 30e3      	CPI  R30,LOW(0x3)
000896 f441      	BRNE _0x20A0018
000897 81a8      	LD   R26,Y
000898 81b9      	LDD  R27,Y+1
                +
000899 91e0 0523+LDS R30 , _glcd_state + ( 25 )
00089b 91f0 0524+LDS R31 , _glcd_state + ( 25 ) + 1
00089d 9509     +ICALL
                 	__CALL1MN _glcd_state,25
00089e c003      	RJMP _0x2120002
                 _0x20A0018:
00089f 81a8      	LD   R26,Y
0008a0 81b9      	LDD  R27,Y+1
0008a1 91ec      	LD   R30,X
                 _0x2120002:
0008a2 9623      	ADIW R28,3
0008a3 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
0008a4 93aa      	ST   -Y,R26
0008a5 81eb      	LDD  R30,Y+3
0008a6 30e0      	CPI  R30,0
0008a7 f429      	BRNE _0x20A001C
0008a8 81e8      	LD   R30,Y
0008a9 81a9      	LDD  R26,Y+1
0008aa 81ba      	LDD  R27,Y+1+1
0008ab 93ec      	ST   X,R30
0008ac c014      	RJMP _0x20A001B
                 _0x20A001C:
0008ad 30e2      	CPI  R30,LOW(0x2)
0008ae f431      	BRNE _0x20A001D
0008af 81e8      	LD   R30,Y
0008b0 81a9      	LDD  R26,Y+1
0008b1 81ba      	LDD  R27,Y+1+1
0008b2 940e 09cf 	CALL __EEPROMWRB
0008b4 c00c      	RJMP _0x20A001B
                 _0x20A001D:
0008b5 30e3      	CPI  R30,LOW(0x3)
0008b6 f451      	BRNE _0x20A001B
0008b7 81e9      	LDD  R30,Y+1
0008b8 81fa      	LDD  R31,Y+1+1
0008b9 93fa      	ST   -Y,R31
0008ba 93ea      	ST   -Y,R30
0008bb 81aa      	LDD  R26,Y+2
                +
0008bc 91e0 0525+LDS R30 , _glcd_state + ( 27 )
0008be 91f0 0526+LDS R31 , _glcd_state + ( 27 ) + 1
0008c0 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x20A001B:
                 _0x2120001:
0008c1 9624      	ADIW R28,4
0008c2 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _glcd_state:
00050a           	.BYTE 0x1D
                 _keypad:
000527           	.BYTE 0x12
                 _counter:
000539           	.BYTE 0x2
                 _gfx_addr_G100:
00053b           	.BYTE 0x2
                 _gfx_buffer_G100:
00053d           	.BYTE 0x1F8
                 __base_y_G103:
000735           	.BYTE 0x4
                 __lcd_y:
000739           	.BYTE 0x1
                 __lcd_maxx:
00073a           	.BYTE 0x1
                 __seed_G107:
00073b           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x0:
0008c3 91ed      	LD   R30,X+
0008c4 91fd      	LD   R31,X+
0008c5 9631      	ADIW R30,1
0008c6 93fe      	ST   -X,R31
0008c7 93ee      	ST   -X,R30
0008c8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x1:
0008c9 e0b0      	LDI  R27,0
0008ca e0ea      	LDI  R30,LOW(10)
0008cb e0f0      	LDI  R31,HIGH(10)
0008cc 940e 099e 	CALL __DIVW21
0008ce 5de0      	SUBI R30,-LOW(48)
0008cf 2fae      	MOV  R26,R30
0008d0 940c 07e6 	JMP  _lcd_putchar
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2:
0008d2 27bb      	CLR  R27
0008d3 e0ea      	LDI  R30,LOW(10)
0008d4 e0f0      	LDI  R31,HIGH(10)
0008d5 940e 09a3 	CALL __MODW21
0008d7 5de0      	SUBI R30,-LOW(48)
0008d8 2fae      	MOV  R26,R30
0008d9 940c 07e6 	JMP  _lcd_putchar
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
0008db e3ab      	LDI  R26,LOW(_gfx_addr_G100)
0008dc e0b5      	LDI  R27,HIGH(_gfx_addr_G100)
0008dd cfe5      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
0008de 93e0 0064 	STS  100,R30
0008e0 91e0 0065 	LDS  R30,101
0008e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
0008e3 0fea      	ADD  R30,R26
0008e4 1ffb      	ADC  R31,R27
0008e5 83ee      	STD  Y+6,R30
0008e6 83ff      	STD  Y+6+1,R31
0008e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x6:
0008e8 85ec      	LDD  R30,Y+12
0008e9 93ea      	ST   -Y,R30
0008ea 81ef      	LDD  R30,Y+7
0008eb 85f8      	LDD  R31,Y+7+1
0008ec 9631      	ADIW R30,1
0008ed 83ef      	STD  Y+7,R30
0008ee 87f8      	STD  Y+7+1,R31
0008ef 9731      	SBIW R30,1
0008f0 93fa      	ST   -Y,R31
0008f1 93ea      	ST   -Y,R30
0008f2 e0a0      	LDI  R26,LOW(0)
0008f3 940c 08a4 	JMP  _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
0008f5 930a      	ST   -Y,R16
0008f6 89a8      	LDD  R26,Y+16
0008f7 940c 0345 	JMP  _pcd8544_setaddr_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x8:
0008f9 85ec      	LDD  R30,Y+12
0008fa 93ea      	ST   -Y,R30
0008fb 81ef      	LDD  R30,Y+7
0008fc 85f8      	LDD  R31,Y+7+1
0008fd 9631      	ADIW R30,1
0008fe 83ef      	STD  Y+7,R30
0008ff 87f8      	STD  Y+7+1,R31
000900 9731      	SBIW R30,1
000901 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9:
000902 2766      	CLR  R22
000903 2777      	CLR  R23
000904 01df      	MOVW R26,R30
000905 01cb      	MOVW R24,R22
000906 940c 0885 	JMP  _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
000908 935a      	ST   -Y,R21
000909 85aa      	LDD  R26,Y+10
00090a 940c 085d 	JMP  _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xB:
00090c 930a      	ST   -Y,R16
00090d 9503      	INC  R16
00090e 89e8      	LDD  R30,Y+16
00090f 93ea      	ST   -Y,R30
000910 935a      	ST   -Y,R21
000911 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xC:
000912 2f5e      	MOV  R21,R30
000913 85ec      	LDD  R30,Y+12
000914 93ea      	ST   -Y,R30
000915 81af      	LDD  R26,Y+7
000916 85b8      	LDD  R27,Y+7+1
000917 2788      	CLR  R24
000918 2799      	CLR  R25
000919 940e 0885 	CALL _glcd_readmem
00091b 2e1e      	MOV  R1,R30
00091c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xD:
00091d 930a      	ST   -Y,R16
00091e 9503      	INC  R16
00091f 89e8      	LDD  R30,Y+16
000920 93ea      	ST   -Y,R30
000921 85ee      	LDD  R30,Y+14
000922 93ea      	ST   -Y,R30
000923 85e9      	LDD  R30,Y+9
000924 85fa      	LDD  R31,Y+9+1
000925 9631      	ADIW R30,1
000926 87e9      	STD  Y+9,R30
000927 87fa      	STD  Y+9+1,R31
000928 9731      	SBIW R30,1
000929 cfd8      	RJMP SUBOPT_0x9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
00092a 93ba      	ST   -Y,R27
00092b 93aa      	ST   -Y,R26
00092c 81a8      	LD   R26,Y
00092d 81b9      	LDD  R27,Y+1
00092e 940e 09e0 	CALL __CPW02
000930 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
000931 940e 09e4 	CALL __SAVELOCR6
                +
000933 91e0 050e+LDS R30 , _glcd_state + ( 4 )
000935 91f0 050f+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000937 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
000938 01f8      	MOVW R30,R16
                +
000939 5f0f     +SUBI R16 , LOW ( - 1 )
00093a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00093b 9004      	LPM  R0,Z
00093c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x11:
                +
00093d 91e0 050e+LDS R30 , _glcd_state + ( 4 )
00093f 91f0 050f+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000941 9631      	ADIW R30,1
000942 91e4      	LPM  R30,Z
000943 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x12:
000944 93ea      	ST   -Y,R30
000945 e0e0      	LDI  R30,LOW(0)
000946 93ea      	ST   -Y,R30
000947 e0e0      	LDI  R30,LOW(0)
000948 e0f0      	LDI  R31,HIGH(0)
000949 93fa      	ST   -Y,R31
00094a 93ea      	ST   -Y,R30
00094b e0a9      	LDI  R26,LOW(9)
00094c 940c 0481 	JMP  _glcd_block
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13:
00094e 940e 07bf 	CALL __lcd_write_data
000950 e0a3      	LDI  R26,LOW(3)
000951 e0b0      	LDI  R27,0
000952 940c 095c 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x14:
000954 e3a0      	LDI  R26,LOW(48)
000955 940e 079a 	CALL __lcd_write_nibble_G103
                +
000957 ec88     +LDI R24 , LOW ( 200 )
000958 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000959 9701     +SBIW R24 , 1
00095a f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00095b 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00095c 9610      	adiw r26,0
00095d f039      	breq __delay_ms1
                 __delay_ms0:
                +
00095e ed80     +LDI R24 , LOW ( 0x7D0 )
00095f e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000960 9701     +SBIW R24 , 1
000961 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000962 95a8      	wdr
000963 9711      	sbiw r26,1
000964 f7c9      	brne __delay_ms0
                 __delay_ms1:
000965 9508      	ret
                 
                 __ANEGW1:
000966 95f1      	NEG  R31
000967 95e1      	NEG  R30
000968 40f0      	SBCI R31,0
000969 9508      	RET
                 
                 __LSLB12:
00096a 23ee      	TST  R30
00096b 2e0e      	MOV  R0,R30
00096c 2fea      	MOV  R30,R26
00096d f019      	BREQ __LSLB12R
                 __LSLB12L:
00096e 0fee      	LSL  R30
00096f 940a      	DEC  R0
000970 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
000971 9508      	RET
                 
                 __LSRB12:
000972 23ee      	TST  R30
000973 2e0e      	MOV  R0,R30
000974 2fea      	MOV  R30,R26
000975 f019      	BREQ __LSRB12R
                 __LSRB12L:
000976 95e6      	LSR  R30
000977 940a      	DEC  R0
000978 f7e9      	BRNE __LSRB12L
                 __LSRB12R:
000979 9508      	RET
                 
                 __LSLW12:
00097a 23ee      	TST  R30
00097b 2e0e      	MOV  R0,R30
00097c 01fd      	MOVW R30,R26
00097d f021      	BREQ __LSLW12R
                 __LSLW12L:
00097e 0fee      	LSL  R30
00097f 1fff      	ROL  R31
000980 940a      	DEC  R0
000981 f7e1      	BRNE __LSLW12L
                 __LSLW12R:
000982 9508      	RET
                 
                 __MULW12U:
000983 9ffa      	MUL  R31,R26
000984 2df0      	MOV  R31,R0
000985 9feb      	MUL  R30,R27
000986 0df0      	ADD  R31,R0
000987 9fea      	MUL  R30,R26
000988 2de0      	MOV  R30,R0
000989 0df1      	ADD  R31,R1
00098a 9508      	RET
                 
                 __DIVW21U:
00098b 2400      	CLR  R0
00098c 2411      	CLR  R1
00098d e190      	LDI  R25,16
                 __DIVW21U1:
00098e 0faa      	LSL  R26
00098f 1fbb      	ROL  R27
000990 1c00      	ROL  R0
000991 1c11      	ROL  R1
000992 1a0e      	SUB  R0,R30
000993 0a1f      	SBC  R1,R31
000994 f418      	BRCC __DIVW21U2
000995 0e0e      	ADD  R0,R30
000996 1e1f      	ADC  R1,R31
000997 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000998 60a1      	SBR  R26,1
                 __DIVW21U3:
000999 959a      	DEC  R25
00099a f799      	BRNE __DIVW21U1
00099b 01fd      	MOVW R30,R26
00099c 01d0      	MOVW R26,R0
00099d 9508      	RET
                 
                 __DIVW21:
00099e d012      	RCALL __CHKSIGNW
00099f dfeb      	RCALL __DIVW21U
0009a0 f40e      	BRTC __DIVW211
0009a1 dfc4      	RCALL __ANEGW1
                 __DIVW211:
0009a2 9508      	RET
                 
                 __MODW21:
0009a3 94e8      	CLT
0009a4 ffb7      	SBRS R27,7
0009a5 c004      	RJMP __MODW211
0009a6 95a0      	COM  R26
0009a7 95b0      	COM  R27
0009a8 9611      	ADIW R26,1
0009a9 9468      	SET
                 __MODW211:
0009aa fdf7      	SBRC R31,7
0009ab dfba      	RCALL __ANEGW1
0009ac dfde      	RCALL __DIVW21U
0009ad 01fd      	MOVW R30,R26
0009ae f40e      	BRTC __MODW212
0009af dfb6      	RCALL __ANEGW1
                 __MODW212:
0009b0 9508      	RET
                 
                 __CHKSIGNW:
0009b1 94e8      	CLT
0009b2 fff7      	SBRS R31,7
0009b3 c002      	RJMP __CHKSW1
0009b4 dfb1      	RCALL __ANEGW1
0009b5 9468      	SET
                 __CHKSW1:
0009b6 ffb7      	SBRS R27,7
0009b7 c006      	RJMP __CHKSW2
0009b8 95a0      	COM  R26
0009b9 95b0      	COM  R27
0009ba 9611      	ADIW R26,1
0009bb f800      	BLD  R0,0
0009bc 9403      	INC  R0
0009bd fa00      	BST  R0,0
                 __CHKSW2:
0009be 9508      	RET
                 
                 __GETW1P:
0009bf 91ed      	LD   R30,X+
0009c0 91fc      	LD   R31,X
0009c1 9711      	SBIW R26,1
0009c2 9508      	RET
                 
                 __EEPROMRDB:
0009c3 99e1      	SBIC EECR,EEWE
0009c4 cffe      	RJMP __EEPROMRDB
0009c5 93ff      	PUSH R31
0009c6 b7ff      	IN   R31,SREG
0009c7 94f8      	CLI
0009c8 bbae      	OUT  EEARL,R26
0009c9 bbbf      	OUT  EEARH,R27
0009ca 9ae0      	SBI  EECR,EERE
0009cb b3ed      	IN   R30,EEDR
0009cc bfff      	OUT  SREG,R31
0009cd 91ff      	POP  R31
0009ce 9508      	RET
                 
                 __EEPROMWRB:
0009cf 9be1      	SBIS EECR,EEWE
0009d0 c002      	RJMP __EEPROMWRB1
0009d1 95a8      	WDR
0009d2 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
0009d3 b79f      	IN   R25,SREG
0009d4 94f8      	CLI
0009d5 bbae      	OUT  EEARL,R26
0009d6 bbbf      	OUT  EEARH,R27
0009d7 9ae0      	SBI  EECR,EERE
0009d8 b38d      	IN   R24,EEDR
0009d9 17e8      	CP   R30,R24
0009da f019      	BREQ __EEPROMWRB0
0009db bbed      	OUT  EEDR,R30
0009dc 9ae2      	SBI  EECR,EEMWE
0009dd 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
0009de bf9f      	OUT  SREG,R25
0009df 9508      	RET
                 
                 __CPW02:
0009e0 2400      	CLR  R0
0009e1 160a      	CP   R0,R26
0009e2 060b      	CPC  R0,R27
0009e3 9508      	RET
                 
                 __SAVELOCR6:
0009e4 935a      	ST   -Y,R21
                 __SAVELOCR5:
0009e5 934a      	ST   -Y,R20
                 __SAVELOCR4:
0009e6 933a      	ST   -Y,R19
                 __SAVELOCR3:
0009e7 932a      	ST   -Y,R18
                 __SAVELOCR2:
0009e8 931a      	ST   -Y,R17
0009e9 930a      	ST   -Y,R16
0009ea 9508      	RET
                 
                 __LOADLOCR6:
0009eb 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0009ec 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0009ed 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0009ee 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0009ef 8119      	LDD  R17,Y+1
0009f0 8108      	LD   R16,Y
0009f1 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
0009f2 0fac      	ADD  R26,R28
0009f3 1fbd      	ADC  R27,R29
                 __INITLOC0:
0009f4 9005      	LPM  R0,Z+
0009f5 920d      	ST   X+,R0
0009f6 958a      	DEC  R24
0009f7 f7e1      	BRNE __INITLOC0
0009f8 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :  37 r1 :   9 r2 :   0 r3 :   0 r4 :   2 r5 :   1 r6 :   4 r7 :   1 
r8 :   1 r9 :   3 r10:   1 r11:   1 r12:   4 r13:   2 r14:   0 r15:   0 
r16:  41 r17:  76 r18:  30 r19:  32 r20:  18 r21:  32 r22:   8 r23:   3 
r24:  38 r25:  10 r26: 296 r27:  99 r28:  21 r29:   2 r30: 693 r31: 138 
x  :  19 y  : 411 z  :  29 
Registers used: 31 out of 35 (88.6%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  18 add   :  25 
adiw  :  25 and   :   8 andi  :  23 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  38 
brge  :   2 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   6 
brlt  :   4 brmi  :   0 brne  :  74 brpl  :   0 brsh  :  16 brtc  :   2 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   1 call  : 107 
cbi   :  15 cbr   :   0 clc   :   0 clh   :   0 cli   :   3 cln   :   0 
clr   :  20 cls   :   0 clt   :   2 clv   :   0 clz   :   0 com   :  11 
cp    :  23 cpc   :  11 cpi   :  70 cpse  :   0 dec   :  14 des   :   0 
elpm  :   0 eor   :   1 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 
ijmp  :   0 in    :   6 inc   :   4 jmp   :  62 ld    :  51 ldd   : 212 
ldi   : 222 lds   :  52 lpm   :  26 lsl   :   7 lsr   :  15 mov   :  90 
movw  :  30 mul   :   4 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 
or    :   9 ori   :  16 out   :  25 pop   :  11 push  :  11 rcall :  69 
ret   :  46 reti  :   1 rjmp  : 110 rol   :   5 ror   :   0 sbc   :   2 
sbci  :  15 sbi   :  36 sbic  :   4 sbis  :   5 sbiw  :  30 sbr   :   1 
sbrc  :   1 sbrs  :   3 sec   :   0 seh   :   0 sei   :   1 sen   :   0 
ser   :   0 ses   :   0 set   :   2 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    : 140 std   :  39 sts   :  49 sub   :   9 subi  :  39 
swap  :   1 tst   :   4 wdr   :   2 
Instructions used: 70 out of 117 (59.8%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0013f2   4506    600   5106  131072   3.9%
[.dseg] 0x000100 0x00073f      0    575    575    4096  14.0%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 14 warnings
