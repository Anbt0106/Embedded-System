;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <glcd.h>
;#include <font5x7.h>
;#include <alcd.h>
;
;#define PIN_DHT PINB.7
;#define PORT_DHT PORTB.7
;#define DDR_DHT DDRB.7
;
;// Bi?n toàn c?c
;char x = 0;
;unsigned char nhietdo = 0, doam = 0;
;unsigned char nhietdo_naodo = 28, nhietdo_naodo2 = 30, doam_naodo = 53;
;bool say_xong = false;
;int counter = 0;
;int checksum = 0;
;
;// Interrupt c?a Timer1
;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
; 0000 0015 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0016     TCNT1H = 0xE0C0 >> 8;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0017     TCNT1L = 0xE0C0 & 0xff;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0018 
; 0000 0019     if (say_xong) {
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 001A         if (counter == 2000)
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 001B             counter = 0;
;PCODE: $00000018 VOL: 0
; 0000 001C 
; 0000 001D         if (counter == 0) {
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 001E             PORTD.4 = 0;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 001F             PORTD.5 = 1;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0020         }
; 0000 0021 
; 0000 0022         if (counter == 1000) {
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0023             PORTD.5 = 0;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0024             PORTD.4 = 1;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0025         }
; 0000 0026         counter++;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0027     }
; 0000 0028 }
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;
;// Hàm ð?c DHT11
;char dht11(unsigned char *nhietdo, unsigned char *doam) {
; 0000 002B char dht11(unsigned char *nhietdo, unsigned char *doam) {
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 002C     int i, j;
; 0000 002D     int buffer[5] = {0, 0, 0, 0, 0};
; 0000 002E 
; 0000 002F     DDR_DHT = 1;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;	*nhietdo -> Y+16
;	*doam -> Y+14
;	i -> R16,R17
;	j -> R18,R19
;	buffer -> Y+4
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0030     PORT_DHT = 1;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0031     delay_us(60);
;PCODE: $0000003D VOL: 0
; 0000 0032     PORT_DHT = 0;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0033     delay_ms(25);
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0034     DDR_DHT = 0;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0035     PORT_DHT = 1;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0036 
; 0000 0037     delay_us(60);
;PCODE: $00000047 VOL: 0
; 0000 0038     if (PIN_DHT) return 0;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0039     else while (!(PIN_DHT));
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 003A     delay_us(60);
;PCODE: $00000057 VOL: 0
; 0000 003B     if (!PIN_DHT) return 0;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 003C     else while ((PIN_DHT));
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 003D 
; 0000 003E     for (i = 0; i < 5; ++i) {
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 003F         for (j = 0; j < 8; ++j) {
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0040             while (!(PIN_DHT));
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 0041             delay_us(50);
;PCODE: $0000007F VOL: 0
; 0000 0042             if (PIN_DHT) {
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 0043                 buffer[i] |= (1 << (7 - j));
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 0044                 while ((PIN_DHT));
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 0045             }
; 0000 0046         }
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 0047     }
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0048 
; 0000 0049     checksum = buffer[0] + buffer[1] + buffer[2] + buffer[3];
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 004A     if ((checksum) != buffer[4]) return 0;
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 004B 
; 0000 004C     *nhietdo = buffer[2];
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 004D     *doam = buffer[0];
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 004E     return 1;
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 004F }
;PCODE: $000000BC VOL: 0
;
;// Hàm kh?i t?o các thanh ghi và ph?n c?ng
;void init_register() {
; 0000 0052 void init_register() {
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 0053     DDRF = 0b11101010;
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 0054     DDRD.4 = 1;
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 0055     DDRD.5 = 1;
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 0056     DDRD.7 = 1;
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 0057     DDRB.4 = 1;
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0000 0058     PORTB.2 = 1;
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 0059     PORTB.3 = 1;
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 005A     PORTD.7 = 1;
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 005B     DDRC.7 = 1;
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0000 005C }
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;
;// Hàm ði?u ch?nh t?c ð? ð?ng cõ
;void adjustSpeed(int speed) {
; 0000 005F void adjustSpeed(int speed) {
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 0060     OCR0 = 255 - speed;
;PCODE: $000000D5 VOL: 0
;	speed -> Y+0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 0061 }
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;
;// Kh?i t?o GLCD
;void init_glcd(int bias, int vlcd) {
; 0000 0064 void init_glcd(int bias, int vlcd) {
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 0065     GLCDINIT_t glcd_init_data;
; 0000 0066     glcd_init_data.font = font5x7;
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;	bias -> Y+10
;	vlcd -> Y+8
;	glcd_init_data -> Y+0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 0067     glcd_init_data.temp_coef = 140;
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 0068     glcd_init_data.bias = bias;
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 0069     glcd_init_data.vlcd = vlcd;
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 006A     glcd_init(&glcd_init_data);
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0000 006B }
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;
;// Kh?i t?o Timer
;void init_timer() {
; 0000 006E void init_timer() {
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 006F     ASSR = 0 << AS0;
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 0070     TCCR0 = (1 << WGM00) | (1 << COM01) | (1 << COM00) | (1 << CS02);
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 0071     TCNT0 = 0x00;
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0000 0072     adjustSpeed(0);
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
; 0000 0073 
; 0000 0074     TCCR1A = 0;
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0000 0075     TCCR1B = (1 << CS10);
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0000 0076     TCNT1H = 0xFC;
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
; 0000 0077     TCNT1L = 0xE0;
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 0078     TIMSK = (1 << TOIE1);
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
; 0000 0079     ETIMSK = 0;
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 007A #asm("sei")
;PCODE: $00000114 VOL: 0
	sei
;PCODE: $00000115 VOL: 0
; 0000 007B }
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;
;// Hàm hi?n th? nhi?t ð? và ð? ?m trên GLCD
;void hien_thi_glcd() {
; 0000 007E void hien_thi_glcd() {
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 007F     x = dht11(&nhietdo, &doam);
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0000 0080 
; 0000 0081     // Hi?n th? nhi?t ð?
; 0000 0082     glcd_clear();  // Xóa màn h?nh GLCD trý?c khi hi?n th?
;PCODE: $0000011F VOL: 0
; 0000 0083     glcd_outtextxy(0, 0, "TEMP:");  // Hi?n th? nh?n "TEMP"
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0000 0084     glcd_putchar(48 + nhietdo / 10);  // Hi?n th? ch? s? ð?u tiên c?a nhi?t ð?
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
; 0000 0085     glcd_putchar(48 + nhietdo % 10);  // Hi?n th? ch? s? th? hai c?a nhi?t ð?
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
; 0000 0086 
; 0000 0087     // Hi?n th? ð? ?m
; 0000 0088     glcd_outtextxy(0, 10, "HUMI:");  // Hi?n th? nh?n "HUMI"
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 0089     glcd_putchar(48 + doam / 10);  // Hi?n th? ch? s? ð?u tiên c?a ð? ?m
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
; 0000 008A     glcd_putchar(48 + doam % 10);  // Hi?n th? ch? s? th? hai c?a ð? ?m
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0000 008B }
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0

	.DSEG
_0x42:
	.BYTE 0xC
;
;// Hàm chính
;void main(void) {
; 0000 008E void main(void) {

	.CSEG
;PCODE: $0000014C VOL: 0
; 0000 008F     init_glcd(4, 66);  // Kh?i t?o GLCD
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
; 0000 0090     init_register();   // Kh?i t?o các thanh ghi và ph?n c?ng
;PCODE: $00000152 VOL: 0
; 0000 0091     init_timer();      // Kh?i t?o Timer
;PCODE: $00000153 VOL: 0
; 0000 0092 
; 0000 0093     while (1) {
;PCODE: $00000154 VOL: 0
; 0000 0094         hien_thi_glcd();  // Hi?n th? thông tin nhi?t ð? và ð? ?m trên GLCD
;PCODE: $00000155 VOL: 0
; 0000 0095 
; 0000 0096         if (nhietdo == nhietdo_naodo && doam == doam_naodo)
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
; 0000 0097             adjustSpeed(255);
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
; 0000 0098 
; 0000 0099         if (OCR0 == 0 && nhietdo == nhietdo_naodo2) {
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
; 0000 009A             adjustSpeed(0);
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
; 0000 009B             glcd_outtextxy(20, 20, "SAY XONG!");  // Hi?n th? "SAY XONG!" trên GLCD
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
; 0000 009C             say_xong = true;
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
; 0000 009D             while (1) {};  // D?ng t?i ðây khi motor ð? d?ng
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
; 0000 009E         }
; 0000 009F 
; 0000 00A0         delay_ms(250);
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
; 0000 00A1     }
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
; 0000 00A2 }
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0

	.DSEG
_0x4C:
	.BYTE 0xA
