
AVRASM ver. 2.1.30  E:\Embedded\Embedded-System\ThietKeMayGiat\Bai1\Debug\List\MayGiat_Bai1.asm Sun Dec 22 01:46:14 2024

E:\Embedded\Embedded-System\ThietKeMayGiat\Bai1\Debug\List\MayGiat_Bai1.asm(1090): warning: Register r5 already defined by the .DEF directive
E:\Embedded\Embedded-System\ThietKeMayGiat\Bai1\Debug\List\MayGiat_Bai1.asm(1091): warning: Register r6 already defined by the .DEF directive
E:\Embedded\Embedded-System\ThietKeMayGiat\Bai1\Debug\List\MayGiat_Bai1.asm(1092): warning: Register r7 already defined by the .DEF directive
E:\Embedded\Embedded-System\ThietKeMayGiat\Bai1\Debug\List\MayGiat_Bai1.asm(1093): warning: Register r4 already defined by the .DEF directive
E:\Embedded\Embedded-System\ThietKeMayGiat\Bai1\Debug\List\MayGiat_Bai1.asm(1094): warning: Register r9 already defined by the .DEF directive
E:\Embedded\Embedded-System\ThietKeMayGiat\Bai1\Debug\List\MayGiat_Bai1.asm(1095): warning: Register r8 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _led=R5
                 	.DEF _counter=R6
                 	.DEF _counter_msb=R7
                 	.DEF __lcd_x=R4
                 	.DEF __lcd_y=R9
                 	.DEF __lcd_maxx=R8
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 01a6 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 01d6 	JMP  _timer1_ovf_isr
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _font5x7:
000046 0705
000047 6020
000048 0000
000049 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
00004a 0000
00004b 5f00
00004c 0000
00004d 0700      	.DB  0x0,0x0,0x0,0x5F,0x0,0x0,0x0,0x7
00004e 0700
00004f 1400
000050 147f
000051 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
000052 2a24
000053 2a7f
000054 2312
000055 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
000056 6264
000057 4936
000058 2255
000059 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
00005a 0305
00005b 0000
00005c 1c00
00005d 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
00005e 0000
00005f 2241
000060 001c
000061 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
000062 2a1c
000063 0808
000064 3e08
000065 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
000066 5000
000067 0030
000068 0800
000069 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
00006a 0808
00006b 3000
00006c 0030
00006d 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
00006e 0810
00006f 0204
000070 513e
000071 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
000072 003e
000073 7f42
000074 0040
000075 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
000076 4951
000077 2146
000078 4541
000079 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
00007a 1418
00007b 7f12
00007c 2710
00007d 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
00007e 3945
00007f 4a3c
000080 4949
000081 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
000082 0971
000083 0305
000084 4936
000085 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
000086 0636
000087 4949
000088 1e29
000089 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
00008a 0036
00008b 0000
00008c 3656
00008d 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
00008e 0800
00008f 2214
000090 1441
000091 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
000092 1414
000093 2241
000094 0814
000095 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
000096 5101
000097 0609
000098 4932
000099 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
00009a 7e3e
00009b 1111
00009c 7e11
00009d 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
00009e 4949
00009f 3e36
0000a0 4141
0000a1 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
0000a2 417f
0000a3 2241
0000a4 7f1c
0000a5 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
0000a6 4149
0000a7 097f
0000a8 0109
0000a9 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
0000aa 4141
0000ab 3251
0000ac 087f
0000ad 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
0000ae 007f
0000af 7f41
0000b0 0041
0000b1 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
0000b2 3f41
0000b3 7f01
0000b4 1408
0000b5 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
0000b6 407f
0000b7 4040
0000b8 7f40
0000b9 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
0000ba 7f02
0000bb 047f
0000bc 1008
0000bd 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
0000be 4141
0000bf 3e41
0000c0 097f
0000c1 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
0000c2 3e06
0000c3 5141
0000c4 5e21
0000c5 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
0000c6 2919
0000c7 4646
0000c8 4949
0000c9 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
0000ca 0101
0000cb 017f
0000cc 3f01
0000cd 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
0000ce 3f40
0000cf 201f
0000d0 2040
0000d1 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
0000d2 1820
0000d3 7f20
0000d4 1463
0000d5 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000d6 0363
0000d7 7804
0000d8 0304
0000d9 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000da 4549
0000db 0043
0000dc 7f00
0000dd 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000de 0402
0000df 1008
0000e0 4120
0000e1 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000e2 0000
0000e3 0204
0000e4 0201
0000e5 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000e6 4040
0000e7 4040
0000e8 0100
0000e9 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000ea 2000
0000eb 5454
0000ec 7854
0000ed 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000ee 4444
0000ef 3838
0000f0 4444
0000f1 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000f2 4438
0000f3 4844
0000f4 387f
0000f5 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000f6 1854
0000f7 7e08
0000f8 0109
0000f9 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000fa 5414
0000fb 3c54
0000fc 087f
0000fd 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000fe 0078
0000ff 7d44
000100 0040
000101 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
000102 3d44
000103 0000
000104 107f
000105 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
000106 4100
000107 407f
000108 7c00
000109 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
00010a 7804
00010b 087c
00010c 0404
00010d 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
00010e 4444
00010f 3844
000110 147c
000111 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
000112 0808
000113 1414
000114 7c18
000115 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
000116 0404
000117 4808
000118 5454
000119 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
00011a 3f04
00011b 4044
00011c 3c20
00011d 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
00011e 7c20
00011f 201c
000120 2040
000121 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
000122 3040
000123 3c40
000124 2844
000125 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
000126 0c44
000127 5050
000128 3c50
000129 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
00012a 4c54
00012b 0044
00012c 3608
00012d 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
00012e 0000
00012f 007f
000130 0000
000131 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
000132 0008
000133 0102
000134 0402
000135 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
000136 4141
000137 7f41      	.DB  0x41,0x41,0x41,0x7F
                 __glcd_mask:
000138 0100
000139 0703
00013a 1f0f
00013b 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
E:\Embedded\Embedded-System\ThietKeMayGiat\Bai1\Debug\List\MayGiat_Bai1.asm(1204): warning: .cseg .db misalignment - padding zero byte
00013c 00ff      	.DB  0xFF
                 _tbl10_G103:
00013d 2710
00013e 03e8
00013f 0064
000140 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000141 0001      	.DB  0x1,0x0
                 _tbl16_G103:
000142 1000
000143 0100
000144 0010
000145 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000146 0000
E:\Embedded\Embedded-System\ThietKeMayGiat\Bai1\Debug\List\MayGiat_Bai1.asm(1213): warning: .cseg .db misalignment - padding zero byte
000147 0000      	.DB  0x0,0x0,0x0
                 
                 _0x0:
000148 6142
000149 2074
00014a 6164
00014b 2075      	.DB  0x42,0x61,0x74,0x20,0x64,0x61,0x75,0x20
00014c 6178
00014d 6e20
00014e 6f75
00014f 0063      	.DB  0x78,0x61,0x20,0x6E,0x75,0x6F,0x63,0x0
000150 6142
000151 2074
000152 6164
000153 2075      	.DB  0x42,0x61,0x74,0x20,0x64,0x61,0x75,0x20
000154 6176
000155 0074
000156 6f48
000157 6e61      	.DB  0x76,0x61,0x74,0x0,0x48,0x6F,0x61,0x6E
000158 7420
000159 6168
00015a 686e
00015b 4300      	.DB  0x20,0x74,0x68,0x61,0x6E,0x68,0x0,0x43
00015c 7061
00015d 6e20
00015e 6f75
00015f 0063      	.DB  0x61,0x70,0x20,0x6E,0x75,0x6F,0x63,0x0
000160 6142
000161 2074
000162 6164
000163 2075      	.DB  0x42,0x61,0x74,0x20,0x64,0x61,0x75,0x20
000164 6967
000165 7461
000166 4d00
000167 5941      	.DB  0x67,0x69,0x61,0x74,0x0,0x4D,0x41,0x59
000168 4720
000169 4149
00016a 0054
00016b 5442      	.DB  0x20,0x47,0x49,0x41,0x54,0x0,0x42,0x54
00016c 2e31
00016d 4720
00016e 4149
00016f 0054      	.DB  0x31,0x2E,0x20,0x47,0x49,0x41,0x54,0x0
000170 5442
000171 2e32
000172 5620
000173 5441      	.DB  0x42,0x54,0x32,0x2E,0x20,0x56,0x41,0x54
000174 4200
000175 3154
000176 472e
000177 4149      	.DB  0x0,0x42,0x54,0x31,0x2E,0x47,0x49,0x41
000178 0054
000179 5442
00017a 2e32
00017b 4156      	.DB  0x54,0x0,0x42,0x54,0x32,0x2E,0x56,0x41
00017c 0054      	.DB  0x54,0x0
                 _0x2080003:
00017d c080      	.DB  0x80,0xC0
                 _0x2120060:
E:\Embedded\Embedded-System\ThietKeMayGiat\Bai1\Debug\List\MayGiat_Bai1.asm(1233): warning: .cseg .db misalignment - padding zero byte
00017e 0001      	.DB  0x1
                 _0x2120000:
00017f 4e2d
000180 4e41
000181 4900
000182 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
E:\Embedded\Embedded-System\ThietKeMayGiat\Bai1\Debug\List\MayGiat_Bai1.asm(1236): warning: .cseg .db misalignment - padding zero byte
000183 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000184 0003      	.DW  0x03
000185 0005      	.DW  0x05
000186 028c      	.DW  __REG_VARS*2
                 
000187 0010      	.DW  0x10
000188 0500      	.DW  _0xF
000189 0290      	.DW  _0x0*2
                 
00018a 000c      	.DW  0x0C
00018b 0510      	.DW  _0x10
00018c 02a0      	.DW  _0x0*2+16
                 
00018d 000b      	.DW  0x0B
00018e 051c      	.DW  _0x10+12
00018f 02ac      	.DW  _0x0*2+28
                 
000190 0009      	.DW  0x09
000191 0527      	.DW  _0x13
000192 02b7      	.DW  _0x0*2+39
                 
000193 000d      	.DW  0x0D
000194 0530      	.DW  _0x13+9
000195 02c0      	.DW  _0x0*2+48
                 
000196 0009      	.DW  0x09
000197 053d      	.DW  _0x2A
000198 02cd      	.DW  _0x0*2+61
                 
000199 000a      	.DW  0x0A
00019a 0546      	.DW  _0x2A+9
00019b 02d6      	.DW  _0x0*2+70
                 
00019c 0009      	.DW  0x09
00019d 0550      	.DW  _0x2A+19
00019e 02e0      	.DW  _0x0*2+80
                 
00019f 0002      	.DW  0x02
0001a0 0770      	.DW  __base_y_G104
0001a1 02fa      	.DW  _0x2080003*2
                 
0001a2 0001      	.DW  0x01
0001a3 0774      	.DW  __seed_G109
0001a4 02fc      	.DW  _0x2120060*2
                 
                 _0xFFFFFFFF:
0001a5 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
0001a6 94f8      	CLI
0001a7 27ee      	CLR  R30
0001a8 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0001a9 e0f1      	LDI  R31,1
0001aa bff5      	OUT  MCUCR,R31
0001ab bfe5      	OUT  MCUCR,R30
0001ac 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
0001ae e08d      	LDI  R24,(14-2)+1
0001af e0a2      	LDI  R26,2
0001b0 27bb      	CLR  R27
                 __CLEAR_REG:
0001b1 93ed      	ST   X+,R30
0001b2 958a      	DEC  R24
0001b3 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0001b4 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0001b5 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0001b6 e0a0      	LDI  R26,LOW(__SRAM_START)
0001b7 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0001b8 93ed      	ST   X+,R30
0001b9 9701      	SBIW R24,1
0001ba f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0001bb e0e8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0001bc e0f3      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0001bd 9185      	LPM  R24,Z+
0001be 9195      	LPM  R25,Z+
0001bf 9700      	SBIW R24,0
0001c0 f061      	BREQ __GLOBAL_INI_END
0001c1 91a5      	LPM  R26,Z+
0001c2 91b5      	LPM  R27,Z+
0001c3 9005      	LPM  R0,Z+
0001c4 9015      	LPM  R1,Z+
0001c5 01bf      	MOVW R22,R30
0001c6 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0001c7 9005      	LPM  R0,Z+
0001c8 920d      	ST   X+,R0
0001c9 9701      	SBIW R24,1
0001ca f7e1      	BRNE __GLOBAL_INI_LOOP
0001cb 01fb      	MOVW R30,R22
0001cc cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0001cd bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0001ce efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0001cf bfed      	OUT  SPL,R30
0001d0 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0001d1 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0001d2 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0001d3 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0001d4 940c 0263 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <glcd.h>
                 ;#include <font5x7.h>
                 ;#include <stdio.h>
                 ;#include <alcd.h>
                 ;
                 ;bool led = false;
                 ;int counter = 0;
                 ;
                 ;interrupt [TIM1_OVF] // Interrupt cua timer1
                 ;
                 ;void timer1_ovf_isr(void) {
                 ; 0000 000E void timer1_ovf_isr(void) {
                 
                 	.CSEG
                 _timer1_ovf_isr:
                 ; .FSTART _timer1_ovf_isr
0001d6 920a      	ST   -Y,R0
0001d7 93ea      	ST   -Y,R30
0001d8 93fa      	ST   -Y,R31
0001d9 b7ef      	IN   R30,SREG
0001da 93ea      	ST   -Y,R30
                 ; 0000 000F     // Reinitialize Timer1 value
                 ; 0000 0010     TCNT1H = 0xE0C0 >> 8;
0001db eee0      	LDI  R30,LOW(224)
0001dc bded      	OUT  0x2D,R30
                 ; 0000 0011     TCNT1L = 0xE0C0 & 0xff;
0001dd ece0      	LDI  R30,LOW(192)
0001de bdec      	OUT  0x2C,R30
                 ; 0000 0012 
                 ; 0000 0013     // ?i?u khi?n LED nh?p nh?y
                 ; 0000 0014     if (led) {
0001df 2055      	TST  R5
0001e0 f0b1      	BREQ _0x3
                 ; 0000 0015         if (counter == 2000)
0001e1 ede0      	LDI  R30,LOW(2000)
0001e2 e0f7      	LDI  R31,HIGH(2000)
0001e3 15e6      	CP   R30,R6
0001e4 05f7      	CPC  R31,R7
0001e5 f411      	BRNE _0x4
                 ; 0000 0016             counter = 0;
0001e6 2466      	CLR  R6
0001e7 2477      	CLR  R7
                 ; 0000 0017 
                 ; 0000 0018         if (counter == 0) {
                 _0x4:
0001e8 2c06      	MOV  R0,R6
0001e9 2807      	OR   R0,R7
0001ea f411      	BRNE _0x5
                 ; 0000 0019             PORTD
                 ; 0000 001A             .4 = 0;
0001eb 9894      	CBI  0x12,4
                 ; 0000 001B             PORTD
                 ; 0000 001C             .5 = 1;
0001ec 9a95      	SBI  0x12,5
                 ; 0000 001D         }
                 ; 0000 001E 
                 ; 0000 001F         if (counter == 1000) {
                 _0x5:
0001ed eee8      	LDI  R30,LOW(1000)
0001ee e0f3      	LDI  R31,HIGH(1000)
0001ef 15e6      	CP   R30,R6
0001f0 05f7      	CPC  R31,R7
0001f1 f411      	BRNE _0xA
                 ; 0000 0020             PORTD
                 ; 0000 0021             .5 = 0;
0001f2 9895      	CBI  0x12,5
                 ; 0000 0022             PORTD
                 ; 0000 0023             .4 = 1;
0001f3 9a94      	SBI  0x12,4
                 ; 0000 0024         }
                 ; 0000 0025         counter++;
                 _0xA:
0001f4 01f3      	MOVW R30,R6
0001f5 9631      	ADIW R30,1
0001f6 013f      	MOVW R6,R30
                 ; 0000 0026     }
                 ; 0000 0027 }
                 _0x3:
0001f7 91e9      	LD   R30,Y+
0001f8 bfef      	OUT  SREG,R30
0001f9 91f9      	LD   R31,Y+
0001fa 91e9      	LD   R30,Y+
0001fb 9009      	LD   R0,Y+
0001fc 9518      	RETI
                 ; .FEND
                 ;
                 ;
                 ;void xa_nuoc() {
                 ; 0000 002A void xa_nuoc() {
                 _xa_nuoc:
                 ; .FSTART _xa_nuoc
                 ; 0000 002B     lcd_clear();
0001fd 940e 0864 	CALL SUBOPT_0x0
                 ; 0000 002C     glcd_clear();
                 ; 0000 002D     lcd_putsf("Bat dau xa nuoc");
                +
0001ff e9a0     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
000200 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW2FN _0x0,0
000201 940e 0868 	CALL SUBOPT_0x1
                 ; 0000 002E     glcd_outtextxy(10, 10, "Bat dau xa nuoc");
                +
000203 e0a0     +LDI R26 , LOW ( _0xF + ( 0 ) )
000204 e0b5     +LDI R27 , HIGH ( _0xF + ( 0 ) )
                 	__POINTW2MN _0xF,0
000205 940e 086e 	CALL SUBOPT_0x2
                 ; 0000 002F     delay_ms(2000);
                 ; 0000 0030 }
000207 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0xF:
000500           	.BYTE 0x10
                 ;
                 ;// H?m x? l? ch? d? v?t
                 ;void vat() {
                 ; 0000 0033 void vat() {
                 
                 	.CSEG
                 _vat:
                 ; .FSTART _vat
                 ; 0000 0034     lcd_clear();
000208 940e 0864 	CALL SUBOPT_0x0
                 ; 0000 0035     glcd_clear();
                 ; 0000 0036     lcd_putsf("Bat dau vat");
                +
00020a eaa0     +LDI R26 , LOW ( 2 * _0x0 + ( 16 ) )
00020b e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 16 ) )
                 	__POINTW2FN _0x0,16
00020c 940e 0868 	CALL SUBOPT_0x1
                 ; 0000 0037     glcd_outtextxy(10, 10, "Bat dau vat");
                +
00020e e1a0     +LDI R26 , LOW ( _0x10 + ( 0 ) )
00020f e0b5     +LDI R27 , HIGH ( _0x10 + ( 0 ) )
                 	__POINTW2MN _0x10,0
000210 940e 086e 	CALL SUBOPT_0x2
                 ; 0000 0038     delay_ms(2000);
                 ; 0000 0039     lcd_clear();
000212 940e 0864 	CALL SUBOPT_0x0
                 ; 0000 003A     glcd_clear();
                 ; 0000 003B     xa_nuoc();
000214 dfe8      	RCALL _xa_nuoc
                 ; 0000 003C     lcd_putsf("Hoan thanh");
                +
000215 eaac     +LDI R26 , LOW ( 2 * _0x0 + ( 28 ) )
000216 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 28 ) )
                 	__POINTW2FN _0x0,28
000217 940e 0868 	CALL SUBOPT_0x1
                 ; 0000 003D     glcd_outtextxy(10, 10, "Hoan thanh");
                +
000219 e1ac     +LDI R26 , LOW ( _0x10 + ( 12 ) )
00021a e0b5     +LDI R27 , HIGH ( _0x10 + ( 12 ) )
                 	__POINTW2MN _0x10,12
00021b 940e 0722 	CALL _glcd_outtextxy
                 ; 0000 003E }
00021d 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x10:
000510           	.BYTE 0x17
                 ;
                 ;// H?m x? l? ch? d? gi?t
                 ;void giat() {
                 ; 0000 0041 void giat() {
                 
                 	.CSEG
                 _giat:
                 ; .FSTART _giat
                 ; 0000 0042 
                 ; 0000 0043     // B?t role 1 trong 2 gi?y
                 ; 0000 0044     PORTC
                 ; 0000 0045     .3 = 1;
00021e 9aab      	SBI  0x15,3
                 ; 0000 0046     lcd_clear();
00021f 940e 0864 	CALL SUBOPT_0x0
                 ; 0000 0047     glcd_clear();
                 ; 0000 0048     glcd_outtextxy(10, 10, "Cap nuoc");
000221 e0ea      	LDI  R30,LOW(10)
000222 93ea      	ST   -Y,R30
000223 93ea      	ST   -Y,R30
                +
000224 e2a7     +LDI R26 , LOW ( _0x13 + ( 0 ) )
000225 e0b5     +LDI R27 , HIGH ( _0x13 + ( 0 ) )
                 	__POINTW2MN _0x13,0
000226 940e 0722 	CALL _glcd_outtextxy
                 ; 0000 0049     lcd_putsf("Cap nuoc");
                +
000228 eba7     +LDI R26 , LOW ( 2 * _0x0 + ( 39 ) )
000229 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 39 ) )
                 	__POINTW2FN _0x0,39
00022a 940e 07a2 	CALL _lcd_putsf
                 ; 0000 004A 
                 ; 0000 004B     delay_ms(2000);
00022c eda0      	LDI  R26,LOW(2000)
00022d e0b7      	LDI  R27,HIGH(2000)
00022e 940e 08fd 	CALL _delay_ms
                 ; 0000 004C 
                 ; 0000 004D     glcd_clear();
000230 d1ac      	RCALL _glcd_clear
                 ; 0000 004E     lcd_clear();
000231 940e 0781 	CALL _lcd_clear
                 ; 0000 004F 
                 ; 0000 0050     PORTC
                 ; 0000 0051     .3 = 0;
000233 98ab      	CBI  0x15,3
                 ; 0000 0052 
                 ; 0000 0053     lcd_putsf("Bat dau giat");
                +
000234 eca0     +LDI R26 , LOW ( 2 * _0x0 + ( 48 ) )
000235 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 48 ) )
                 	__POINTW2FN _0x0,48
000236 940e 0868 	CALL SUBOPT_0x1
                 ; 0000 0054     glcd_outtextxy(10, 10, "Bat dau giat");
                +
000238 e3a0     +LDI R26 , LOW ( _0x13 + ( 9 ) )
000239 e0b5     +LDI R27 , HIGH ( _0x13 + ( 9 ) )
                 	__POINTW2MN _0x13,9
00023a 940e 086e 	CALL SUBOPT_0x2
                 ; 0000 0055     delay_ms(2000);
                 ; 0000 0056     lcd_clear();
00023c 940e 0864 	CALL SUBOPT_0x0
                 ; 0000 0057     glcd_clear();
                 ; 0000 0058     delay_ms(50);
00023e e3a2      	LDI  R26,LOW(50)
00023f e0b0      	LDI  R27,0
000240 940e 08fd 	CALL _delay_ms
                 ; 0000 0059 
                 ; 0000 005A     xa_nuoc();
000242 dfba      	RCALL _xa_nuoc
                 ; 0000 005B     vat();
000243 dfc4      	RCALL _vat
                 ; 0000 005C 
                 ; 0000 005D 
                 ; 0000 005E }
000244 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x13:
000527           	.BYTE 0x16
                 ;
                 ;void init_glcd(int bias, int vlcd) { //???
                 ; 0000 0060 void init_glcd(int bias, int vlcd) {
                 
                 	.CSEG
                 _init_glcd:
                 ; .FSTART _init_glcd
                 ; 0000 0061     GLCDINIT_t glcd_init_data;
                 ; 0000 0062     glcd_init_data.font = font5x7;
000245 93ba      	ST   -Y,R27
000246 93aa      	ST   -Y,R26
000247 9728      	SBIW R28,8
                 ;	bias -> Y+10
                 ;	vlcd -> Y+8
                 ;	glcd_init_data -> Y+0
000248 e8ec      	LDI  R30,LOW(_font5x7*2)
000249 e0f0      	LDI  R31,HIGH(_font5x7*2)
00024a 83e8      	ST   Y,R30
00024b 83f9      	STD  Y+1,R31
                 ; 0000 0063     glcd_init_data.temp_coef = 140;
00024c 81ee      	LDD  R30,Y+6
00024d 7fec      	ANDI R30,LOW(0xFC)
00024e 83ee      	STD  Y+6,R30
                 ; 0000 0064     glcd_init_data.bias = bias;
00024f 85ea      	LDD  R30,Y+10
000250 70e7      	ANDI R30,LOW(0x7)
000251 0fee      	LSL  R30
000252 0fee      	LSL  R30
000253 2e0e      	MOV  R0,R30
000254 81ee      	LDD  R30,Y+6
000255 7ee3      	ANDI R30,LOW(0xE3)
000256 29e0      	OR   R30,R0
000257 83ee      	STD  Y+6,R30
                 ; 0000 0065     glcd_init_data.vlcd = vlcd;
000258 85e8      	LDD  R30,Y+8
000259 77ef      	ANDI R30,0x7F
00025a 2e0e      	MOV  R0,R30
00025b 81ef      	LDD  R30,Y+7
00025c 78e0      	ANDI R30,LOW(0x80)
00025d 29e0      	OR   R30,R0
00025e 83ef      	STD  Y+7,R30
                 ; 0000 0066     glcd_init(&glcd_init_data);
00025f 01de      	MOVW R26,R28
000260 d0d5      	RCALL _glcd_init
                 ; 0000 0067 }
000261 940c 06aa 	JMP  _0x2140008
                 ; .FEND
                 ;
                 ;void main(void) {
                 ; 0000 0069 void main(void) {
                 _main:
                 ; .FSTART _main
                 ; 0000 006A     // Kh?i t?o GLCD
                 ; 0000 006B     init_glcd(4, 66);
000263 e0e4      	LDI  R30,LOW(4)
000264 e0f0      	LDI  R31,HIGH(4)
000265 93fa      	ST   -Y,R31
000266 93ea      	ST   -Y,R30
000267 e4a2      	LDI  R26,LOW(66)
000268 e0b0      	LDI  R27,0
000269 dfdb      	RCALL _init_glcd
                 ; 0000 006C     lcd_init(16);
00026a e1a0      	LDI  R26,LOW(16)
00026b 940e 07b4 	CALL _lcd_init
                 ; 0000 006D     // K?o l?n BT1
                 ; 0000 006E     DDRB
                 ; 0000 006F     .2 = 0;
00026d 98ba      	CBI  0x17,2
                 ; 0000 0070     PORTB
                 ; 0000 0071     .2 = 1;
00026e 9ac2      	SBI  0x18,2
                 ; 0000 0072 
                 ; 0000 0073     // K?o l?n BT2
                 ; 0000 0074     DDRB
                 ; 0000 0075     .3 = 0;
00026f 98bb      	CBI  0x17,3
                 ; 0000 0076     PORTB
                 ; 0000 0077     .3 = 1;
000270 9ac3      	SBI  0x18,3
                 ; 0000 0078 
                 ; 0000 0079     // Role 1 v? 2
                 ; 0000 007A     DDRC
                 ; 0000 007B     .3 = 1;
000271 9aa3      	SBI  0x14,3
                 ; 0000 007C     DDRC
                 ; 0000 007D     .2 = 1;
000272 9aa2      	SBI  0x14,2
                 ; 0000 007E 
                 ; 0000 007F     // LED
                 ; 0000 0080     DDRD
                 ; 0000 0081     .5 = 1;
000273 9a8d      	SBI  0x11,5
                 ; 0000 0082     DDRD
                 ; 0000 0083     .4 = 1;
000274 9a8c      	SBI  0x11,4
                 ; 0000 0084 
                 ; 0000 0085     // Kh?i t?o d?ng co v? timer
                 ; 0000 0086     DDRB
                 ; 0000 0087     .4 = 1;
000275 9abc      	SBI  0x17,4
                 ; 0000 0088     DDRD
                 ; 0000 0089     .7 = 1;
000276 9a8f      	SBI  0x11,7
                 ; 0000 008A 
                 ; 0000 008B     ASSR = 0 << AS0;
000277 e0e0      	LDI  R30,LOW(0)
000278 bfe0      	OUT  0x30,R30
                 ; 0000 008C     TCCR0 = (1 << WGM00) | (1 << COM01) | (1 << COM00) | (0 << WGM01) | (1 << CS02) | (0 << CS01) | (0 << CS00);
000279 e7e4      	LDI  R30,LOW(116)
00027a bfe3      	OUT  0x33,R30
                 ; 0000 008D     TCNT0 = 0x00;
00027b e0e0      	LDI  R30,LOW(0)
00027c bfe2      	OUT  0x32,R30
                 ; 0000 008E     TCCR1A = (0 << COM1A1) | (0 << COM1A0) | (0 << COM1B1) | (0 << COM1B0) | (0 << COM1C1) | (0 << COM1C0) |
                 ; 0000 008F              (0 << WGM11) | (0 << WGM10);
00027d bdef      	OUT  0x2F,R30
                 ; 0000 0090     TCCR1B = (0 << ICNC1) | (0 << ICES1) | (0 << WGM13) | (0 << WGM12) | (0 << CS12) | (0 << CS11) | (1 << CS10);
00027e e0e1      	LDI  R30,LOW(1)
00027f bdee      	OUT  0x2E,R30
                 ; 0000 0091     TCNT1H = 0xE0;
000280 eee0      	LDI  R30,LOW(224)
000281 bded      	OUT  0x2D,R30
                 ; 0000 0092     TCNT1L = 0xC0;
000282 ece0      	LDI  R30,LOW(192)
000283 bdec      	OUT  0x2C,R30
                 ; 0000 0093 
                 ; 0000 0094     // Kh?i t?o ng?t cho timer1
                 ; 0000 0095     TIMSK = (0 << OCIE2) | (0 << TOIE2) | (0 << TICIE1) | (0 << OCIE1A) | (0 << OCIE1B) | (1 << TOIE1) | (0 << OCIE0) |
                 ; 0000 0096             (0 << TOIE0);
000284 e0e4      	LDI  R30,LOW(4)
000285 bfe7      	OUT  0x37,R30
                 ; 0000 0097     ETIMSK = (0 << TICIE3) | (0 << OCIE3A) | (0 << OCIE3B) | (0 << TOIE3) | (0 << OCIE3C) | (0 << OCIE1C);
000286 e0e0      	LDI  R30,LOW(0)
000287 93e0 007d 	STS  125,R30
                 ; 0000 0098 #asm("sei")
000289 9478      	sei
                 ; 0000 0099 
                 ; 0000 009A     // Hi?n th? menu ban d?u
                 ; 0000 009B     glcd_outtextxy(10, 10, "MAY GIAT");
00028a e0ea      	LDI  R30,LOW(10)
00028b 93ea      	ST   -Y,R30
00028c 93ea      	ST   -Y,R30
                +
00028d e3ad     +LDI R26 , LOW ( _0x2A + ( 0 ) )
00028e e0b5     +LDI R27 , HIGH ( _0x2A + ( 0 ) )
                 	__POINTW2MN _0x2A,0
00028f 940e 0722 	CALL _glcd_outtextxy
                 ; 0000 009C     glcd_outtextxy(10, 20, "BT1. GIAT");
000291 e0ea      	LDI  R30,LOW(10)
000292 93ea      	ST   -Y,R30
000293 e1e4      	LDI  R30,LOW(20)
000294 93ea      	ST   -Y,R30
                +
000295 e4a6     +LDI R26 , LOW ( _0x2A + ( 9 ) )
000296 e0b5     +LDI R27 , HIGH ( _0x2A + ( 9 ) )
                 	__POINTW2MN _0x2A,9
000297 940e 0722 	CALL _glcd_outtextxy
                 ; 0000 009D     glcd_outtextxy(10, 30, "BT2. VAT");
000299 e0ea      	LDI  R30,LOW(10)
00029a 93ea      	ST   -Y,R30
00029b e1ee      	LDI  R30,LOW(30)
00029c 93ea      	ST   -Y,R30
                +
00029d e5a0     +LDI R26 , LOW ( _0x2A + ( 19 ) )
00029e e0b5     +LDI R27 , HIGH ( _0x2A + ( 19 ) )
                 	__POINTW2MN _0x2A,19
00029f 940e 0722 	CALL _glcd_outtextxy
                 ; 0000 009E 
                 ; 0000 009F //    lcd_putsf("MAY GIAT");
                 ; 0000 00A0 //    lcd_gotoxy(0, 1);
                 ; 0000 00A1 //
                 ; 0000 00A2     lcd_putsf("BT1.GIAT");
                +
0002a1 eea9     +LDI R26 , LOW ( 2 * _0x0 + ( 89 ) )
0002a2 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 89 ) )
                 	__POINTW2FN _0x0,89
0002a3 940e 07a2 	CALL _lcd_putsf
                 ; 0000 00A3     lcd_gotoxy(0, 1);
0002a5 e0e0      	LDI  R30,LOW(0)
0002a6 93ea      	ST   -Y,R30
0002a7 e0a1      	LDI  R26,LOW(1)
0002a8 940e 0775 	CALL _lcd_gotoxy
                 ; 0000 00A4     lcd_putsf("BT2.VAT");
                +
0002aa efa2     +LDI R26 , LOW ( 2 * _0x0 + ( 98 ) )
0002ab e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 98 ) )
                 	__POINTW2FN _0x0,98
0002ac 940e 07a2 	CALL _lcd_putsf
                 ; 0000 00A5 
                 ; 0000 00A6     while (1) {
                 _0x2B:
                 ; 0000 00A7         if (PINB.2 == 0)
0002ae 9bb2      	SBIS 0x16,2
                 ; 0000 00A8         giat();
0002af df6e      	RCALL _giat
                 ; 0000 00A9         if (PINB.3 == 0)
0002b0 9bb3      	SBIS 0x16,3
                 ; 0000 00AA         vat();
0002b1 df56      	RCALL _vat
                 ; 0000 00AB         delay_ms(250);
0002b2 efaa      	LDI  R26,LOW(250)
0002b3 e0b0      	LDI  R27,0
0002b4 940e 08fd 	CALL _delay_ms
                 ; 0000 00AC     }
0002b6 cff7      	RJMP _0x2B
                 ; 0000 00AD }
                 _0x30:
0002b7 cfff      	RJMP _0x30
                 ; .FEND
                 
                 	.DSEG
                 _0x2A:
00053d           	.BYTE 0x1C
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _pcd8544_delay_G100:
                 ; .FSTART _pcd8544_delay_G100
0002b8 9508      	RET
                 ; .FEND
                 _pcd8544_wrbus_G100:
                 ; .FSTART _pcd8544_wrbus_G100
0002b9 93aa      	ST   -Y,R26
0002ba 931a      	ST   -Y,R17
0002bb 91e0 0065 	LDS  R30,101
0002bd 7eef      	ANDI R30,0xEF
0002be 93e0 0065 	STS  101,R30
0002c0 e018      	LDI  R17,LOW(8)
                 _0x2000004:
0002c1 dff6      	RCALL _pcd8544_delay_G100
0002c2 81e9      	LDD  R30,Y+1
0002c3 78e0      	ANDI R30,LOW(0x80)
0002c4 f021      	BREQ _0x2000006
0002c5 91e0 0065 	LDS  R30,101
0002c7 60e2      	ORI  R30,2
0002c8 c003      	RJMP _0x20000A0
                 _0x2000006:
0002c9 91e0 0065 	LDS  R30,101
0002cb 7fed      	ANDI R30,0xFD
                 _0x20000A0:
0002cc 93e0 0065 	STS  101,R30
0002ce 81e9      	LDD  R30,Y+1
0002cf 0fee      	LSL  R30
0002d0 83e9      	STD  Y+1,R30
0002d1 dfe6      	RCALL _pcd8544_delay_G100
0002d2 91e0 0065 	LDS  R30,101
0002d4 60e4      	ORI  R30,4
0002d5 93e0 0065 	STS  101,R30
0002d7 dfe0      	RCALL _pcd8544_delay_G100
0002d8 91e0 0065 	LDS  R30,101
0002da 7feb      	ANDI R30,0xFB
0002db 93e0 0065 	STS  101,R30
0002dd 5011      	SUBI R17,LOW(1)
0002de f711      	BRNE _0x2000004
0002df 91e0 0065 	LDS  R30,101
0002e1 61e0      	ORI  R30,0x10
0002e2 93e0 0065 	STS  101,R30
0002e4 8118      	LDD  R17,Y+0
0002e5 940c 07fc 	JMP  _0x2140003
                 ; .FEND
                 _pcd8544_wrcmd:
                 ; .FSTART _pcd8544_wrcmd
0002e7 93aa      	ST   -Y,R26
0002e8 91e0 0065 	LDS  R30,101
0002ea 7fee      	ANDI R30,0xFE
0002eb 93e0 0065 	STS  101,R30
0002ed 81a8      	LD   R26,Y
0002ee dfca      	RCALL _pcd8544_wrbus_G100
0002ef 940c 07e1 	JMP  _0x2140005
                 ; .FEND
                 _pcd8544_wrdata_G100:
                 ; .FSTART _pcd8544_wrdata_G100
0002f1 93aa      	ST   -Y,R26
0002f2 91e0 0065 	LDS  R30,101
0002f4 60e1      	ORI  R30,1
0002f5 93e0 0065 	STS  101,R30
0002f7 81a8      	LD   R26,Y
0002f8 dfc0      	RCALL _pcd8544_wrbus_G100
0002f9 940c 07e1 	JMP  _0x2140005
                 ; .FEND
                 _pcd8544_setaddr_G100:
                 ; .FSTART _pcd8544_setaddr_G100
0002fb 93aa      	ST   -Y,R26
0002fc 931a      	ST   -Y,R17
0002fd 81e9      	LDD  R30,Y+1
0002fe 95e6      	LSR  R30
0002ff 95e6      	LSR  R30
000300 95e6      	LSR  R30
000301 2f1e      	MOV  R17,R30
000302 e5e4      	LDI  R30,LOW(84)
000303 9fe1      	MUL  R30,R17
000304 01f0      	MOVW R30,R0
000305 01df      	MOVW R26,R30
000306 81ea      	LDD  R30,Y+2
000307 e0f0      	LDI  R31,0
000308 0fea      	ADD  R30,R26
000309 1ffb      	ADC  R31,R27
00030a 93e0 0576 	STS  _gfx_addr_G100,R30
00030c 93f0 0577 	STS  _gfx_addr_G100+1,R31
00030e 2fe1      	MOV  R30,R17
00030f 8118      	LDD  R17,Y+0
000310 940c 0843 	JMP  _0x2140002
                 ; .FEND
                 _pcd8544_gotoxy:
                 ; .FSTART _pcd8544_gotoxy
000312 93aa      	ST   -Y,R26
000313 81e9      	LDD  R30,Y+1
000314 68e0      	ORI  R30,0x80
000315 2fae      	MOV  R26,R30
000316 dfd0      	RCALL _pcd8544_wrcmd
000317 81e9      	LDD  R30,Y+1
000318 93ea      	ST   -Y,R30
000319 81a9      	LDD  R26,Y+1
00031a dfe0      	RCALL _pcd8544_setaddr_G100
00031b 64e0      	ORI  R30,0x40
00031c 2fae      	MOV  R26,R30
00031d dfc9      	RCALL _pcd8544_wrcmd
00031e 940c 07fc 	JMP  _0x2140003
                 ; .FEND
                 _pcd8544_rdbyte:
                 ; .FSTART _pcd8544_rdbyte
000320 93aa      	ST   -Y,R26
000321 81e9      	LDD  R30,Y+1
000322 93ea      	ST   -Y,R30
000323 81a9      	LDD  R26,Y+1
000324 dfed      	RCALL _pcd8544_gotoxy
000325 91e0 0576 	LDS  R30,_gfx_addr_G100
000327 91f0 0577 	LDS  R31,_gfx_addr_G100+1
000329 58e8      	SUBI R30,LOW(-_gfx_buffer_G100)
00032a 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G100)
00032b 81e0      	LD   R30,Z
00032c 940c 07fc 	JMP  _0x2140003
                 ; .FEND
                 _pcd8544_wrbyte:
                 ; .FSTART _pcd8544_wrbyte
00032e 93aa      	ST   -Y,R26
00032f 940e 0874 	CALL SUBOPT_0x3
000331 81a8      	LD   R26,Y
000332 83a0      	STD  Z+0,R26
000333 dfbd      	RCALL _pcd8544_wrdata_G100
000334 940c 07e1 	JMP  _0x2140005
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
000336 93ba      	ST   -Y,R27
000337 93aa      	ST   -Y,R26
000338 940e 0946 	CALL __SAVELOCR4
00033a 91e0 0064 	LDS  R30,100
00033c 61e0      	ORI  R30,0x10
00033d 940e 087f 	CALL SUBOPT_0x4
00033f 61e0      	ORI  R30,0x10
000340 93e0 0065 	STS  101,R30
000342 91e0 0064 	LDS  R30,100
000344 60e4      	ORI  R30,4
000345 940e 087f 	CALL SUBOPT_0x4
000347 7feb      	ANDI R30,0xFB
000348 93e0 0065 	STS  101,R30
00034a 91e0 0064 	LDS  R30,100
00034c 60e2      	ORI  R30,2
00034d 93e0 0064 	STS  100,R30
00034f 91e0 0064 	LDS  R30,100
000351 60e1      	ORI  R30,1
000352 93e0 0064 	STS  100,R30
000354 91e0 0064 	LDS  R30,100
000356 60e8      	ORI  R30,8
000357 940e 087f 	CALL SUBOPT_0x4
000359 7fe7      	ANDI R30,0XF7
00035a 93e0 0065 	STS  101,R30
00035c e0aa      	LDI  R26,LOW(10)
00035d e0b0      	LDI  R27,0
00035e 940e 08fd 	CALL _delay_ms
000360 91e0 0065 	LDS  R30,101
000362 60e8      	ORI  R30,8
000363 93e0 0065 	STS  101,R30
000365 81ec      	LDD  R30,Y+4
000366 81fd      	LDD  R31,Y+4+1
000367 9730      	SBIW R30,0
000368 f121      	BREQ _0x2000008
000369 81e6      	LDD  R30,Z+6
00036a 70e3      	ANDI R30,LOW(0x3)
00036b 2f1e      	MOV  R17,R30
00036c 81ec      	LDD  R30,Y+4
00036d 81fd      	LDD  R31,Y+4+1
00036e 81e6      	LDD  R30,Z+6
00036f 95e6      	LSR  R30
000370 95e6      	LSR  R30
000371 70e7      	ANDI R30,LOW(0x7)
000372 2f0e      	MOV  R16,R30
000373 81ec      	LDD  R30,Y+4
000374 81fd      	LDD  R31,Y+4+1
000375 81e7      	LDD  R30,Z+7
000376 77ef      	ANDI R30,0x7F
000377 2f3e      	MOV  R19,R30
000378 81ac      	LDD  R26,Y+4
000379 81bd      	LDD  R27,Y+4+1
00037a 940e 091f 	CALL __GETW1P
                +
00037c 93e0 055d+STS _glcd_state + ( 4 ) , R30
00037e 93f0 055e+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
000380 9612      	ADIW R26,2
000381 940e 091f 	CALL __GETW1P
                +
000383 93e0 0572+STS _glcd_state + ( 25 ) , R30
000385 93f0 0573+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
000387 81ac      	LDD  R26,Y+4
000388 81bd      	LDD  R27,Y+4+1
000389 9614      	ADIW R26,4
00038a 940e 091f 	CALL __GETW1P
00038c c00d      	RJMP _0x20000A1
                 _0x2000008:
00038d e010      	LDI  R17,LOW(0)
00038e e003      	LDI  R16,LOW(3)
00038f e332      	LDI  R19,LOW(50)
000390 e0e0      	LDI  R30,LOW(0)
000391 e0f0      	LDI  R31,HIGH(0)
                +
000392 93e0 055d+STS _glcd_state + ( 4 ) , R30
000394 93f0 055e+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
                +
000396 93e0 0572+STS _glcd_state + ( 25 ) , R30
000398 93f0 0573+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
                 _0x20000A1:
                +
00039a 93e0 0574+STS _glcd_state + ( 27 ) , R30
00039c 93f0 0575+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
00039e e2a1      	LDI  R26,LOW(33)
00039f df47      	RCALL _pcd8544_wrcmd
0003a0 2fe1      	MOV  R30,R17
0003a1 60e4      	ORI  R30,4
0003a2 2fae      	MOV  R26,R30
0003a3 df43      	RCALL _pcd8544_wrcmd
0003a4 2fe0      	MOV  R30,R16
0003a5 61e0      	ORI  R30,0x10
0003a6 2fae      	MOV  R26,R30
0003a7 df3f      	RCALL _pcd8544_wrcmd
0003a8 2fe3      	MOV  R30,R19
0003a9 68e0      	ORI  R30,0x80
0003aa 2fae      	MOV  R26,R30
0003ab df3b      	RCALL _pcd8544_wrcmd
0003ac e2a0      	LDI  R26,LOW(32)
0003ad df39      	RCALL _pcd8544_wrcmd
0003ae e0a1      	LDI  R26,LOW(1)
0003af d022      	RCALL _glcd_display
0003b0 e0e1      	LDI  R30,LOW(1)
0003b1 93e0 0559 	STS  _glcd_state,R30
0003b3 e0e0      	LDI  R30,LOW(0)
                +
0003b4 93e0 055a+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
0003b6 e0e1      	LDI  R30,LOW(1)
                +
0003b7 93e0 055f+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
0003b9 93e0 0560+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
0003bb 93e0 0561+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
0003bd efef      	LDI  R30,LOW(255)
                +
0003be 93e0 0562+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
0003c0 e0e1      	LDI  R30,LOW(1)
                +
0003c1 93e0 0569+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
0003c3 e6ea     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
0003c4 e0f5     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
0003c5 93fa      	ST   -Y,R31
0003c6 93ea      	ST   -Y,R30
0003c7 efef      	LDI  R30,LOW(255)
0003c8 93ea      	ST   -Y,R30
0003c9 e0a8      	LDI  R26,LOW(8)
0003ca e0b0      	LDI  R27,0
0003cb 940e 07e3 	CALL _memset
0003cd d00f      	RCALL _glcd_clear
0003ce e0e1      	LDI  R30,LOW(1)
0003cf 940e 094d 	CALL __LOADLOCR4
0003d1 c060      	RJMP _0x214000A
                 ; .FEND
                 _glcd_display:
                 ; .FSTART _glcd_display
0003d2 93aa      	ST   -Y,R26
0003d3 81e8      	LD   R30,Y
0003d4 30e0      	CPI  R30,0
0003d5 f011      	BREQ _0x200000A
0003d6 e0ec      	LDI  R30,LOW(12)
0003d7 c001      	RJMP _0x200000B
                 _0x200000A:
0003d8 e0e8      	LDI  R30,LOW(8)
                 _0x200000B:
0003d9 2fae      	MOV  R26,R30
0003da df0c      	RCALL _pcd8544_wrcmd
0003db 940c 07e1 	JMP  _0x2140005
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
0003dd 940e 0946 	CALL __SAVELOCR4
0003df e030      	LDI  R19,0
                +
0003e0 91e0 055a+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
0003e2 30e0      	CPI  R30,0
0003e3 f009      	BREQ _0x200000D
0003e4 ef3f      	LDI  R19,LOW(255)
                 _0x200000D:
0003e5 e0e0      	LDI  R30,LOW(0)
0003e6 93ea      	ST   -Y,R30
0003e7 e0a0      	LDI  R26,LOW(0)
0003e8 df29      	RCALL _pcd8544_gotoxy
                +
0003e9 ef08     +LDI R16 , LOW ( 504 )
0003ea e011     +LDI R17 , HIGH ( 504 )
                 	__GETWRN 16,17,504
                 _0x200000E:
0003eb 01f8      	MOVW R30,R16
                +
0003ec 5001     +SUBI R16 , LOW ( 1 )
0003ed 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
0003ee 9730      	SBIW R30,0
0003ef f019      	BREQ _0x2000010
0003f0 2fa3      	MOV  R26,R19
0003f1 df3c      	RCALL _pcd8544_wrbyte
0003f2 cff8      	RJMP _0x200000E
                 _0x2000010:
0003f3 e0e0      	LDI  R30,LOW(0)
0003f4 93ea      	ST   -Y,R30
0003f5 e0a0      	LDI  R26,LOW(0)
0003f6 d340      	RCALL _glcd_moveto
0003f7 940e 094d 	CALL __LOADLOCR4
0003f9 940c 0862 	JMP  _0x2140001
                 ; .FEND
                 _pcd8544_wrmasked_G100:
                 ; .FSTART _pcd8544_wrmasked_G100
0003fb 93aa      	ST   -Y,R26
0003fc 931a      	ST   -Y,R17
0003fd 81ed      	LDD  R30,Y+5
0003fe 93ea      	ST   -Y,R30
0003ff 81ad      	LDD  R26,Y+5
000400 df1f      	RCALL _pcd8544_rdbyte
000401 2f1e      	MOV  R17,R30
000402 81e9      	LDD  R30,Y+1
000403 30e7      	CPI  R30,LOW(0x7)
000404 f011      	BREQ _0x2000020
000405 30e8      	CPI  R30,LOW(0x8)
000406 f439      	BRNE _0x2000021
                 _0x2000020:
000407 81eb      	LDD  R30,Y+3
000408 93ea      	ST   -Y,R30
000409 81aa      	LDD  R26,Y+2
00040a 940e 07fe 	CALL _glcd_mappixcolor1bit
00040c 83eb      	STD  Y+3,R30
00040d c008      	RJMP _0x2000022
                 _0x2000021:
00040e 30e3      	CPI  R30,LOW(0x3)
00040f f421      	BRNE _0x2000024
000410 81eb      	LDD  R30,Y+3
000411 95e0      	COM  R30
000412 83eb      	STD  Y+3,R30
000413 c002      	RJMP _0x2000025
                 _0x2000024:
000414 30e0      	CPI  R30,0
000415 f421      	BRNE _0x2000026
                 _0x2000025:
                 _0x2000022:
000416 81ea      	LDD  R30,Y+2
000417 95e0      	COM  R30
000418 231e      	AND  R17,R30
000419 c002      	RJMP _0x2000027
                 _0x2000026:
00041a 30e2      	CPI  R30,LOW(0x2)
00041b f429      	BRNE _0x2000028
                 _0x2000027:
00041c 81ea      	LDD  R30,Y+2
00041d 81ab      	LDD  R26,Y+3
00041e 23ea      	AND  R30,R26
00041f 2b1e      	OR   R17,R30
000420 c00e      	RJMP _0x200001E
                 _0x2000028:
000421 30e1      	CPI  R30,LOW(0x1)
000422 f429      	BRNE _0x2000029
000423 81ea      	LDD  R30,Y+2
000424 81ab      	LDD  R26,Y+3
000425 23ea      	AND  R30,R26
000426 271e      	EOR  R17,R30
000427 c007      	RJMP _0x200001E
                 _0x2000029:
000428 30e4      	CPI  R30,LOW(0x4)
000429 f429      	BRNE _0x200001E
00042a 81ea      	LDD  R30,Y+2
00042b 95e0      	COM  R30
00042c 81ab      	LDD  R26,Y+3
00042d 2bea      	OR   R30,R26
00042e 231e      	AND  R17,R30
                 _0x200001E:
00042f 2fa1      	MOV  R26,R17
000430 defd      	RCALL _pcd8544_wrbyte
000431 8118      	LDD  R17,Y+0
                 _0x214000A:
000432 9626      	ADIW R28,6
000433 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
000434 93aa      	ST   -Y,R26
000435 9723      	SBIW R28,3
000436 940e 0944 	CALL __SAVELOCR6
000438 89a8      	LDD  R26,Y+16
000439 35a4      	CPI  R26,LOW(0x54)
00043a f448      	BRSH _0x200002C
00043b 85af      	LDD  R26,Y+15
00043c 33a0      	CPI  R26,LOW(0x30)
00043d f430      	BRSH _0x200002C
00043e 85ae      	LDD  R26,Y+14
00043f 30a0      	CPI  R26,LOW(0x0)
000440 f019      	BREQ _0x200002C
000441 85ad      	LDD  R26,Y+13
000442 30a0      	CPI  R26,LOW(0x0)
000443 f409      	BRNE _0x200002B
                 _0x200002C:
000444 c1cc      	RJMP _0x2140009
                 _0x200002B:
000445 85ee      	LDD  R30,Y+14
000446 87e8      	STD  Y+8,R30
000447 89a8      	LDD  R26,Y+16
000448 27bb      	CLR  R27
000449 85ee      	LDD  R30,Y+14
00044a e0f0      	LDI  R31,0
00044b 0fae      	ADD  R26,R30
00044c 1fbf      	ADC  R27,R31
00044d 35a5      	CPI  R26,LOW(0x55)
00044e e0e0      	LDI  R30,HIGH(0x55)
00044f 07be      	CPC  R27,R30
000450 f020      	BRLO _0x200002E
000451 89a8      	LDD  R26,Y+16
000452 e5e4      	LDI  R30,LOW(84)
000453 1bea      	SUB  R30,R26
000454 87ee      	STD  Y+14,R30
                 _0x200002E:
000455 852d      	LDD  R18,Y+13
000456 85af      	LDD  R26,Y+15
000457 27bb      	CLR  R27
000458 85ed      	LDD  R30,Y+13
000459 e0f0      	LDI  R31,0
00045a 0fae      	ADD  R26,R30
00045b 1fbf      	ADC  R27,R31
00045c 97d1      	SBIW R26,49
00045d f020      	BRLO _0x200002F
00045e 85af      	LDD  R26,Y+15
00045f e3e0      	LDI  R30,LOW(48)
000460 1bea      	SUB  R30,R26
000461 87ed      	STD  Y+13,R30
                 _0x200002F:
000462 85a9      	LDD  R26,Y+9
000463 30a6      	CPI  R26,LOW(0x6)
000464 f009      	BREQ PC+2
000465 c05b      	RJMP _0x2000030
000466 85ec      	LDD  R30,Y+12
000467 30e1      	CPI  R30,LOW(0x1)
000468 f409      	BRNE _0x2000034
000469 c1a7      	RJMP _0x2140009
                 _0x2000034:
00046a 30e3      	CPI  R30,LOW(0x3)
00046b f439      	BRNE _0x2000037
                +
00046c 91e0 0574+LDS R30 , _glcd_state + ( 27 )
00046e 91f0 0575+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
000470 9730      	SBIW R30,0
000471 f409      	BRNE _0x2000036
000472 c19e      	RJMP _0x2140009
                 _0x2000036:
                 _0x2000037:
000473 8508      	LDD  R16,Y+8
000474 85ed      	LDD  R30,Y+13
000475 95e6      	LSR  R30
000476 95e6      	LSR  R30
000477 95e6      	LSR  R30
000478 2f3e      	MOV  R19,R30
000479 2fe2      	MOV  R30,R18
00047a 70e7      	ANDI R30,LOW(0x7)
00047b f419      	BRNE _0x2000039
00047c 85ad      	LDD  R26,Y+13
00047d 172a      	CP   R18,R26
00047e f0e9      	BREQ _0x2000038
                 _0x2000039:
00047f 2fa0      	MOV  R26,R16
000480 27bb      	CLR  R27
000481 2fe3      	MOV  R30,R19
000482 e0f0      	LDI  R31,0
000483 940e 0917 	CALL __MULW12U
000485 85aa      	LDD  R26,Y+10
000486 85bb      	LDD  R27,Y+10+1
000487 940e 0884 	CALL SUBOPT_0x5
000489 9526      	LSR  R18
00048a 9526      	LSR  R18
00048b 9526      	LSR  R18
00048c 2f53      	MOV  R21,R19
                 _0x200003B:
00048d 935f      	PUSH R21
00048e 5f5f      	SUBI R21,-1
00048f 2fe2      	MOV  R30,R18
000490 91af      	POP  R26
000491 17ea      	CP   R30,R26
000492 f048      	BRLO _0x200003D
000493 2f10      	MOV  R17,R16
                 _0x200003E:
000494 2fe1      	MOV  R30,R17
000495 5011      	SUBI R17,1
000496 30e0      	CPI  R30,0
000497 f019      	BREQ _0x2000040
000498 940e 0889 	CALL SUBOPT_0x6
00049a cff9      	RJMP _0x200003E
                 _0x2000040:
00049b cff1      	RJMP _0x200003B
                 _0x200003D:
                 _0x2000038:
00049c 85ae      	LDD  R26,Y+14
00049d 170a      	CP   R16,R26
00049e f111      	BREQ _0x2000041
00049f 85ee      	LDD  R30,Y+14
0004a0 85aa      	LDD  R26,Y+10
0004a1 85bb      	LDD  R27,Y+10+1
0004a2 e0f0      	LDI  R31,0
0004a3 940e 0884 	CALL SUBOPT_0x5
0004a5 85ed      	LDD  R30,Y+13
0004a6 70e7      	ANDI R30,LOW(0x7)
0004a7 f009      	BREQ _0x2000042
0004a8 5f3f      	SUBI R19,-LOW(1)
                 _0x2000042:
0004a9 e020      	LDI  R18,LOW(0)
                 _0x2000043:
0004aa 932f      	PUSH R18
0004ab 5f2f      	SUBI R18,-1
0004ac 2fe3      	MOV  R30,R19
0004ad 91af      	POP  R26
0004ae 17ae      	CP   R26,R30
0004af f488      	BRSH _0x2000045
0004b0 851e      	LDD  R17,Y+14
                 _0x2000046:
0004b1 931f      	PUSH R17
0004b2 5f1f      	SUBI R17,-1
0004b3 2fe0      	MOV  R30,R16
0004b4 91af      	POP  R26
0004b5 17ae      	CP   R26,R30
0004b6 f418      	BRSH _0x2000048
0004b7 940e 0889 	CALL SUBOPT_0x6
0004b9 cff7      	RJMP _0x2000046
                 _0x2000048:
0004ba 85ee      	LDD  R30,Y+14
0004bb 81ae      	LDD  R26,Y+6
0004bc 81bf      	LDD  R27,Y+6+1
0004bd e0f0      	LDI  R31,0
0004be 940e 0884 	CALL SUBOPT_0x5
0004c0 cfe9      	RJMP _0x2000043
                 _0x2000045:
                 _0x2000041:
                 _0x2000030:
0004c1 85ef      	LDD  R30,Y+15
0004c2 70e7      	ANDI R30,LOW(0x7)
0004c3 2f3e      	MOV  R19,R30
                 _0x2000049:
0004c4 85ed      	LDD  R30,Y+13
0004c5 30e0      	CPI  R30,0
0004c6 f409      	BRNE PC+2
0004c7 c149      	RJMP _0x200004B
0004c8 85ea      	LDD  R30,Y+10
0004c9 85fb      	LDD  R31,Y+10+1
0004ca 83ee      	STD  Y+6,R30
0004cb 83ff      	STD  Y+6+1,R31
0004cc e010      	LDI  R17,LOW(0)
0004cd 8908      	LDD  R16,Y+16
0004ce 3030      	CPI  R19,0
0004cf f009      	BREQ PC+2
0004d0 c063      	RJMP _0x200004C
0004d1 85ad      	LDD  R26,Y+13
0004d2 30a8      	CPI  R26,LOW(0x8)
0004d3 f408      	BRSH PC+2
0004d4 c05a      	RJMP _0x200004D
0004d5 85e9      	LDD  R30,Y+9
0004d6 30e0      	CPI  R30,0
0004d7 f011      	BREQ _0x2000052
0004d8 30e3      	CPI  R30,LOW(0x3)
0004d9 f409      	BRNE _0x2000053
                 _0x2000052:
0004da c002      	RJMP _0x2000054
                 _0x2000053:
0004db 30e7      	CPI  R30,LOW(0x7)
0004dc f409      	BRNE _0x2000055
                 _0x2000054:
0004dd c002      	RJMP _0x2000056
                 _0x2000055:
0004de 30e8      	CPI  R30,LOW(0x8)
0004df f409      	BRNE _0x2000057
                 _0x2000056:
0004e0 c002      	RJMP _0x2000058
                 _0x2000057:
0004e1 30e9      	CPI  R30,LOW(0x9)
0004e2 f409      	BRNE _0x2000059
                 _0x2000058:
0004e3 c002      	RJMP _0x200005A
                 _0x2000059:
0004e4 30ea      	CPI  R30,LOW(0xA)
0004e5 f421      	BRNE _0x200005B
                 _0x200005A:
0004e6 930a      	ST   -Y,R16
0004e7 89a8      	LDD  R26,Y+16
0004e8 de29      	RCALL _pcd8544_gotoxy
0004e9 c004      	RJMP _0x2000050
                 _0x200005B:
0004ea 30e6      	CPI  R30,LOW(0x6)
0004eb f411      	BRNE _0x2000050
0004ec 940e 0896 	CALL SUBOPT_0x7
                 _0x2000050:
                 _0x200005D:
0004ee 931f      	PUSH R17
0004ef 5f1f      	SUBI R17,-1
0004f0 85ee      	LDD  R30,Y+14
0004f1 91af      	POP  R26
0004f2 17ae      	CP   R26,R30
0004f3 f5a0      	BRSH _0x200005F
0004f4 85a9      	LDD  R26,Y+9
0004f5 30a6      	CPI  R26,LOW(0x6)
0004f6 f451      	BRNE _0x2000060
0004f7 940e 089a 	CALL SUBOPT_0x8
0004f9 93fa      	ST   -Y,R31
0004fa 93ea      	ST   -Y,R30
0004fb 940e 0874 	CALL SUBOPT_0x3
0004fd 81a0      	LD   R26,Z
0004fe 940e 0845 	CALL _glcd_writemem
000500 c026      	RJMP _0x2000061
                 _0x2000060:
000501 85e9      	LDD  R30,Y+9
000502 30e9      	CPI  R30,LOW(0x9)
000503 f411      	BRNE _0x2000065
000504 e050      	LDI  R21,LOW(0)
000505 c00e      	RJMP _0x2000066
                 _0x2000065:
000506 30ea      	CPI  R30,LOW(0xA)
000507 f411      	BRNE _0x2000064
000508 ef5f      	LDI  R21,LOW(255)
000509 c00a      	RJMP _0x2000066
                 _0x2000064:
00050a 940e 089a 	CALL SUBOPT_0x8
00050c 940e 08a3 	CALL SUBOPT_0x9
00050e 2f5e      	MOV  R21,R30
00050f 85e9      	LDD  R30,Y+9
000510 30e7      	CPI  R30,LOW(0x7)
000511 f011      	BREQ _0x200006D
000512 30e8      	CPI  R30,LOW(0x8)
000513 f421      	BRNE _0x200006E
                 _0x200006D:
                 _0x2000066:
000514 940e 08a9 	CALL SUBOPT_0xA
000516 2f5e      	MOV  R21,R30
000517 c006      	RJMP _0x200006F
                 _0x200006E:
000518 30e3      	CPI  R30,LOW(0x3)
000519 f411      	BRNE _0x2000071
00051a 9550      	COM  R21
00051b c002      	RJMP _0x2000072
                 _0x2000071:
00051c 30e0      	CPI  R30,0
00051d f419      	BRNE _0x2000074
                 _0x2000072:
                 _0x200006F:
00051e 2fa5      	MOV  R26,R21
00051f ddd1      	RCALL _pcd8544_wrdata_G100
000520 c006      	RJMP _0x200006B
                 _0x2000074:
000521 940e 08ad 	CALL SUBOPT_0xB
000523 efef      	LDI  R30,LOW(255)
000524 93ea      	ST   -Y,R30
000525 85ad      	LDD  R26,Y+13
000526 ded4      	RCALL _pcd8544_wrmasked_G100
                 _0x200006B:
                 _0x2000061:
000527 cfc6      	RJMP _0x200005D
                 _0x200005F:
000528 85ef      	LDD  R30,Y+15
000529 5fe8      	SUBI R30,-LOW(8)
00052a 87ef      	STD  Y+15,R30
00052b 85ed      	LDD  R30,Y+13
00052c 50e8      	SUBI R30,LOW(8)
00052d 87ed      	STD  Y+13,R30
00052e c0d9      	RJMP _0x2000075
                 _0x200004D:
00052f 855d      	LDD  R21,Y+13
000530 e020      	LDI  R18,LOW(0)
000531 e0e0      	LDI  R30,LOW(0)
000532 87ed      	STD  Y+13,R30
000533 c07e      	RJMP _0x2000076
                 _0x200004C:
000534 2fe3      	MOV  R30,R19
000535 85ad      	LDD  R26,Y+13
000536 0fae      	ADD  R26,R30
000537 30a9      	CPI  R26,LOW(0x9)
000538 f420      	BRSH _0x2000077
000539 852d      	LDD  R18,Y+13
00053a e0e0      	LDI  R30,LOW(0)
00053b 87ed      	STD  Y+13,R30
00053c c003      	RJMP _0x2000078
                 _0x2000077:
00053d e0e8      	LDI  R30,LOW(8)
00053e 1be3      	SUB  R30,R19
00053f 2f2e      	MOV  R18,R30
                 _0x2000078:
000540 933a      	ST   -Y,R19
000541 2fa2      	MOV  R26,R18
000542 940e 07f3 	CALL _glcd_getmask
000544 2f4e      	MOV  R20,R30
000545 85e9      	LDD  R30,Y+9
000546 30e6      	CPI  R30,LOW(0x6)
000547 f511      	BRNE _0x200007C
000548 940e 0896 	CALL SUBOPT_0x7
                 _0x200007D:
00054a 931f      	PUSH R17
00054b 5f1f      	SUBI R17,-1
00054c 85ee      	LDD  R30,Y+14
00054d 91af      	POP  R26
00054e 17ae      	CP   R26,R30
00054f f4c8      	BRSH _0x200007F
000550 940e 0874 	CALL SUBOPT_0x3
000552 81e0      	LD   R30,Z
000553 23e4      	AND  R30,R20
000554 2fae      	MOV  R26,R30
000555 2fe3      	MOV  R30,R19
000556 940e 090f 	CALL __LSRB12
000558 940e 08b3 	CALL SUBOPT_0xC
00055a 2fe3      	MOV  R30,R19
00055b 2fa4      	MOV  R26,R20
00055c 940e 090f 	CALL __LSRB12
00055e 95e0      	COM  R30
00055f 21e1      	AND  R30,R1
000560 2b5e      	OR   R21,R30
000561 940e 089a 	CALL SUBOPT_0x8
000563 93fa      	ST   -Y,R31
000564 93ea      	ST   -Y,R30
000565 2fa5      	MOV  R26,R21
000566 940e 0845 	CALL _glcd_writemem
000568 cfe1      	RJMP _0x200007D
                 _0x200007F:
000569 c02c      	RJMP _0x200007B
                 _0x200007C:
00056a 30e9      	CPI  R30,LOW(0x9)
00056b f411      	BRNE _0x2000080
00056c e050      	LDI  R21,LOW(0)
00056d c003      	RJMP _0x2000081
                 _0x2000080:
00056e 30ea      	CPI  R30,LOW(0xA)
00056f f4a9      	BRNE _0x2000087
000570 ef5f      	LDI  R21,LOW(255)
                 _0x2000081:
000571 940e 08a9 	CALL SUBOPT_0xA
000573 2fae      	MOV  R26,R30
000574 2fe3      	MOV  R30,R19
000575 940e 0907 	CALL __LSLB12
000577 2f5e      	MOV  R21,R30
                 _0x2000084:
000578 931f      	PUSH R17
000579 5f1f      	SUBI R17,-1
00057a 85ee      	LDD  R30,Y+14
00057b 91af      	POP  R26
00057c 17ae      	CP   R26,R30
00057d f430      	BRSH _0x2000086
00057e 940e 08ad 	CALL SUBOPT_0xB
000580 934a      	ST   -Y,R20
000581 e0a0      	LDI  R26,LOW(0)
000582 de78      	RCALL _pcd8544_wrmasked_G100
000583 cff4      	RJMP _0x2000084
                 _0x2000086:
000584 c011      	RJMP _0x200007B
                 _0x2000087:
                 _0x2000088:
000585 931f      	PUSH R17
000586 5f1f      	SUBI R17,-1
000587 85ee      	LDD  R30,Y+14
000588 91af      	POP  R26
000589 17ae      	CP   R26,R30
00058a f458      	BRSH _0x200008A
00058b 940e 08be 	CALL SUBOPT_0xD
00058d 2fae      	MOV  R26,R30
00058e 2fe3      	MOV  R30,R19
00058f 940e 0907 	CALL __LSLB12
000591 93ea      	ST   -Y,R30
000592 934a      	ST   -Y,R20
000593 85ad      	LDD  R26,Y+13
000594 de66      	RCALL _pcd8544_wrmasked_G100
000595 cfef      	RJMP _0x2000088
                 _0x200008A:
                 _0x200007B:
000596 85ed      	LDD  R30,Y+13
000597 30e0      	CPI  R30,0
000598 f409      	BRNE _0x200008B
000599 c077      	RJMP _0x200004B
                 _0x200008B:
00059a 85ad      	LDD  R26,Y+13
00059b 30a8      	CPI  R26,LOW(0x8)
00059c f428      	BRSH _0x200008C
00059d 85ed      	LDD  R30,Y+13
00059e 1be2      	SUB  R30,R18
00059f 2f5e      	MOV  R21,R30
0005a0 e0e0      	LDI  R30,LOW(0)
0005a1 c003      	RJMP _0x20000A2
                 _0x200008C:
0005a2 2f53      	MOV  R21,R19
0005a3 85ed      	LDD  R30,Y+13
0005a4 50e8      	SUBI R30,LOW(8)
                 _0x20000A2:
0005a5 87ed      	STD  Y+13,R30
0005a6 e010      	LDI  R17,LOW(0)
0005a7 85ef      	LDD  R30,Y+15
0005a8 5fe8      	SUBI R30,-LOW(8)
0005a9 87ef      	STD  Y+15,R30
0005aa e0e8      	LDI  R30,LOW(8)
0005ab 1be3      	SUB  R30,R19
0005ac 2f2e      	MOV  R18,R30
0005ad 8908      	LDD  R16,Y+16
0005ae 85ea      	LDD  R30,Y+10
0005af 85fb      	LDD  R31,Y+10+1
0005b0 83ee      	STD  Y+6,R30
0005b1 83ff      	STD  Y+6+1,R31
                 _0x2000076:
0005b2 2fe5      	MOV  R30,R21
0005b3 e0f0      	LDI  R31,0
0005b4 59e0      	SUBI R30,LOW(-__glcd_mask*2)
0005b5 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
0005b6 9144      	LPM  R20,Z
0005b7 85e9      	LDD  R30,Y+9
0005b8 30e6      	CPI  R30,LOW(0x6)
0005b9 f511      	BRNE _0x2000091
0005ba 940e 0896 	CALL SUBOPT_0x7
                 _0x2000092:
0005bc 931f      	PUSH R17
0005bd 5f1f      	SUBI R17,-1
0005be 85ee      	LDD  R30,Y+14
0005bf 91af      	POP  R26
0005c0 17ae      	CP   R26,R30
0005c1 f4c8      	BRSH _0x2000094
0005c2 940e 0874 	CALL SUBOPT_0x3
0005c4 81e0      	LD   R30,Z
0005c5 23e4      	AND  R30,R20
0005c6 2fae      	MOV  R26,R30
0005c7 2fe2      	MOV  R30,R18
0005c8 940e 0907 	CALL __LSLB12
0005ca 940e 08b3 	CALL SUBOPT_0xC
0005cc 2fe2      	MOV  R30,R18
0005cd 2fa4      	MOV  R26,R20
0005ce 940e 0907 	CALL __LSLB12
0005d0 95e0      	COM  R30
0005d1 21e1      	AND  R30,R1
0005d2 2b5e      	OR   R21,R30
0005d3 940e 089a 	CALL SUBOPT_0x8
0005d5 93fa      	ST   -Y,R31
0005d6 93ea      	ST   -Y,R30
0005d7 2fa5      	MOV  R26,R21
0005d8 940e 0845 	CALL _glcd_writemem
0005da cfe1      	RJMP _0x2000092
                 _0x2000094:
0005db c02c      	RJMP _0x2000090
                 _0x2000091:
0005dc 30e9      	CPI  R30,LOW(0x9)
0005dd f411      	BRNE _0x2000095
0005de e050      	LDI  R21,LOW(0)
0005df c003      	RJMP _0x2000096
                 _0x2000095:
0005e0 30ea      	CPI  R30,LOW(0xA)
0005e1 f4a9      	BRNE _0x200009C
0005e2 ef5f      	LDI  R21,LOW(255)
                 _0x2000096:
0005e3 940e 08a9 	CALL SUBOPT_0xA
0005e5 2fae      	MOV  R26,R30
0005e6 2fe2      	MOV  R30,R18
0005e7 940e 090f 	CALL __LSRB12
0005e9 2f5e      	MOV  R21,R30
                 _0x2000099:
0005ea 931f      	PUSH R17
0005eb 5f1f      	SUBI R17,-1
0005ec 85ee      	LDD  R30,Y+14
0005ed 91af      	POP  R26
0005ee 17ae      	CP   R26,R30
0005ef f430      	BRSH _0x200009B
0005f0 940e 08ad 	CALL SUBOPT_0xB
0005f2 934a      	ST   -Y,R20
0005f3 e0a0      	LDI  R26,LOW(0)
0005f4 de06      	RCALL _pcd8544_wrmasked_G100
0005f5 cff4      	RJMP _0x2000099
                 _0x200009B:
0005f6 c011      	RJMP _0x2000090
                 _0x200009C:
                 _0x200009D:
0005f7 931f      	PUSH R17
0005f8 5f1f      	SUBI R17,-1
0005f9 85ee      	LDD  R30,Y+14
0005fa 91af      	POP  R26
0005fb 17ae      	CP   R26,R30
0005fc f458      	BRSH _0x200009F
0005fd 940e 08be 	CALL SUBOPT_0xD
0005ff 2fae      	MOV  R26,R30
000600 2fe2      	MOV  R30,R18
000601 940e 090f 	CALL __LSRB12
000603 93ea      	ST   -Y,R30
000604 934a      	ST   -Y,R20
000605 85ad      	LDD  R26,Y+13
000606 ddf4      	RCALL _pcd8544_wrmasked_G100
000607 cfef      	RJMP _0x200009D
                 _0x200009F:
                 _0x2000090:
                 _0x2000075:
000608 85e8      	LDD  R30,Y+8
000609 85aa      	LDD  R26,Y+10
00060a 85bb      	LDD  R27,Y+10+1
00060b e0f0      	LDI  R31,0
00060c 0fea      	ADD  R30,R26
00060d 1ffb      	ADC  R31,R27
00060e 87ea      	STD  Y+10,R30
00060f 87fb      	STD  Y+10+1,R31
000610 ceb3      	RJMP _0x2000049
                 _0x200004B:
                 _0x2140009:
000611 940e 094b 	CALL __LOADLOCR6
000613 9661      	ADIW R28,17
000614 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
000615 940e 08cb 	CALL SUBOPT_0xE
000617 f024      	BRLT _0x2020003
000618 e0e0      	LDI  R30,LOW(0)
000619 e0f0      	LDI  R31,HIGH(0)
00061a 940c 07fc 	JMP  _0x2140003
                 _0x2020003:
00061c 81a8      	LD   R26,Y
00061d 81b9      	LDD  R27,Y+1
00061e 35a4      	CPI  R26,LOW(0x54)
00061f e0e0      	LDI  R30,HIGH(0x54)
000620 07be      	CPC  R27,R30
000621 f024      	BRLT _0x2020004
000622 e5e3      	LDI  R30,LOW(83)
000623 e0f0      	LDI  R31,HIGH(83)
000624 940c 07fc 	JMP  _0x2140003
                 _0x2020004:
000626 81e8      	LD   R30,Y
000627 81f9      	LDD  R31,Y+1
000628 940c 07fc 	JMP  _0x2140003
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
00062a 940e 08cb 	CALL SUBOPT_0xE
00062c f024      	BRLT _0x2020005
00062d e0e0      	LDI  R30,LOW(0)
00062e e0f0      	LDI  R31,HIGH(0)
00062f 940c 07fc 	JMP  _0x2140003
                 _0x2020005:
000631 81a8      	LD   R26,Y
000632 81b9      	LDD  R27,Y+1
000633 97d0      	SBIW R26,48
000634 f024      	BRLT _0x2020006
000635 e2ef      	LDI  R30,LOW(47)
000636 e0f0      	LDI  R31,HIGH(47)
000637 940c 07fc 	JMP  _0x2140003
                 _0x2020006:
000639 81e8      	LD   R30,Y
00063a 81f9      	LDD  R31,Y+1
00063b 940c 07fc 	JMP  _0x2140003
                 ; .FEND
                 _glcd_getcharw_G101:
                 ; .FSTART _glcd_getcharw_G101
00063d 93ba      	ST   -Y,R27
00063e 93aa      	ST   -Y,R26
00063f 9723      	SBIW R28,3
000640 940e 08d2 	CALL SUBOPT_0xF
000642 018f      	MOVW R16,R30
000643 2e00      	MOV  R0,R16
000644 2a01      	OR   R0,R17
000645 f419      	BRNE _0x202000B
000646 e0e0      	LDI  R30,LOW(0)
000647 e0f0      	LDI  R31,HIGH(0)
000648 c05f      	RJMP _0x2140007
                 _0x202000B:
000649 940e 08d9 	CALL SUBOPT_0x10
00064b 820f      	STD  Y+7,R0
00064c 940e 08d9 	CALL SUBOPT_0x10
00064e 820e      	STD  Y+6,R0
00064f 940e 08d9 	CALL SUBOPT_0x10
000651 8608      	STD  Y+8,R0
000652 85eb      	LDD  R30,Y+11
000653 85a8      	LDD  R26,Y+8
000654 17ea      	CP   R30,R26
000655 f418      	BRSH _0x202000C
000656 e0e0      	LDI  R30,LOW(0)
000657 e0f0      	LDI  R31,HIGH(0)
000658 c04f      	RJMP _0x2140007
                 _0x202000C:
000659 01f8      	MOVW R30,R16
                +
00065a 5f0f     +SUBI R16 , LOW ( - 1 )
00065b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00065c 9154      	LPM  R21,Z
00065d 85a8      	LDD  R26,Y+8
00065e 27bb      	CLR  R27
00065f 27ee      	CLR  R30
000660 0fa5      	ADD  R26,R21
000661 1fbe      	ADC  R27,R30
000662 85eb      	LDD  R30,Y+11
000663 e0f0      	LDI  R31,0
000664 17ea      	CP   R30,R26
000665 07fb      	CPC  R31,R27
000666 f018      	BRLO _0x202000D
000667 e0e0      	LDI  R30,LOW(0)
000668 e0f0      	LDI  R31,HIGH(0)
000669 c03e      	RJMP _0x2140007
                 _0x202000D:
00066a 81ee      	LDD  R30,Y+6
00066b 95e6      	LSR  R30
00066c 95e6      	LSR  R30
00066d 95e6      	LSR  R30
00066e 2f4e      	MOV  R20,R30
00066f 81ee      	LDD  R30,Y+6
000670 70e7      	ANDI R30,LOW(0x7)
000671 f009      	BREQ _0x202000E
000672 5f4f      	SUBI R20,-LOW(1)
                 _0x202000E:
000673 81ef      	LDD  R30,Y+7
000674 30e0      	CPI  R30,0
000675 f0a1      	BREQ _0x202000F
000676 85a9      	LDD  R26,Y+9
000677 85ba      	LDD  R27,Y+9+1
000678 93ec      	ST   X,R30
000679 85a8      	LDD  R26,Y+8
00067a 85eb      	LDD  R30,Y+11
00067b 1bea      	SUB  R30,R26
00067c e0f0      	LDI  R31,0
00067d 01df      	MOVW R26,R30
00067e 81ef      	LDD  R30,Y+7
00067f e0f0      	LDI  R31,0
000680 940e 0917 	CALL __MULW12U
000682 01df      	MOVW R26,R30
000683 2fe4      	MOV  R30,R20
000684 e0f0      	LDI  R31,0
000685 940e 0917 	CALL __MULW12U
000687 0fe0      	ADD  R30,R16
000688 1ff1      	ADC  R31,R17
000689 c01e      	RJMP _0x2140007
                 _0x202000F:
00068a 0198      	MOVW R18,R16
00068b 2fe5      	MOV  R30,R21
00068c e0f0      	LDI  R31,0
                +
00068d 0f0e     +ADD R16 , R30
00068e 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2020010:
00068f 85a8      	LDD  R26,Y+8
000690 5faf      	SUBI R26,-LOW(1)
000691 87a8      	STD  Y+8,R26
000692 50a1      	SUBI R26,LOW(1)
000693 85eb      	LDD  R30,Y+11
000694 17ae      	CP   R26,R30
000695 f460      	BRSH _0x2020012
000696 01f9      	MOVW R30,R18
                +
000697 5f2f     +SUBI R18 , LOW ( - 1 )
000698 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000699 91a4      	LPM  R26,Z
00069a e0b0      	LDI  R27,0
00069b 2fe4      	MOV  R30,R20
00069c e0f0      	LDI  R31,0
00069d 940e 0917 	CALL __MULW12U
                +
00069f 0f0e     +ADD R16 , R30
0006a0 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
0006a1 cfed      	RJMP _0x2020010
                 _0x2020012:
0006a2 01f9      	MOVW R30,R18
0006a3 91e4      	LPM  R30,Z
0006a4 85a9      	LDD  R26,Y+9
0006a5 85ba      	LDD  R27,Y+9+1
0006a6 93ec      	ST   X,R30
0006a7 01f8      	MOVW R30,R16
                 _0x2140007:
0006a8 940e 094b 	CALL __LOADLOCR6
                 _0x2140008:
0006aa 962c      	ADIW R28,12
0006ab 9508      	RET
                 ; .FEND
                 _glcd_new_line_G101:
                 ; .FSTART _glcd_new_line_G101
0006ac e0e0      	LDI  R30,LOW(0)
                +
0006ad 93e0 055b+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
0006af 91a0 055c+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
0006b1 27bb      	CLR  R27
0006b2 940e 08de 	CALL SUBOPT_0x11
0006b4 e0f0      	LDI  R31,0
0006b5 0fae      	ADD  R26,R30
0006b6 1fbf      	ADC  R27,R31
                +
0006b7 91e0 0560+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
0006b9 e0f0      	LDI  R31,0
0006ba 0fae      	ADD  R26,R30
0006bb 1fbf      	ADC  R27,R31
0006bc df6d      	RCALL _glcd_clipy
                +
0006bd 93e0 055c+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
0006bf 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
0006c0 93aa      	ST   -Y,R26
0006c1 9721      	SBIW R28,1
0006c2 940e 08d2 	CALL SUBOPT_0xF
0006c4 9730      	SBIW R30,0
0006c5 f409      	BRNE PC+2
0006c6 c055      	RJMP _0x202001F
0006c7 81af      	LDD  R26,Y+7
0006c8 30aa      	CPI  R26,LOW(0xA)
0006c9 f409      	BRNE _0x2020020
0006ca c04f      	RJMP _0x2020021
                 _0x2020020:
0006cb 81ef      	LDD  R30,Y+7
0006cc 93ea      	ST   -Y,R30
0006cd 01de      	MOVW R26,R28
0006ce 9617      	ADIW R26,7
0006cf df6d      	RCALL _glcd_getcharw_G101
0006d0 01af      	MOVW R20,R30
0006d1 9730      	SBIW R30,0
0006d2 f409      	BRNE _0x2020022
0006d3 c04a      	RJMP _0x2140006
                 _0x2020022:
                +
0006d4 91e0 055f+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
0006d6 81ae      	LDD  R26,Y+6
0006d7 0fea      	ADD  R30,R26
0006d8 2f3e      	MOV  R19,R30
                +
0006d9 91a0 055b+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
0006db 27bb      	CLR  R27
0006dc e0f0      	LDI  R31,0
0006dd 0fea      	ADD  R30,R26
0006de 1ffb      	ADC  R31,R27
0006df 018f      	MOVW R16,R30
                +
0006e0 3505     +CPI R16 , LOW ( 85 )
0006e1 e0e0     +LDI R30 , HIGH ( 85 )
0006e2 071e     +CPC R17 , R30
                 	__CPWRN 16,17,85
0006e3 f018      	BRLO _0x2020023
0006e4 2f03      	MOV  R16,R19
0006e5 2711      	CLR  R17
0006e6 dfc5      	RCALL _glcd_new_line_G101
                 _0x2020023:
                +
0006e7 91e0 055b+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
0006e9 93ea      	ST   -Y,R30
                +
0006ea 91e0 055c+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
0006ec 93ea      	ST   -Y,R30
0006ed 85e8      	LDD  R30,Y+8
0006ee 93ea      	ST   -Y,R30
0006ef 940e 08de 	CALL SUBOPT_0x11
0006f1 93ea      	ST   -Y,R30
0006f2 e0e1      	LDI  R30,LOW(1)
0006f3 93ea      	ST   -Y,R30
0006f4 935a      	ST   -Y,R21
0006f5 934a      	ST   -Y,R20
0006f6 e0a7      	LDI  R26,LOW(7)
0006f7 dd3c      	RCALL _glcd_block
                +
0006f8 91e0 055b+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
0006fa 81ae      	LDD  R26,Y+6
0006fb 0fea      	ADD  R30,R26
0006fc 93ea      	ST   -Y,R30
                +
0006fd 91e0 055c+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
0006ff 93ea      	ST   -Y,R30
                +
000700 91e0 055f+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000702 93ea      	ST   -Y,R30
000703 940e 08de 	CALL SUBOPT_0x11
000705 940e 08e5 	CALL SUBOPT_0x12
                +
000707 91e0 055b+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000709 93ea      	ST   -Y,R30
                +
00070a 91a0 055c+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
00070c 940e 08de 	CALL SUBOPT_0x11
00070e 0fea      	ADD  R30,R26
00070f 93ea      	ST   -Y,R30
000710 933a      	ST   -Y,R19
                +
000711 91e0 0560+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000713 940e 08e5 	CALL SUBOPT_0x12
000715 e5e4      	LDI  R30,LOW(84)
000716 e0f0      	LDI  R31,HIGH(84)
000717 17e0      	CP   R30,R16
000718 07f1      	CPC  R31,R17
000719 f411      	BRNE _0x2020024
                 _0x2020021:
00071a df91      	RCALL _glcd_new_line_G101
00071b c002      	RJMP _0x2140006
                 _0x2020024:
                 _0x202001F:
                +
00071c 9300 055b+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
                 _0x2140006:
00071e 940e 094b 	CALL __LOADLOCR6
000720 9628      	ADIW R28,8
000721 9508      	RET
                 ; .FEND
                 _glcd_outtextxy:
                 ; .FSTART _glcd_outtextxy
000722 93ba      	ST   -Y,R27
000723 93aa      	ST   -Y,R26
000724 931a      	ST   -Y,R17
000725 81ec      	LDD  R30,Y+4
000726 93ea      	ST   -Y,R30
000727 81ac      	LDD  R26,Y+4
000728 d00e      	RCALL _glcd_moveto
                 _0x2020025:
000729 81a9      	LDD  R26,Y+1
00072a 81ba      	LDD  R27,Y+1+1
00072b 91ed      	LD   R30,X+
00072c 83a9      	STD  Y+1,R26
00072d 83ba      	STD  Y+1+1,R27
00072e 2f1e      	MOV  R17,R30
00072f 30e0      	CPI  R30,0
000730 f019      	BREQ _0x2020027
000731 2fa1      	MOV  R26,R17
000732 df8d      	RCALL _glcd_putchar
000733 cff5      	RJMP _0x2020025
                 _0x2020027:
000734 8118      	LDD  R17,Y+0
000735 940c 07f1 	JMP  _0x2140004
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
000737 93aa      	ST   -Y,R26
000738 81a9      	LDD  R26,Y+1
000739 27bb      	CLR  R27
00073a deda      	RCALL _glcd_clipx
                +
00073b 93e0 055b+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
00073d 81a8      	LD   R26,Y
00073e 27bb      	CLR  R27
00073f deea      	RCALL _glcd_clipy
                +
000740 93e0 055c+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000742 940c 07fc 	JMP  _0x2140003
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G104:
                 ; .FSTART __lcd_write_nibble_G104
000744 93aa      	ST   -Y,R26
000745 81e8      	LD   R30,Y
000746 71e0      	ANDI R30,LOW(0x10)
000747 f011      	BREQ _0x2080004
000748 9adb      	SBI  0x1B,3
000749 c001      	RJMP _0x2080005
                 _0x2080004:
00074a 98db      	CBI  0x1B,3
                 _0x2080005:
00074b 81e8      	LD   R30,Y
00074c 72e0      	ANDI R30,LOW(0x20)
00074d f011      	BREQ _0x2080006
00074e 9adc      	SBI  0x1B,4
00074f c001      	RJMP _0x2080007
                 _0x2080006:
000750 98dc      	CBI  0x1B,4
                 _0x2080007:
000751 81e8      	LD   R30,Y
000752 74e0      	ANDI R30,LOW(0x40)
000753 f011      	BREQ _0x2080008
000754 9add      	SBI  0x1B,5
000755 c001      	RJMP _0x2080009
                 _0x2080008:
000756 98dd      	CBI  0x1B,5
                 _0x2080009:
000757 81e8      	LD   R30,Y
000758 78e0      	ANDI R30,LOW(0x80)
000759 f011      	BREQ _0x208000A
00075a 9ade      	SBI  0x1B,6
00075b c001      	RJMP _0x208000B
                 _0x208000A:
00075c 98de      	CBI  0x1B,6
                 _0x208000B:
                +
00075d e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00075e 958a     +DEC R24
00075f f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000760 9ada      	SBI  0x1B,2
                +
000761 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000762 958a     +DEC R24
000763 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000764 98da      	CBI  0x1B,2
                +
000765 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000766 958a     +DEC R24
000767 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000768 c078      	RJMP _0x2140005
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000769 93aa      	ST   -Y,R26
00076a 81a8      	LD   R26,Y
00076b dfd8      	RCALL __lcd_write_nibble_G104
00076c 81e8          ld    r30,y
00076d 95e2          swap  r30
00076e 83e8          st    y,r30
00076f 81a8      	LD   R26,Y
000770 dfd3      	RCALL __lcd_write_nibble_G104
                +
000771 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
000772 958a     +DEC R24
000773 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
000774 c06c      	RJMP _0x2140005
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000775 93aa      	ST   -Y,R26
000776 81e8      	LD   R30,Y
000777 e0f0      	LDI  R31,0
000778 59e0      	SUBI R30,LOW(-__base_y_G104)
000779 4ff8      	SBCI R31,HIGH(-__base_y_G104)
00077a 81e0      	LD   R30,Z
00077b 81a9      	LDD  R26,Y+1
00077c 0fae      	ADD  R26,R30
00077d dfeb      	RCALL __lcd_write_data
00077e 8049      	LDD  R4,Y+1
00077f 8098      	LDD  R9,Y+0
000780 c07b      	RJMP _0x2140003
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000781 e0a2      	LDI  R26,LOW(2)
000782 940e 08ef 	CALL SUBOPT_0x13
000784 e0ac      	LDI  R26,LOW(12)
000785 dfe3      	RCALL __lcd_write_data
000786 e0a1      	LDI  R26,LOW(1)
000787 940e 08ef 	CALL SUBOPT_0x13
000789 e0e0      	LDI  R30,LOW(0)
00078a 2e9e      	MOV  R9,R30
00078b 2e4e      	MOV  R4,R30
00078c 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
00078d 93aa      	ST   -Y,R26
00078e 81a8      	LD   R26,Y
00078f 30aa      	CPI  R26,LOW(0xA)
000790 f011      	BREQ _0x2080011
000791 1448      	CP   R4,R8
000792 f048      	BRLO _0x2080010
                 _0x2080011:
000793 e0e0      	LDI  R30,LOW(0)
000794 93ea      	ST   -Y,R30
000795 9493      	INC  R9
000796 2da9      	MOV  R26,R9
000797 dfdd      	RCALL _lcd_gotoxy
000798 81a8      	LD   R26,Y
000799 30aa      	CPI  R26,LOW(0xA)
00079a f409      	BRNE _0x2080013
00079b c045      	RJMP _0x2140005
                 _0x2080013:
                 _0x2080010:
00079c 9443      	INC  R4
00079d 9ad8      	SBI  0x1B,0
00079e 81a8      	LD   R26,Y
00079f dfc9      	RCALL __lcd_write_data
0007a0 98d8      	CBI  0x1B,0
0007a1 c03f      	RJMP _0x2140005
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
0007a2 93ba      	ST   -Y,R27
0007a3 93aa      	ST   -Y,R26
0007a4 931a      	ST   -Y,R17
                 _0x2080017:
0007a5 81e9      	LDD  R30,Y+1
0007a6 81fa      	LDD  R31,Y+1+1
0007a7 9631      	ADIW R30,1
0007a8 83e9      	STD  Y+1,R30
0007a9 83fa      	STD  Y+1+1,R31
0007aa 9731      	SBIW R30,1
0007ab 91e4      	LPM  R30,Z
0007ac 2f1e      	MOV  R17,R30
0007ad 30e0      	CPI  R30,0
0007ae f019      	BREQ _0x2080019
0007af 2fa1      	MOV  R26,R17
0007b0 dfdc      	RCALL _lcd_putchar
0007b1 cff3      	RJMP _0x2080017
                 _0x2080019:
0007b2 8118      	LDD  R17,Y+0
0007b3 c08f      	RJMP _0x2140002
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0007b4 93aa      	ST   -Y,R26
0007b5 9ad3      	SBI  0x1A,3
0007b6 9ad4      	SBI  0x1A,4
0007b7 9ad5      	SBI  0x1A,5
0007b8 9ad6      	SBI  0x1A,6
0007b9 9ad2      	SBI  0x1A,2
0007ba 9ad0      	SBI  0x1A,0
0007bb 9ad1      	SBI  0x1A,1
0007bc 98da      	CBI  0x1B,2
0007bd 98d8      	CBI  0x1B,0
0007be 98d9      	CBI  0x1B,1
0007bf 8088      	LDD  R8,Y+0
0007c0 81e8      	LD   R30,Y
0007c1 58e0      	SUBI R30,-LOW(128)
                +
0007c2 93e0 0772+STS __base_y_G104 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G104,2
0007c4 81e8      	LD   R30,Y
0007c5 54e0      	SUBI R30,-LOW(192)
                +
0007c6 93e0 0773+STS __base_y_G104 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G104,3
0007c8 e1a4      	LDI  R26,LOW(20)
0007c9 e0b0      	LDI  R27,0
0007ca 940e 08fd 	CALL _delay_ms
0007cc 940e 08f5 	CALL SUBOPT_0x14
0007ce 940e 08f5 	CALL SUBOPT_0x14
0007d0 940e 08f5 	CALL SUBOPT_0x14
0007d2 e2a0      	LDI  R26,LOW(32)
0007d3 df70      	RCALL __lcd_write_nibble_G104
                +
0007d4 ec88     +LDI R24 , LOW ( 200 )
0007d5 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0007d6 9701     +SBIW R24 , 1
0007d7 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0007d8 e2a8      	LDI  R26,LOW(40)
0007d9 df8f      	RCALL __lcd_write_data
0007da e0a4      	LDI  R26,LOW(4)
0007db df8d      	RCALL __lcd_write_data
0007dc e8a5      	LDI  R26,LOW(133)
0007dd df8b      	RCALL __lcd_write_data
0007de e0a6      	LDI  R26,LOW(6)
0007df df89      	RCALL __lcd_write_data
0007e0 dfa0      	RCALL _lcd_clear
                 _0x2140005:
0007e1 9621      	ADIW R28,1
0007e2 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
0007e3 93ba      	ST   -Y,R27
0007e4 93aa      	ST   -Y,R26
0007e5 81b9          ldd  r27,y+1
0007e6 81a8          ld   r26,y
0007e7 9610          adiw r26,0
0007e8 f031          breq memset1
0007e9 81fc          ldd  r31,y+4
0007ea 81eb          ldd  r30,y+3
0007eb 816a          ldd  r22,y+2
                 memset0:
0007ec 9361          st   z+,r22
0007ed 9711          sbiw r26,1
0007ee f7e9          brne memset0
                 memset1:
0007ef 81eb          ldd  r30,y+3
0007f0 81fc          ldd  r31,y+4
                 _0x2140004:
0007f1 9625      	ADIW R28,5
0007f2 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
0007f3 93aa      	ST   -Y,R26
0007f4 81e8      	LD   R30,Y
0007f5 e0f0      	LDI  R31,0
0007f6 59e0      	SUBI R30,LOW(-__glcd_mask*2)
0007f7 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
0007f8 91a4      	LPM  R26,Z
0007f9 81e9      	LDD  R30,Y+1
0007fa 940e 0907 	CALL __LSLB12
                 _0x2140003:
0007fc 9622      	ADIW R28,2
0007fd 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
0007fe 93aa      	ST   -Y,R26
0007ff 931a      	ST   -Y,R17
000800 81e9      	LDD  R30,Y+1
000801 30e7      	CPI  R30,LOW(0x7)
000802 f011      	BREQ _0x20C0007
000803 30ea      	CPI  R30,LOW(0xA)
000804 f419      	BRNE _0x20C0008
                 _0x20C0007:
000805 9110 0559 	LDS  R17,_glcd_state
000807 c009      	RJMP _0x20C0009
                 _0x20C0008:
000808 30e9      	CPI  R30,LOW(0x9)
000809 f419      	BRNE _0x20C000B
                +
00080a 9110 055a+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
00080c c004      	RJMP _0x20C0009
                 _0x20C000B:
00080d 30e8      	CPI  R30,LOW(0x8)
00080e f4a1      	BRNE _0x20C0005
                +
00080f 9110 0569+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x20C0009:
                +
000811 91e0 055a+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000813 30e0      	CPI  R30,0
000814 f049      	BREQ _0x20C000E
000815 3010      	CPI  R17,0
000816 f019      	BREQ _0x20C000F
000817 efef      	LDI  R30,LOW(255)
000818 8118      	LDD  R17,Y+0
000819 c029      	RJMP _0x2140002
                 _0x20C000F:
00081a 81ea      	LDD  R30,Y+2
00081b 95e0      	COM  R30
00081c 8118      	LDD  R17,Y+0
00081d c025      	RJMP _0x2140002
                 _0x20C000E:
00081e 3010      	CPI  R17,0
00081f f419      	BRNE _0x20C0011
000820 e0e0      	LDI  R30,LOW(0)
000821 8118      	LDD  R17,Y+0
000822 c020      	RJMP _0x2140002
                 _0x20C0011:
                 _0x20C0005:
000823 81ea      	LDD  R30,Y+2
000824 8118      	LDD  R17,Y+0
000825 c01d      	RJMP _0x2140002
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
000826 93ba      	ST   -Y,R27
000827 93aa      	ST   -Y,R26
000828 81ea      	LDD  R30,Y+2
000829 30e1      	CPI  R30,LOW(0x1)
00082a f421      	BRNE _0x20C0015
00082b 81e8      	LD   R30,Y
00082c 81f9      	LDD  R31,Y+1
00082d 91e4      	LPM  R30,Z
00082e c014      	RJMP _0x2140002
                 _0x20C0015:
00082f 30e2      	CPI  R30,LOW(0x2)
000830 f429      	BRNE _0x20C0016
000831 81a8      	LD   R26,Y
000832 81b9      	LDD  R27,Y+1
000833 940e 0923 	CALL __EEPROMRDB
000835 c00d      	RJMP _0x2140002
                 _0x20C0016:
000836 30e3      	CPI  R30,LOW(0x3)
000837 f441      	BRNE _0x20C0018
000838 81a8      	LD   R26,Y
000839 81b9      	LDD  R27,Y+1
                +
00083a 91e0 0572+LDS R30 , _glcd_state + ( 25 )
00083c 91f0 0573+LDS R31 , _glcd_state + ( 25 ) + 1
00083e 9509     +ICALL
                 	__CALL1MN _glcd_state,25
00083f c003      	RJMP _0x2140002
                 _0x20C0018:
000840 81a8      	LD   R26,Y
000841 81b9      	LDD  R27,Y+1
000842 91ec      	LD   R30,X
                 _0x2140002:
000843 9623      	ADIW R28,3
000844 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
000845 93aa      	ST   -Y,R26
000846 81eb      	LDD  R30,Y+3
000847 30e0      	CPI  R30,0
000848 f429      	BRNE _0x20C001C
000849 81e8      	LD   R30,Y
00084a 81a9      	LDD  R26,Y+1
00084b 81ba      	LDD  R27,Y+1+1
00084c 93ec      	ST   X,R30
00084d c014      	RJMP _0x20C001B
                 _0x20C001C:
00084e 30e2      	CPI  R30,LOW(0x2)
00084f f431      	BRNE _0x20C001D
000850 81e8      	LD   R30,Y
000851 81a9      	LDD  R26,Y+1
000852 81ba      	LDD  R27,Y+1+1
000853 940e 092f 	CALL __EEPROMWRB
000855 c00c      	RJMP _0x20C001B
                 _0x20C001D:
000856 30e3      	CPI  R30,LOW(0x3)
000857 f451      	BRNE _0x20C001B
000858 81e9      	LDD  R30,Y+1
000859 81fa      	LDD  R31,Y+1+1
00085a 93fa      	ST   -Y,R31
00085b 93ea      	ST   -Y,R30
00085c 81aa      	LDD  R26,Y+2
                +
00085d 91e0 0574+LDS R30 , _glcd_state + ( 27 )
00085f 91f0 0575+LDS R31 , _glcd_state + ( 27 ) + 1
000861 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x20C001B:
                 _0x2140001:
000862 9624      	ADIW R28,4
000863 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _glcd_state:
000559           	.BYTE 0x1D
                 _gfx_addr_G100:
000576           	.BYTE 0x2
                 _gfx_buffer_G100:
000578           	.BYTE 0x1F8
                 __base_y_G104:
000770           	.BYTE 0x4
                 __seed_G109:
000774           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x0:
000864 940e 0781 	CALL _lcd_clear
000866 940c 03dd 	JMP  _glcd_clear
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1:
000868 940e 07a2 	CALL _lcd_putsf
00086a e0ea      	LDI  R30,LOW(10)
00086b 93ea      	ST   -Y,R30
00086c 93ea      	ST   -Y,R30
00086d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2:
00086e 940e 0722 	CALL _glcd_outtextxy
000870 eda0      	LDI  R26,LOW(2000)
000871 e0b7      	LDI  R27,HIGH(2000)
000872 940c 08fd 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x3:
000874 e7a6      	LDI  R26,LOW(_gfx_addr_G100)
000875 e0b5      	LDI  R27,HIGH(_gfx_addr_G100)
000876 91ed      	LD   R30,X+
000877 91fd      	LD   R31,X+
000878 9631      	ADIW R30,1
000879 93fe      	ST   -X,R31
00087a 93ee      	ST   -X,R30
00087b 9731      	SBIW R30,1
00087c 58e8      	SUBI R30,LOW(-_gfx_buffer_G100)
00087d 4ffa      	SBCI R31,HIGH(-_gfx_buffer_G100)
00087e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
00087f 93e0 0064 	STS  100,R30
000881 91e0 0065 	LDS  R30,101
000883 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
000884 0fea      	ADD  R30,R26
000885 1ffb      	ADC  R31,R27
000886 83ee      	STD  Y+6,R30
000887 83ff      	STD  Y+6+1,R31
000888 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x6:
000889 85ec      	LDD  R30,Y+12
00088a 93ea      	ST   -Y,R30
00088b 81ef      	LDD  R30,Y+7
00088c 85f8      	LDD  R31,Y+7+1
00088d 9631      	ADIW R30,1
00088e 83ef      	STD  Y+7,R30
00088f 87f8      	STD  Y+7+1,R31
000890 9731      	SBIW R30,1
000891 93fa      	ST   -Y,R31
000892 93ea      	ST   -Y,R30
000893 e0a0      	LDI  R26,LOW(0)
000894 940c 0845 	JMP  _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000896 930a      	ST   -Y,R16
000897 89a8      	LDD  R26,Y+16
000898 940c 02fb 	JMP  _pcd8544_setaddr_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x8:
00089a 85ec      	LDD  R30,Y+12
00089b 93ea      	ST   -Y,R30
00089c 81ef      	LDD  R30,Y+7
00089d 85f8      	LDD  R31,Y+7+1
00089e 9631      	ADIW R30,1
00089f 83ef      	STD  Y+7,R30
0008a0 87f8      	STD  Y+7+1,R31
0008a1 9731      	SBIW R30,1
0008a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9:
0008a3 2766      	CLR  R22
0008a4 2777      	CLR  R23
0008a5 01df      	MOVW R26,R30
0008a6 01cb      	MOVW R24,R22
0008a7 940c 0826 	JMP  _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
0008a9 935a      	ST   -Y,R21
0008aa 85aa      	LDD  R26,Y+10
0008ab 940c 07fe 	JMP  _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xB:
0008ad 930a      	ST   -Y,R16
0008ae 9503      	INC  R16
0008af 89e8      	LDD  R30,Y+16
0008b0 93ea      	ST   -Y,R30
0008b1 935a      	ST   -Y,R21
0008b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xC:
0008b3 2f5e      	MOV  R21,R30
0008b4 85ec      	LDD  R30,Y+12
0008b5 93ea      	ST   -Y,R30
0008b6 81af      	LDD  R26,Y+7
0008b7 85b8      	LDD  R27,Y+7+1
0008b8 2788      	CLR  R24
0008b9 2799      	CLR  R25
0008ba 940e 0826 	CALL _glcd_readmem
0008bc 2e1e      	MOV  R1,R30
0008bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xD:
0008be 930a      	ST   -Y,R16
0008bf 9503      	INC  R16
0008c0 89e8      	LDD  R30,Y+16
0008c1 93ea      	ST   -Y,R30
0008c2 85ee      	LDD  R30,Y+14
0008c3 93ea      	ST   -Y,R30
0008c4 85e9      	LDD  R30,Y+9
0008c5 85fa      	LDD  R31,Y+9+1
0008c6 9631      	ADIW R30,1
0008c7 87e9      	STD  Y+9,R30
0008c8 87fa      	STD  Y+9+1,R31
0008c9 9731      	SBIW R30,1
0008ca cfd8      	RJMP SUBOPT_0x9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
0008cb 93ba      	ST   -Y,R27
0008cc 93aa      	ST   -Y,R26
0008cd 81a8      	LD   R26,Y
0008ce 81b9      	LDD  R27,Y+1
0008cf 940e 0940 	CALL __CPW02
0008d1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
0008d2 940e 0944 	CALL __SAVELOCR6
                +
0008d4 91e0 055d+LDS R30 , _glcd_state + ( 4 )
0008d6 91f0 055e+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
0008d8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
0008d9 01f8      	MOVW R30,R16
                +
0008da 5f0f     +SUBI R16 , LOW ( - 1 )
0008db 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0008dc 9004      	LPM  R0,Z
0008dd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x11:
                +
0008de 91e0 055d+LDS R30 , _glcd_state + ( 4 )
0008e0 91f0 055e+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
0008e2 9631      	ADIW R30,1
0008e3 91e4      	LPM  R30,Z
0008e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x12:
0008e5 93ea      	ST   -Y,R30
0008e6 e0e0      	LDI  R30,LOW(0)
0008e7 93ea      	ST   -Y,R30
0008e8 e0e0      	LDI  R30,LOW(0)
0008e9 e0f0      	LDI  R31,HIGH(0)
0008ea 93fa      	ST   -Y,R31
0008eb 93ea      	ST   -Y,R30
0008ec e0a9      	LDI  R26,LOW(9)
0008ed 940c 0434 	JMP  _glcd_block
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13:
0008ef 940e 0769 	CALL __lcd_write_data
0008f1 e0a3      	LDI  R26,LOW(3)
0008f2 e0b0      	LDI  R27,0
0008f3 940c 08fd 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x14:
0008f5 e3a0      	LDI  R26,LOW(48)
0008f6 940e 0744 	CALL __lcd_write_nibble_G104
                +
0008f8 ec88     +LDI R24 , LOW ( 200 )
0008f9 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0008fa 9701     +SBIW R24 , 1
0008fb f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0008fc 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0008fd 9610      	adiw r26,0
0008fe f039      	breq __delay_ms1
                 __delay_ms0:
                +
0008ff ed80     +LDI R24 , LOW ( 0x7D0 )
000900 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000901 9701     +SBIW R24 , 1
000902 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000903 95a8      	wdr
000904 9711      	sbiw r26,1
000905 f7c9      	brne __delay_ms0
                 __delay_ms1:
000906 9508      	ret
                 
                 __LSLB12:
000907 23ee      	TST  R30
000908 2e0e      	MOV  R0,R30
000909 2fea      	MOV  R30,R26
00090a f019      	BREQ __LSLB12R
                 __LSLB12L:
00090b 0fee      	LSL  R30
00090c 940a      	DEC  R0
00090d f7e9      	BRNE __LSLB12L
                 __LSLB12R:
00090e 9508      	RET
                 
                 __LSRB12:
00090f 23ee      	TST  R30
000910 2e0e      	MOV  R0,R30
000911 2fea      	MOV  R30,R26
000912 f019      	BREQ __LSRB12R
                 __LSRB12L:
000913 95e6      	LSR  R30
000914 940a      	DEC  R0
000915 f7e9      	BRNE __LSRB12L
                 __LSRB12R:
000916 9508      	RET
                 
                 __MULW12U:
000917 9ffa      	MUL  R31,R26
000918 2df0      	MOV  R31,R0
000919 9feb      	MUL  R30,R27
00091a 0df0      	ADD  R31,R0
00091b 9fea      	MUL  R30,R26
00091c 2de0      	MOV  R30,R0
00091d 0df1      	ADD  R31,R1
00091e 9508      	RET
                 
                 __GETW1P:
00091f 91ed      	LD   R30,X+
000920 91fc      	LD   R31,X
000921 9711      	SBIW R26,1
000922 9508      	RET
                 
                 __EEPROMRDB:
000923 99e1      	SBIC EECR,EEWE
000924 cffe      	RJMP __EEPROMRDB
000925 93ff      	PUSH R31
000926 b7ff      	IN   R31,SREG
000927 94f8      	CLI
000928 bbae      	OUT  EEARL,R26
000929 bbbf      	OUT  EEARH,R27
00092a 9ae0      	SBI  EECR,EERE
00092b b3ed      	IN   R30,EEDR
00092c bfff      	OUT  SREG,R31
00092d 91ff      	POP  R31
00092e 9508      	RET
                 
                 __EEPROMWRB:
00092f 9be1      	SBIS EECR,EEWE
000930 c002      	RJMP __EEPROMWRB1
000931 95a8      	WDR
000932 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
000933 b79f      	IN   R25,SREG
000934 94f8      	CLI
000935 bbae      	OUT  EEARL,R26
000936 bbbf      	OUT  EEARH,R27
000937 9ae0      	SBI  EECR,EERE
000938 b38d      	IN   R24,EEDR
000939 17e8      	CP   R30,R24
00093a f019      	BREQ __EEPROMWRB0
00093b bbed      	OUT  EEDR,R30
00093c 9ae2      	SBI  EECR,EEMWE
00093d 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
00093e bf9f      	OUT  SREG,R25
00093f 9508      	RET
                 
                 __CPW02:
000940 2400      	CLR  R0
000941 160a      	CP   R0,R26
000942 060b      	CPC  R0,R27
000943 9508      	RET
                 
                 __SAVELOCR6:
000944 935a      	ST   -Y,R21
                 __SAVELOCR5:
000945 934a      	ST   -Y,R20
                 __SAVELOCR4:
000946 933a      	ST   -Y,R19
                 __SAVELOCR3:
000947 932a      	ST   -Y,R18
                 __SAVELOCR2:
000948 931a      	ST   -Y,R17
000949 930a      	ST   -Y,R16
00094a 9508      	RET
                 
                 __LOADLOCR6:
00094b 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00094c 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00094d 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00094e 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00094f 8119      	LDD  R17,Y+1
000950 8108      	LD   R16,Y
000951 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :  29 r1 :   5 r2 :   0 r3 :   0 r4 :   4 r5 :   1 r6 :   6 r7 :   4 
r8 :   2 r9 :   4 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:  37 r17:  73 r18:  26 r19:  28 r20:  18 r21:  32 r22:   6 r23:   1 
r24:  26 r25:   8 r26: 261 r27:  81 r28:  16 r29:   1 r30: 636 r31: 114 
x  :  14 y  : 394 z  :  26 
Registers used: 27 out of 35 (77.1%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  12 add   :  19 
adiw  :  21 and   :   8 andi  :  23 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  34 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   6 
brlt  :   4 brmi  :   0 brne  :  65 brpl  :   0 brsh  :  16 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  : 116 
cbi   :  14 cbr   :   0 clc   :   0 clh   :   0 cli   :   3 cln   :   0 
clr   :  19 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   7 
cp    :  21 cpc   :   8 cpi   :  65 cpse  :   0 dec   :   7 des   :   0 
elpm  :   0 eor   :   1 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 
ijmp  :   0 in    :   5 inc   :   4 jmp   :  62 ld    :  47 ldd   : 197 
ldi   : 210 lds   :  44 lpm   :  25 lsl   :   4 lsr   :  15 mov   :  84 
movw  :  23 mul   :   4 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 
or    :   8 ori   :  16 out   :  24 pop   :  11 push  :  11 rcall :  60 
ret   :  37 reti  :   1 rjmp  :  90 rol   :   0 ror   :   0 sbc   :   0 
sbci  :   9 sbi   :  28 sbic  :   1 sbis  :   3 sbiw  :  25 sbr   :   0 
sbrc  :   0 sbrs  :   0 sec   :   0 seh   :   0 sei   :   1 sen   :   0 
ser   :   0 ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    : 135 std   :  39 sts   :  42 sub   :   6 subi  :  31 
swap  :   1 tst   :   3 wdr   :   2 
Instructions used: 57 out of 117 (48.7%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0012a4   4068    704   4772  131072   3.6%
[.dseg] 0x000100 0x000778      0    632    632    4096  15.4%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 10 warnings
