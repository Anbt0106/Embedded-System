;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <hardware.c>
;#include <delay.h>
;#include <glcd.h>
;#include <font5x7.h>
;#include <alcd.h>
;
;int keypad[3][3] = {1,2,3,4,5,6,7,8,9};

	.DSEG
;
;void init_register() {
; 0000 0002 void init_register() {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
;    // ban phim ma tran
;    DDRF = 0b11101010;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;    // 2 led
;    DDRD.4 = 1;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;    DDRD.5 = 1;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;    // lcd
;    DDRD.7 = 1;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;    DDRB.4 = 1;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;    // BT 1, 2
;    PORTB.2 = 1;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;    PORTB.3 = 1;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;    PORTD.7 = 1;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;    // servo
;    DDRC.7 = 1;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;}
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;
;int read() {
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;    char a, i, j;
;    for(j = 0; j < 3; j++ ){
;PCODE: $00000025 VOL: 0
;	a -> R17
;	i -> R16
;	j -> R19
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;        if (j == 0) PORTF = 0b11111101;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;        if (j == 1) PORTF = 0b11110111;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;        if (j == 2) PORTF = 0b11011111;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;        for(i = 0; i < 3; i++){
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;            if (i == 0){
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;                a = PINF&0x04;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;                if(a != 0x04) {
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;                    init_register();
;PCODE: $00000051 VOL: 0
;                    return keypad[i][j];
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;                }
;            }
;PCODE: $0000005E VOL: 0
;            if (i == 1){
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;                a = PINF&0x10;
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;                if (a != 0x10) {
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;                    init_register();
;PCODE: $00000069 VOL: 0
;                    return keypad[i][j];
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;                }
;            }
;PCODE: $00000076 VOL: 0
;            if (i == 2){
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;                a = PINF&0x01;
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;                if (a != 0x01) {
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;                    init_register();
;PCODE: $00000081 VOL: 0
;                    return keypad[i][j];
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;                }
;            }
;PCODE: $0000008E VOL: 0
;        }
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;    }
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;    init_register();
;PCODE: $0000009A VOL: 0
;    return -1;
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;}
;PCODE: $0000009F VOL: 0
;
;
;void init_glcd(int bias, int vlcd) {
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;    GLCDINIT_t glcd_init_data;
;    glcd_init_data.font=font5x7;
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;	bias -> Y+10
;	vlcd -> Y+8
;	glcd_init_data -> Y+0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;    glcd_init_data.temp_coef=140;
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;    glcd_init_data.bias=bias;
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;    glcd_init_data.vlcd=vlcd;
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;    glcd_init(&glcd_init_data);
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;}
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;
;void init_lcd() {
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;    lcd_init(16);
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;    lcd_clear();
;PCODE: $000000C4 VOL: 0
;}
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;
;void adjustSpeed(int speed) {
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;    OCR0 = 255 - speed;
;PCODE: $000000C9 VOL: 0
;	speed -> Y+0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;}
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;
;void quay_DC() {
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;    adjustSpeed(120);
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;}
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;
;void dung_DC() {
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;    adjustSpeed(255);
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;}
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;
;void init_timer() {
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;    // khoi tao timer 0 cho dong co
;    ASSR=0<<AS0;
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;    TCCR0=(1<<WGM00) | (1<<COM01) | (1<<COM00) | (0<<WGM01) | (1<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;    TCNT0=0x00;
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;    adjustSpeed(0);
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;
;    // Timer 1 (0.1 ms) cho den va servo
;    TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<COM1C1) | (0<<COM1C0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;    TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (1<<CS10);
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;    TCNT1H=0xFC;
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;    TCNT1L=0xE0;
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;    TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (1<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;    ETIMSK=(0<<TICIE3) | (0<<OCIE3A) | (0<<OCIE3B) | (0<<TOIE3) | (0<<OCIE3C) | (0<<OCIE1C);
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;    #asm("sei")
;PCODE: $000000F6 VOL: 0
	sei
;PCODE: $000000F7 VOL: 0
;}
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;#include <glcd.h>
;#include <delay.h>
;#include <ds1307.h>
;#include <stdlib.h>
;//#include <led7.c>
;
;// ??nh nghia c?ng servo
;#define servo_1 PORTC.7
;
;// Bi?n to?n c?c
;int dem = -1;
;int vi_tri = 0;
;unsigned char gio, phut, giay;  // Th?i gian t? RTC
;bool cho_an = false;    // Tr?ng th?i t?m d?ng
;bool dang_cho_an = false;  // Tr?ng th?i dang cho an
;int hour_1, hour_2, min_1, min_2, second_1, second_2;
;char buf[20];
;// Ng?t tr?n Timer1 (di?u khi?n servo)
;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
; 0000 0016 {
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
; 0000 0017     // ??t l?i gi? tr? Timer1
; 0000 0018     TCNT1H = 0xFCE0 >> 8;
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0000 0019     TCNT1L = 0xFCE0 & 0xff;
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0000 001A     // ?i?u khi?n servo
; 0000 001B     dem++;
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 001C     if (dem >= 200)
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 001D         dem = 0;
;PCODE: $00000106 VOL: 0
; 0000 001E     if (dem < vi_tri)
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0000 001F     servo_1 = 1;
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0000 0020     else
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
; 0000 0021     servo_1 = 0;
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
; 0000 0022 }
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;
;// H?m c?p nh?t th?i gian t? RTC
;void cap_nhat_thoi_gian()
; 0000 0026 {
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
; 0000 0027     rtc_get_time(&gio, &phut, &giay);
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0000 0028     hour_1 = gio/10;
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 0029     hour_2 = gio - hour_1*10;
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0000 002A     min_1 = phut/10;
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 002B     min_2 = phut - min_1*10;
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0000 002C     second_1 = giay / 10;
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 002D     second_2 = giay - second_1*10;
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 002E     lcd_clear();
;PCODE: $00000147 VOL: 0
; 0000 002F     lcd_gotoxy(0, 0);
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
; 0000 0030     lcd_putchar(hour_1 + 48);
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0000 0031     lcd_putchar(hour_2 + 48);
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
; 0000 0032     lcd_putchar(':');
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0000 0033     lcd_putchar(min_1 + 48);
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 0034     lcd_putchar(min_2 + 48);
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0000 0035 
; 0000 0036 //    hienThi(hour_1, 0b00000001);
; 0000 0037 //    hienThi(hour_2, 0b00001000);
; 0000 0038 //    hienThi(min_1, 0b00010000);
; 0000 0039 //    hienThi(min_2, 0b01000000);
; 0000 003A 
; 0000 003B     glcd_clear();
;PCODE: $0000015A VOL: 0
; 0000 003C     itoa(hour_1, buf);
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
; 0000 003D     glcd_outtext(buf);
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0000 003E     itoa(hour_2, buf);
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
; 0000 003F     glcd_outtext(buf);
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
; 0000 0040     glcd_putchar(':');
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0000 0041     itoa(min_1, buf);
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0000 0042     glcd_outtext(buf);
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 0043     itoa(min_2, buf);
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 0044     glcd_outtext(buf);
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
; 0000 0045 
; 0000 0046 
; 0000 0047 }
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;
;// H?m ch?nh
;void main(void)
; 0000 004B {
;PCODE: $00000177 VOL: 0
; 0000 004C     // 2 led
; 0000 004D     DDRD.4 = 1;
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
; 0000 004E     DDRD.5 = 1;
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
; 0000 004F     // BT 1, 2
; 0000 0050     PORTB.2 = 1;
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0000 0051     PORTB.3 = 1;
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
; 0000 0052     PORTD.7 = 1;
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0000 0053     // lcd
; 0000 0054     DDRD.7 = 1;
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
; 0000 0055     DDRB.4 = 1;
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
; 0000 0056     // servo
; 0000 0057     DDRC.7 = 1;
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
; 0000 0058     DDRF = 0xFF;
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
; 0000 0059     DDRD = 0xFF;
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
; 0000 005A     DDRA.7 = 1;
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0000 005B     // Kh?i t?o GLCD v? c?c thi?t b? ngo?i vi
; 0000 005C     init_glcd(4, 66);
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
; 0000 005D     init_lcd();
;PCODE: $00000193 VOL: 0
; 0000 005E     init_timer();
;PCODE: $00000194 VOL: 0
; 0000 005F     i2c_init();
;PCODE: $00000195 VOL: 0
; 0000 0060     rtc_init(0, 0, 0);
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
; 0000 0061 
; 0000 0062 #asm("sei")  // Cho ph?p ng?t
;PCODE: $0000019C VOL: 0
	sei
;PCODE: $0000019D VOL: 0
; 0000 0063 
; 0000 0064     // ??m b?o servo kh?ng ho?t d?ng khi kh?i d?ng
; 0000 0065     servo_1 = 0;
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
; 0000 0066     dung_DC();
;PCODE: $000001A0 VOL: 0
; 0000 0067     while (1)
;PCODE: $000001A1 VOL: 0
; 0000 0068     {
; 0000 0069         // Ki?m tra c?ng t?c 1 (T?m d?ng)
; 0000 006A         if (PINB.2 == 0)
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
; 0000 006B         {
; 0000 006C             int dem_nguoc = 5;
; 0000 006D             while(dem_nguoc != -1){
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;	dem_nguoc -> Y+0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
; 0000 006E                 char buffer[10];
; 0000 006F                 itoa(dem_nguoc, buffer);
;PCODE: $000001AE VOL: 0
;	dem_nguoc -> Y+10
;	buffer -> Y+0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
; 0000 0070                 //hienThi(dem_nguoc,0b01000000);
; 0000 0071                 glcd_clear();
;PCODE: $000001B3 VOL: 0
; 0000 0072                 glcd_outtextxy(15, 15, buffer);
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
; 0000 0073                 lcd_clear();
;PCODE: $000001BA VOL: 0
; 0000 0074                 lcd_puts(buffer);
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
; 0000 0075                 dem_nguoc--;
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
; 0000 0076                 delay_ms(1000);
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
; 0000 0077             }
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
; 0000 0078             if (dem_nguoc == -1){
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
; 0000 0079                 quay_DC();
;PCODE: $000001C8 VOL: 0
; 0000 007A                 glcd_clear();
;PCODE: $000001C9 VOL: 0
; 0000 007B                 glcd_outtextxy(15, 15, "DANG CHO CA AN...");
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
; 0000 007C 
; 0000 007D                 lcd_clear();
;PCODE: $000001D1 VOL: 0
; 0000 007E                 lcd_gotoxy(0, 0);
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
; 0000 007F                 lcd_putsf("DANG CHO CA AN:");
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
; 0000 0080                 delay_ms(5000);
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
; 0000 0081             }
; 0000 0082         }
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
; 0000 0083         cap_nhat_thoi_gian();
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
; 0000 0084         dung_DC();
;PCODE: $000001DF VOL: 0
; 0000 0085     }
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
; 0000 0086 }
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0

	.DSEG
_0x46:
	.BYTE 0x12
